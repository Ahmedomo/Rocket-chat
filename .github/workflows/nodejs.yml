name: Node CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [8.15]
        mongodb-version: ["3.4"]

    steps:
    - uses: actions/checkout@v1 
      
    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          
    - name: Cache meteor local
      uses: actions/cache@v1
      with:
        path: ./.meteor/local
        key: ${{ runner.OS }}-meteor-cache-${{ hashFiles('.meteor/versions') }}
        restore-keys: |
          ${{ runner.OS }}-meteor-cache-${{ env.cache-name }}-
          ${{ runner.OS }}-meteor-cache-

    - name: Cache meteor
      uses: actions/cache@v1
      with:
        path: ~/.meteor
        key: ${{ runner.OS }}-meteor-${{ hashFiles('.meteor/release') }}
        restore-keys: |
          ${{ runner.OS }}-meteor-${{ env.cache-name }}-
          ${{ runner.OS }}-meteor-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Meteor
      run: |
        # Restore bin from cache
        set +e
        METEOR_SYMLINK_TARGET=$(readlink ~/.meteor/meteor)
        METEOR_TOOL_DIRECTORY=$(dirname "$METEOR_SYMLINK_TARGET")
        set -e
        LAUNCHER=$HOME/.meteor/$METEOR_TOOL_DIRECTORY/scripts/admin/launch-meteor
        if [ -e $LAUNCHER ]
        then
          echo "Cached Meteor bin found, restoring it"
          sudo cp "$LAUNCHER" "/usr/local/bin/meteor"
        else
          echo "No cached Meteor bin found."
        fi

        # only install meteor if bin isn't found
        command -v meteor >/dev/null 2>&1 || curl https://install.meteor.com | sed s/--progress-bar/-sL/g | /bin/sh

    - name: Versions
      run: |
        npm --versions
        node -v
        meteor --version
        meteor npm --versions
        meteor node -v
        git version
        echo $GITHUB_REF

    - name: npm install
      run: |
        meteor npm install
        
    - name: Launch MongoDB
      uses: wbari/start-mongoDB@v0.2
      with:
        mongoDBVersion: ${{ matrix.mongodb-version }}

    - name: npm lint and test
      run: |
        npm run lint
        npm run testunit
      env:
        CI: true
        MONGO_URL: mongodb://localhost:27017


    # TODO: Fix env variables
    - name: Build Rocket.Chat
      env:
        TOOL_NODE_FLAGS: --max_old_space_size=3072
      run: |
        if [[ $CIRCLE_TAG ]] || [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
          meteor reset;
        fi

        export CIRCLE_PR_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"
        if [[ -z $CIRCLE_PR_NUMBER ]]; then
          meteor build --server-only --directory /tmp/build-test
        else
          export METEOR_PROFILE=1000
          meteor build --server-only --directory --debug /tmp/build-test
        fi;
