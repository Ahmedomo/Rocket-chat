on: workflow_dispatch

name: PUSH to Amazon ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: build_and_test.yml
        workflow_conclusion: success
        branch: develop_pwa
        name: build
        path: /tmp/build
        
    - name: Unpack build
      run: |
        cd /tmp/build
        tar xzf Rocket.Chat.tar.gz
        rm Rocket.Chat.tar.gz
        cp "${GITHUB_WORKSPACE}/.docker/Dockerfile" .

    # - name: Checkout
    #   uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: widechat
        # IMAGE_TAG: ${{ github.sha }}
        IMAGE_TAG: ear-test

      run: |
        # Build a docker container and push it to ECR
        cd /tmp/build
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
