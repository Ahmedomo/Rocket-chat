on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      site-url:
        required: true
        type: string

jobs:
  run-rocket-chat:
    name: Start up Rocket.Chat
    runs-on: ubuntu-latest
    steps:
      - run: |
          LOWERCASE_REPOSITORY=$(echo "${{ github.repository_owner }}" | tr "[:upper:]" "[:lower:]")

          IMAGE_TAG="pr-${{ github.event.number }}"

          # TODO this needs to be different on develop and on release
          IMAGE_NAME="ghcr.io/${LOWERCASE_REPOSITORY}/rocket.chat:${IMAGE_TAG}"

          docker run --name rocketchat -d \
            --link mongo \
            --link nats \
            -p 3000:3000 \
            -e TEST_MODE=true \
            -e MONGO_URL=mongodb://mongo:27017/rocketchat \
            -e MONGO_OPLOG_URL=mongodb://mongo:27017/local \
            -e TRANSPORTER=nats://nats:4222 \
            -e ENTERPRISE_LICENSE="${{ secrets.ENTERPRISE_LICENSE }}" \
            -e SKIP_PROCESS_EVENT_REGISTRATION=true \
            -e OVERWRITE_SETTING_Site_Url=${{ inputs.site-url }} \
            ${{ inputs.image }}

          until echo "$(docker logs rocketchat --since $NOW)" | grep -q "SERVER RUNNING"; do
            echo "Waiting Rocket.Chat to start up"
            ((c++)) && ((c==10)) && exit 1
            sleep 10
          done

          # spin up all micro services
          docker run --name stream-hub -d \
            --link mongo \
            --link nats \
            -e MONGO_URL=mongodb://mongo:27017/rocketchat \
            -e MONGO_OPLOG_URL=mongodb://mongo:27017/local \
            -e TRANSPORTER=nats://nats:4222 \
            ghcr.io/${LOWERCASE_REPOSITORY}/stream-hub-service:${IMAGE_TAG}

          docker run --name account -d \
            --link mongo \
            --link nats \
            -e MONGO_URL=mongodb://mongo:27017/rocketchat \
            -e MONGO_OPLOG_URL=mongodb://mongo:27017/local \
            -e TRANSPORTER=nats://nats:4222 \
            ghcr.io/${LOWERCASE_REPOSITORY}/account-service:${IMAGE_TAG}

          docker run --name authorization -d \
            --link mongo \
            --link nats \
            -e MONGO_URL=mongodb://mongo:27017/rocketchat \
            -e MONGO_OPLOG_URL=mongodb://mongo:27017/local \
            -e TRANSPORTER=nats://nats:4222 \
            ghcr.io/${LOWERCASE_REPOSITORY}/authorization-service:${IMAGE_TAG}

          docker run --name ddp-streamer -d \
            --link mongo \
            --link nats \
            -p 4000:4000 \
            -e PORT=4000 \
            -e MONGO_URL=mongodb://mongo:27017/rocketchat \
            -e MONGO_OPLOG_URL=mongodb://mongo:27017/local \
            -e TRANSPORTER=nats://nats:4222 \
            ghcr.io/${LOWERCASE_REPOSITORY}/ddp-streamer-service:${IMAGE_TAG}

          docker run --name presence -d \
            --link mongo \
            --link nats \
            -e MONGO_URL=mongodb://mongo:27017/rocketchat \
            -e MONGO_OPLOG_URL=mongodb://mongo:27017/local \
            -e TRANSPORTER=nats://nats:4222 \
            ghcr.io/${LOWERCASE_REPOSITORY}/presence-service:${IMAGE_TAG}
