{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/server/methods/loadHistory.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"server/methods/loadHistory.js","filename":"/home/weslley/Documents/projects/Rocket.Chat/server/methods/loadHistory.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/server/methods/loadHistory.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/methods/loadHistory.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Subscriptions, Rooms;\nmodule.link(\"../../app/models/server\", {\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 2);\nlet canAccessRoom, hasPermission, roomAccessAttributes;\nmodule.link(\"../../app/authorization/server\", {\n  canAccessRoom(v) {\n    canAccessRoom = v;\n  },\n\n  hasPermission(v) {\n    hasPermission = v;\n  },\n\n  roomAccessAttributes(v) {\n    roomAccessAttributes = v;\n  }\n\n}, 3);\nlet settings;\nmodule.link(\"../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 4);\nlet loadMessageHistory;\nmodule.link(\"../../app/lib/server\", {\n  loadMessageHistory(v) {\n    loadMessageHistory = v;\n  }\n\n}, 5);\nMeteor.methods({\n  loadHistory(rid, end) {\n    let limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 20;\n    let ls = arguments.length > 3 ? arguments[3] : undefined;\n    let showThreadMessages = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    check(rid, String);\n\n    if (!Meteor.userId() && settings.get('Accounts_AllowAnonymousRead') === false) {\n      throw new Meteor.Error('error-invalid-user', 'Invalid user', {\n        method: 'loadHistory'\n      });\n    }\n\n    const fromId = Meteor.userId();\n    const room = Rooms.findOneById(rid, {\n      fields: _objectSpread(_objectSpread({}, roomAccessAttributes), {}, {\n        t: 1\n      })\n    });\n\n    if (!room) {\n      return false;\n    }\n\n    if (!canAccessRoom(room, {\n      _id: fromId\n    })) {\n      return false;\n    }\n\n    const canAnonymous = settings.get('Accounts_AllowAnonymousRead');\n    const canPreview = hasPermission(fromId, 'preview-c-room');\n\n    if (room.t === 'c' && !canAnonymous && !canPreview && !Subscriptions.findOneByRoomIdAndUserId(rid, fromId, {\n      fields: {\n        _id: 1\n      }\n    })) {\n      return false;\n    }\n\n    return loadMessageHistory({\n      userId: fromId,\n      rid,\n      end,\n      limit,\n      ls,\n      showThreadMessages\n    });\n  }\n\n});","map":{"version":3,"sources":["server/methods/loadHistory.js"],"names":["_objectSpread","module","link","default","v","Meteor","check","Subscriptions","Rooms","canAccessRoom","hasPermission","roomAccessAttributes","settings","loadMessageHistory","methods","loadHistory","rid","end","limit","ls","showThreadMessages","String","userId","get","Error","method","fromId","room","findOneById","fields","t","_id","canAnonymous","canPreview","findOneByRoomIdAndUserId"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\n\nimport { Subscriptions, Rooms } from '../../app/models/server';\nimport { canAccessRoom, hasPermission, roomAccessAttributes } from '../../app/authorization/server';\nimport { settings } from '../../app/settings/server';\nimport { loadMessageHistory } from '../../app/lib/server';\n\nMeteor.methods({\n\tloadHistory(rid, end, limit = 20, ls, showThreadMessages = true) {\n\t\tcheck(rid, String);\n\n\t\tif (!Meteor.userId() && settings.get('Accounts_AllowAnonymousRead') === false) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'loadHistory',\n\t\t\t});\n\t\t}\n\n\t\tconst fromId = Meteor.userId();\n\n\t\tconst room = Rooms.findOneById(rid, { fields: { ...roomAccessAttributes, t: 1 } });\n\t\tif (!room) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!canAccessRoom(room, { _id: fromId })) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst canAnonymous = settings.get('Accounts_AllowAnonymousRead');\n\t\tconst canPreview = hasPermission(fromId, 'preview-c-room');\n\n\t\tif (room.t === 'c' && !canAnonymous && !canPreview && !Subscriptions.findOneByRoomIdAndUserId(rid, fromId, { fields: { _id: 1 } })) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn loadMessageHistory({ userId: fromId, rid, end, limit, ls, showThreadMessages });\n\t},\n});\n"]},"sourceType":"module","hash":"e966a09b230b3866567c34c2761d0a653f313000"}
