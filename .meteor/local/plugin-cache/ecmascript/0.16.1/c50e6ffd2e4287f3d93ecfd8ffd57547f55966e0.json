{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/authentication/server/startup/index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/authentication/server/startup/index.js","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/authentication/server/startup/index.js","targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/authentication/server/startup/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authentication/server/startup/index.js"}},"code":"module.export({\n  MAX_RESUME_LOGIN_TOKENS: () => MAX_RESUME_LOGIN_TOKENS\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 3);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 4);\nlet escapeRegExp, escapeHTML;\nmodule.link(\"@rocket.chat/string-helpers\", {\n  escapeRegExp(v) {\n    escapeRegExp = v;\n  },\n\n  escapeHTML(v) {\n    escapeHTML = v;\n  }\n\n}, 5);\nlet Mailer;\nmodule.link(\"../../../mailer/server/api\", {\n  \"*\"(v) {\n    Mailer = v;\n  }\n\n}, 6);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 7);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 8);\nlet Settings, Users;\nmodule.link(\"../../../models/server\", {\n  Settings(v) {\n    Settings = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 9);\nlet Roles, UsersRaw;\nmodule.link(\"../../../models/server/raw\", {\n  Roles(v) {\n    Roles = v;\n  },\n\n  Users(v) {\n    UsersRaw = v;\n  }\n\n}, 10);\nlet addUserRoles;\nmodule.link(\"../../../../server/lib/roles/addUserRoles\", {\n  addUserRoles(v) {\n    addUserRoles = v;\n  }\n\n}, 11);\nlet getAvatarSuggestionForUser;\nmodule.link(\"../../../lib/server/functions/getAvatarSuggestionForUser\", {\n  getAvatarSuggestionForUser(v) {\n    getAvatarSuggestionForUser = v;\n  }\n\n}, 12);\nlet parseCSV;\nmodule.link(\"../../../../lib/utils/parseCSV\", {\n  parseCSV(v) {\n    parseCSV = v;\n  }\n\n}, 13);\nlet isValidAttemptByUser, isValidLoginAttemptByIp;\nmodule.link(\"../lib/restrictLoginAttempts\", {\n  isValidAttemptByUser(v) {\n    isValidAttemptByUser = v;\n  },\n\n  isValidLoginAttemptByIp(v) {\n    isValidLoginAttemptByIp = v;\n  }\n\n}, 14);\nmodule.link(\"./settings\");\nlet getClientAddress;\nmodule.link(\"../../../../server/lib/getClientAddress\", {\n  getClientAddress(v) {\n    getClientAddress = v;\n  }\n\n}, 15);\nlet getNewUserRoles;\nmodule.link(\"../../../../server/services/user/lib/getNewUserRoles\", {\n  getNewUserRoles(v) {\n    getNewUserRoles = v;\n  }\n\n}, 16);\nAccounts.config({\n  forbidClientAccountCreation: true\n});\nMeteor.startup(() => {\n  settings.watchMultiple(['Accounts_LoginExpiration', 'Site_Name', 'From_Email'], () => {\n    Accounts._options.loginExpirationInDays = settings.get('Accounts_LoginExpiration');\n    Accounts.emailTemplates.siteName = settings.get('Site_Name');\n    Accounts.emailTemplates.from = \"\".concat(settings.get('Site_Name'), \" <\").concat(settings.get('From_Email'), \">\");\n  });\n});\nAccounts.emailTemplates.userToActivate = {\n  subject() {\n    const subject = TAPi18n.__('Accounts_Admin_Email_Approval_Needed_Subject_Default');\n\n    const siteName = settings.get('Site_Name');\n    return \"[\".concat(siteName, \"] \").concat(subject);\n  },\n\n  html() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const email = options.reason ? 'Accounts_Admin_Email_Approval_Needed_With_Reason_Default' : 'Accounts_Admin_Email_Approval_Needed_Default';\n    return Mailer.replace(TAPi18n.__(email), {\n      name: escapeHTML(options.name),\n      email: escapeHTML(options.email),\n      reason: escapeHTML(options.reason)\n    });\n  }\n\n};\nAccounts.emailTemplates.userActivated = {\n  subject(_ref) {\n    let {\n      active,\n      username\n    } = _ref;\n    const activated = username ? 'Activated' : 'Approved';\n    const action = active ? activated : 'Deactivated';\n    const subject = \"Accounts_Email_\".concat(action, \"_Subject\");\n    const siteName = settings.get('Site_Name');\n    return \"[\".concat(siteName, \"] \").concat(TAPi18n.__(subject));\n  },\n\n  html(_ref2) {\n    let {\n      active,\n      name,\n      username\n    } = _ref2;\n    const activated = username ? 'Activated' : 'Approved';\n    const action = active ? activated : 'Deactivated';\n    return Mailer.replace(TAPi18n.__(\"Accounts_Email_\".concat(action)), {\n      name: escapeHTML(name)\n    });\n  }\n\n};\nlet verifyEmailTemplate = '';\nlet enrollAccountTemplate = '';\nlet resetPasswordTemplate = '';\nMeteor.startup(() => {\n  Mailer.getTemplateWrapped('Verification_Email', value => {\n    verifyEmailTemplate = value;\n  });\n  Mailer.getTemplateWrapped('Accounts_Enrollment_Email', value => {\n    enrollAccountTemplate = value;\n  });\n  Mailer.getTemplateWrapped('Forgot_Password_Email', value => {\n    resetPasswordTemplate = value;\n  });\n});\n\nAccounts.emailTemplates.verifyEmail.html = function (userModel, url) {\n  return Mailer.replace(verifyEmailTemplate, {\n    Verification_Url: url,\n    name: userModel.name\n  });\n};\n\nAccounts.emailTemplates.verifyEmail.subject = function () {\n  const subject = settings.get('Verification_Email_Subject');\n  return Mailer.replace(subject || '');\n};\n\nAccounts.urls.resetPassword = function (token) {\n  return Meteor.absoluteUrl(\"reset-password/\".concat(token));\n};\n\nAccounts.emailTemplates.resetPassword.subject = function (userModel) {\n  return Mailer.replace(settings.get('Forgot_Password_Email_Subject') || '', {\n    name: userModel.name\n  });\n};\n\nAccounts.emailTemplates.resetPassword.html = function (userModel, url) {\n  return Mailer.replacekey(Mailer.replace(resetPasswordTemplate, {\n    name: userModel.name\n  }), 'Forgot_Password_Url', url);\n};\n\nAccounts.emailTemplates.enrollAccount.subject = function (user) {\n  const subject = settings.get('Accounts_Enrollment_Email_Subject');\n  return Mailer.replace(subject, user);\n};\n\nAccounts.emailTemplates.enrollAccount.html = function () {\n  let user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Mailer.replace(enrollAccountTemplate, {\n    name: escapeHTML(user.name),\n    email: user.emails && user.emails[0] && escapeHTML(user.emails[0].address)\n  });\n};\n\nconst getLinkedInName = _ref3 => {\n  let {\n    firstName,\n    lastName\n  } = _ref3;\n  const {\n    preferredLocale,\n    localized: firstNameLocalized\n  } = firstName;\n  const {\n    localized: lastNameLocalized\n  } = lastName; // LinkedIn new format\n\n  if (preferredLocale && firstNameLocalized && preferredLocale.language && preferredLocale.country) {\n    const locale = \"\".concat(preferredLocale.language, \"_\").concat(preferredLocale.country);\n\n    if (firstNameLocalized[locale] && lastNameLocalized[locale]) {\n      return \"\".concat(firstNameLocalized[locale], \" \").concat(lastNameLocalized[locale]);\n    }\n\n    if (firstNameLocalized[locale]) {\n      return firstNameLocalized[locale];\n    }\n  } // LinkedIn old format\n\n\n  if (!lastName) {\n    return firstName;\n  }\n\n  return \"\".concat(firstName, \" \").concat(lastName);\n};\n\nAccounts.onCreateUser(function (options) {\n  let user = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  callbacks.run('beforeCreateUser', options, user);\n  user.status = 'offline';\n  user.active = user.active !== undefined ? user.active : !settings.get('Accounts_ManuallyApproveNewUsers');\n\n  if (!user.name) {\n    if (options.profile) {\n      if (options.profile.name) {\n        user.name = options.profile.name;\n      } else if (options.profile.firstName) {\n        // LinkedIn format\n        user.name = getLinkedInName(options.profile);\n      }\n    }\n  }\n\n  if (user.services) {\n    const verified = settings.get('Accounts_Verify_Email_For_External_Accounts');\n\n    for (const service of Object.values(user.services)) {\n      if (!user.name) {\n        user.name = service.name || service.username;\n      }\n\n      if (!user.emails && service.email) {\n        user.emails = [{\n          address: service.email,\n          verified\n        }];\n      }\n    }\n  }\n\n  if (!user.active) {\n    const destinations = [];\n    const usersInRole = Promise.await(Roles.findUsersInRole('admin'));\n    Promise.await(usersInRole.toArray()).forEach(adminUser => {\n      if (Array.isArray(adminUser.emails)) {\n        adminUser.emails.forEach(email => {\n          destinations.push(\"\".concat(adminUser.name, \"<\").concat(email.address, \">\"));\n        });\n      }\n    });\n    const email = {\n      to: destinations,\n      from: settings.get('From_Email'),\n      subject: Accounts.emailTemplates.userToActivate.subject(),\n      html: Accounts.emailTemplates.userToActivate.html(options)\n    };\n    Mailer.send(email);\n  }\n\n  callbacks.run('onCreateUser', options, user);\n  return user;\n});\nAccounts.insertUserDoc = _.wrap(Accounts.insertUserDoc, function (insertUserDoc, options, user) {\n  const globalRoles = [];\n\n  if (Match.test(user.globalRoles, [String]) && user.globalRoles.length > 0) {\n    globalRoles.push(...user.globalRoles);\n  }\n\n  delete user.globalRoles;\n\n  if (user.services && !user.services.password) {\n    const defaultAuthServiceRoles = parseCSV(settings.get('Accounts_Registration_AuthenticationServices_Default_Roles') || '');\n\n    if (defaultAuthServiceRoles.length > 0) {\n      globalRoles.push(...defaultAuthServiceRoles);\n    }\n  }\n\n  const roles = getNewUserRoles(globalRoles);\n\n  if (!user.type) {\n    user.type = 'user';\n  }\n\n  if (settings.get('Accounts_TwoFactorAuthentication_By_Email_Auto_Opt_In')) {\n    user.services = user.services || {};\n    user.services.email2fa = {\n      enabled: true,\n      changedAt: new Date()\n    };\n  }\n\n  const _id = insertUserDoc.call(Accounts, options, user);\n\n  user = Meteor.users.findOne({\n    _id\n  });\n\n  if (user.username) {\n    if (options.joinDefaultChannels !== false && user.joinDefaultChannels !== false) {\n      Meteor.runAsUser(_id, function () {\n        return Meteor.call('joinDefaultChannels', options.joinDefaultChannelsSilenced);\n      });\n    }\n\n    if (user.type !== 'visitor') {\n      Meteor.defer(function () {\n        return callbacks.run('afterCreateUser', user);\n      });\n    }\n\n    if (settings.get('Accounts_SetDefaultAvatar') === true) {\n      const avatarSuggestions = Promise.await(getAvatarSuggestionForUser(user));\n      Object.keys(avatarSuggestions).some(service => {\n        const avatarData = avatarSuggestions[service];\n\n        if (service !== 'gravatar') {\n          Meteor.runAsUser(_id, function () {\n            return Meteor.call('setAvatarFromService', avatarData.blob, '', service);\n          });\n          return true;\n        }\n\n        return false;\n      });\n    }\n  }\n  /**\n   * if settings shows setup wizard to be pending\n   * and no admin's been found,\n   * and existing role list doesn't include admin\n   * create this user admin.\n   * count this as the completion of setup wizard step 1.\n   */\n\n\n  const hasAdmin = Users.findOneByRolesAndType('admin', 'user', {\n    fields: {\n      _id: 1\n    }\n  });\n\n  if (!roles.includes('admin') && !hasAdmin) {\n    roles.push('admin');\n\n    if (settings.get('Show_Setup_Wizard') === 'pending') {\n      Settings.updateValueById('Show_Setup_Wizard', 'in_progress');\n    }\n  }\n\n  addUserRoles(_id, roles);\n  return _id;\n});\nAccounts.validateLoginAttempt(function (login) {\n  login = callbacks.run('beforeValidateLogin', login);\n\n  if (!Promise.await(isValidLoginAttemptByIp(getClientAddress(login.connection)))) {\n    throw new Meteor.Error('error-login-blocked-for-ip', 'Login has been temporarily blocked For IP', {\n      function: 'Accounts.validateLoginAttempt'\n    });\n  }\n\n  if (!Promise.await(isValidAttemptByUser(login))) {\n    throw new Meteor.Error('error-login-blocked-for-user', 'Login has been temporarily blocked For User', {\n      function: 'Accounts.validateLoginAttempt'\n    });\n  }\n\n  if (login.allowed !== true) {\n    return login.allowed;\n  }\n\n  if (login.user.type === 'visitor') {\n    return true;\n  }\n\n  if (login.user.type === 'app') {\n    throw new Meteor.Error('error-app-user-is-not-allowed-to-login', 'App user is not allowed to login', {\n      function: 'Accounts.validateLoginAttempt'\n    });\n  }\n\n  if (!!login.user.active !== true) {\n    throw new Meteor.Error('error-user-is-not-activated', 'User is not activated', {\n      function: 'Accounts.validateLoginAttempt'\n    });\n  }\n\n  if (!login.user.roles || !Array.isArray(login.user.roles)) {\n    throw new Meteor.Error('error-user-has-no-roles', 'User has no roles', {\n      function: 'Accounts.validateLoginAttempt'\n    });\n  }\n\n  if (login.user.roles.includes('admin') === false && login.type === 'password' && settings.get('Accounts_EmailVerification') === true) {\n    const validEmail = login.user.emails.filter(email => email.verified === true);\n\n    if (validEmail.length === 0) {\n      throw new Meteor.Error('error-invalid-email', 'Invalid email __email__');\n    }\n  }\n\n  login = callbacks.run('onValidateLogin', login);\n  Users.updateLastLoginById(login.user._id);\n  Meteor.defer(function () {\n    return callbacks.run('afterValidateLogin', login);\n  });\n  return true;\n});\nAccounts.validateNewUser(function (user) {\n  if (user.type === 'visitor') {\n    return true;\n  }\n\n  if (settings.get('Accounts_Registration_AuthenticationServices_Enabled') === false && settings.get('LDAP_Enable') === false && !(user.services && user.services.password)) {\n    throw new Meteor.Error('registration-disabled-authentication-services', 'User registration is disabled for authentication services');\n  }\n\n  return true;\n});\nAccounts.validateNewUser(function (user) {\n  var _domainWhiteList;\n\n  if (user.type === 'visitor') {\n    return true;\n  }\n\n  let domainWhiteList = settings.get('Accounts_AllowedDomainsList');\n\n  if (_.isEmpty((_domainWhiteList = domainWhiteList) === null || _domainWhiteList === void 0 ? void 0 : _domainWhiteList.trim())) {\n    return true;\n  }\n\n  domainWhiteList = domainWhiteList.split(',').map(domain => domain.trim());\n\n  if (user.emails && user.emails.length > 0) {\n    const email = user.emails[0].address;\n    const inWhiteList = domainWhiteList.some(domain => email.match(\"@\".concat(escapeRegExp(domain), \"$\")));\n\n    if (inWhiteList === false) {\n      throw new Meteor.Error('error-invalid-domain');\n    }\n  }\n\n  return true;\n});\nconst MAX_RESUME_LOGIN_TOKENS = parseInt(process.env.MAX_RESUME_LOGIN_TOKENS) || 50;\nAccounts.onLogin(_ref4 => Promise.asyncApply(() => {\n  let {\n    user\n  } = _ref4;\n\n  if (!user || !user.services || !user.services.resume || !user.services.resume.loginTokens) {\n    return;\n  }\n\n  if (user.services.resume.loginTokens.length < MAX_RESUME_LOGIN_TOKENS) {\n    return;\n  }\n\n  const {\n    tokens\n  } = Promise.await(UsersRaw.findAllResumeTokensByUserId(user._id))[0];\n\n  if (tokens.length >= MAX_RESUME_LOGIN_TOKENS) {\n    const oldestDate = tokens.reverse()[MAX_RESUME_LOGIN_TOKENS - 1];\n    Users.removeOlderResumeTokensByUserId(user._id, oldestDate.when);\n  }\n}));","map":{"version":3,"sources":["app/authentication/server/startup/index.js"],"names":["module","export","MAX_RESUME_LOGIN_TOKENS","Meteor","link","v","Match","Accounts","TAPi18n","_","default","escapeRegExp","escapeHTML","Mailer","settings","callbacks","Settings","Users","Roles","UsersRaw","addUserRoles","getAvatarSuggestionForUser","parseCSV","isValidAttemptByUser","isValidLoginAttemptByIp","getClientAddress","getNewUserRoles","config","forbidClientAccountCreation","startup","watchMultiple","_options","loginExpirationInDays","get","emailTemplates","siteName","from","userToActivate","subject","__","html","options","email","reason","replace","name","userActivated","active","username","activated","action","verifyEmailTemplate","enrollAccountTemplate","resetPasswordTemplate","getTemplateWrapped","value","verifyEmail","userModel","url","Verification_Url","urls","resetPassword","token","absoluteUrl","replacekey","enrollAccount","user","emails","address","getLinkedInName","firstName","lastName","preferredLocale","localized","firstNameLocalized","lastNameLocalized","language","country","locale","onCreateUser","run","status","undefined","profile","services","verified","service","Object","values","destinations","usersInRole","Promise","await","findUsersInRole","toArray","forEach","adminUser","Array","isArray","push","to","send","insertUserDoc","wrap","globalRoles","test","String","length","password","defaultAuthServiceRoles","roles","type","email2fa","enabled","changedAt","Date","_id","call","users","findOne","joinDefaultChannels","runAsUser","joinDefaultChannelsSilenced","defer","avatarSuggestions","keys","some","avatarData","blob","hasAdmin","findOneByRolesAndType","fields","includes","updateValueById","validateLoginAttempt","login","connection","Error","function","allowed","validEmail","filter","updateLastLoginById","validateNewUser","domainWhiteList","isEmpty","trim","split","map","domain","inWhiteList","match","parseInt","process","env","onLogin","resume","loginTokens","tokens","findAllResumeTokensByUserId","oldestDate","reverse","removeOlderResumeTokensByUserId","when"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match } from 'meteor/check';\nimport { Accounts } from 'meteor/accounts-base';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\nimport _ from 'underscore';\nimport { escapeRegExp, escapeHTML } from '@rocket.chat/string-helpers';\n\nimport * as Mailer from '../../../mailer/server/api';\nimport { settings } from '../../../settings/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Settings, Users } from '../../../models/server';\nimport { Roles, Users as UsersRaw } from '../../../models/server/raw';\nimport { addUserRoles } from '../../../../server/lib/roles/addUserRoles';\nimport { getAvatarSuggestionForUser } from '../../../lib/server/functions/getAvatarSuggestionForUser';\nimport { parseCSV } from '../../../../lib/utils/parseCSV';\nimport { isValidAttemptByUser, isValidLoginAttemptByIp } from '../lib/restrictLoginAttempts';\nimport './settings';\nimport { getClientAddress } from '../../../../server/lib/getClientAddress';\nimport { getNewUserRoles } from '../../../../server/services/user/lib/getNewUserRoles';\n\nAccounts.config({\n\tforbidClientAccountCreation: true,\n});\n\nMeteor.startup(() => {\n\tsettings.watchMultiple(['Accounts_LoginExpiration', 'Site_Name', 'From_Email'], () => {\n\t\tAccounts._options.loginExpirationInDays = settings.get('Accounts_LoginExpiration');\n\n\t\tAccounts.emailTemplates.siteName = settings.get('Site_Name');\n\n\t\tAccounts.emailTemplates.from = `${settings.get('Site_Name')} <${settings.get('From_Email')}>`;\n\t});\n});\n\nAccounts.emailTemplates.userToActivate = {\n\tsubject() {\n\t\tconst subject = TAPi18n.__('Accounts_Admin_Email_Approval_Needed_Subject_Default');\n\t\tconst siteName = settings.get('Site_Name');\n\n\t\treturn `[${siteName}] ${subject}`;\n\t},\n\n\thtml(options = {}) {\n\t\tconst email = options.reason\n\t\t\t? 'Accounts_Admin_Email_Approval_Needed_With_Reason_Default'\n\t\t\t: 'Accounts_Admin_Email_Approval_Needed_Default';\n\n\t\treturn Mailer.replace(TAPi18n.__(email), {\n\t\t\tname: escapeHTML(options.name),\n\t\t\temail: escapeHTML(options.email),\n\t\t\treason: escapeHTML(options.reason),\n\t\t});\n\t},\n};\n\nAccounts.emailTemplates.userActivated = {\n\tsubject({ active, username }) {\n\t\tconst activated = username ? 'Activated' : 'Approved';\n\t\tconst action = active ? activated : 'Deactivated';\n\t\tconst subject = `Accounts_Email_${action}_Subject`;\n\t\tconst siteName = settings.get('Site_Name');\n\n\t\treturn `[${siteName}] ${TAPi18n.__(subject)}`;\n\t},\n\n\thtml({ active, name, username }) {\n\t\tconst activated = username ? 'Activated' : 'Approved';\n\t\tconst action = active ? activated : 'Deactivated';\n\n\t\treturn Mailer.replace(TAPi18n.__(`Accounts_Email_${action}`), {\n\t\t\tname: escapeHTML(name),\n\t\t});\n\t},\n};\n\nlet verifyEmailTemplate = '';\nlet enrollAccountTemplate = '';\nlet resetPasswordTemplate = '';\nMeteor.startup(() => {\n\tMailer.getTemplateWrapped('Verification_Email', (value) => {\n\t\tverifyEmailTemplate = value;\n\t});\n\tMailer.getTemplateWrapped('Accounts_Enrollment_Email', (value) => {\n\t\tenrollAccountTemplate = value;\n\t});\n\tMailer.getTemplateWrapped('Forgot_Password_Email', (value) => {\n\t\tresetPasswordTemplate = value;\n\t});\n});\n\nAccounts.emailTemplates.verifyEmail.html = function (userModel, url) {\n\treturn Mailer.replace(verifyEmailTemplate, { Verification_Url: url, name: userModel.name });\n};\n\nAccounts.emailTemplates.verifyEmail.subject = function () {\n\tconst subject = settings.get('Verification_Email_Subject');\n\treturn Mailer.replace(subject || '');\n};\n\nAccounts.urls.resetPassword = function (token) {\n\treturn Meteor.absoluteUrl(`reset-password/${token}`);\n};\n\nAccounts.emailTemplates.resetPassword.subject = function (userModel) {\n\treturn Mailer.replace(settings.get('Forgot_Password_Email_Subject') || '', {\n\t\tname: userModel.name,\n\t});\n};\n\nAccounts.emailTemplates.resetPassword.html = function (userModel, url) {\n\treturn Mailer.replacekey(\n\t\tMailer.replace(resetPasswordTemplate, {\n\t\t\tname: userModel.name,\n\t\t}),\n\t\t'Forgot_Password_Url',\n\t\turl,\n\t);\n};\n\nAccounts.emailTemplates.enrollAccount.subject = function (user) {\n\tconst subject = settings.get('Accounts_Enrollment_Email_Subject');\n\treturn Mailer.replace(subject, user);\n};\n\nAccounts.emailTemplates.enrollAccount.html = function (user = {} /* , url*/) {\n\treturn Mailer.replace(enrollAccountTemplate, {\n\t\tname: escapeHTML(user.name),\n\t\temail: user.emails && user.emails[0] && escapeHTML(user.emails[0].address),\n\t});\n};\n\nconst getLinkedInName = ({ firstName, lastName }) => {\n\tconst { preferredLocale, localized: firstNameLocalized } = firstName;\n\tconst { localized: lastNameLocalized } = lastName;\n\n\t// LinkedIn new format\n\tif (preferredLocale && firstNameLocalized && preferredLocale.language && preferredLocale.country) {\n\t\tconst locale = `${preferredLocale.language}_${preferredLocale.country}`;\n\n\t\tif (firstNameLocalized[locale] && lastNameLocalized[locale]) {\n\t\t\treturn `${firstNameLocalized[locale]} ${lastNameLocalized[locale]}`;\n\t\t}\n\t\tif (firstNameLocalized[locale]) {\n\t\t\treturn firstNameLocalized[locale];\n\t\t}\n\t}\n\n\t// LinkedIn old format\n\tif (!lastName) {\n\t\treturn firstName;\n\t}\n\treturn `${firstName} ${lastName}`;\n};\n\nAccounts.onCreateUser(function (options, user = {}) {\n\tcallbacks.run('beforeCreateUser', options, user);\n\n\tuser.status = 'offline';\n\tuser.active = user.active !== undefined ? user.active : !settings.get('Accounts_ManuallyApproveNewUsers');\n\n\tif (!user.name) {\n\t\tif (options.profile) {\n\t\t\tif (options.profile.name) {\n\t\t\t\tuser.name = options.profile.name;\n\t\t\t} else if (options.profile.firstName) {\n\t\t\t\t// LinkedIn format\n\t\t\t\tuser.name = getLinkedInName(options.profile);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (user.services) {\n\t\tconst verified = settings.get('Accounts_Verify_Email_For_External_Accounts');\n\n\t\tfor (const service of Object.values(user.services)) {\n\t\t\tif (!user.name) {\n\t\t\t\tuser.name = service.name || service.username;\n\t\t\t}\n\n\t\t\tif (!user.emails && service.email) {\n\t\t\t\tuser.emails = [\n\t\t\t\t\t{\n\t\t\t\t\t\taddress: service.email,\n\t\t\t\t\t\tverified,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!user.active) {\n\t\tconst destinations = [];\n\t\tconst usersInRole = Promise.await(Roles.findUsersInRole('admin'));\n\t\tPromise.await(usersInRole.toArray()).forEach((adminUser) => {\n\t\t\tif (Array.isArray(adminUser.emails)) {\n\t\t\t\tadminUser.emails.forEach((email) => {\n\t\t\t\t\tdestinations.push(`${adminUser.name}<${email.address}>`);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tconst email = {\n\t\t\tto: destinations,\n\t\t\tfrom: settings.get('From_Email'),\n\t\t\tsubject: Accounts.emailTemplates.userToActivate.subject(),\n\t\t\thtml: Accounts.emailTemplates.userToActivate.html(options),\n\t\t};\n\n\t\tMailer.send(email);\n\t}\n\n\tcallbacks.run('onCreateUser', options, user);\n\treturn user;\n});\n\nAccounts.insertUserDoc = _.wrap(Accounts.insertUserDoc, function (insertUserDoc, options, user) {\n\tconst globalRoles = [];\n\n\tif (Match.test(user.globalRoles, [String]) && user.globalRoles.length > 0) {\n\t\tglobalRoles.push(...user.globalRoles);\n\t}\n\n\tdelete user.globalRoles;\n\n\tif (user.services && !user.services.password) {\n\t\tconst defaultAuthServiceRoles = parseCSV(settings.get('Accounts_Registration_AuthenticationServices_Default_Roles') || '');\n\n\t\tif (defaultAuthServiceRoles.length > 0) {\n\t\t\tglobalRoles.push(...defaultAuthServiceRoles);\n\t\t}\n\t}\n\n\tconst roles = getNewUserRoles(globalRoles);\n\n\tif (!user.type) {\n\t\tuser.type = 'user';\n\t}\n\n\tif (settings.get('Accounts_TwoFactorAuthentication_By_Email_Auto_Opt_In')) {\n\t\tuser.services = user.services || {};\n\t\tuser.services.email2fa = {\n\t\t\tenabled: true,\n\t\t\tchangedAt: new Date(),\n\t\t};\n\t}\n\n\tconst _id = insertUserDoc.call(Accounts, options, user);\n\n\tuser = Meteor.users.findOne({\n\t\t_id,\n\t});\n\n\tif (user.username) {\n\t\tif (options.joinDefaultChannels !== false && user.joinDefaultChannels !== false) {\n\t\t\tMeteor.runAsUser(_id, function () {\n\t\t\t\treturn Meteor.call('joinDefaultChannels', options.joinDefaultChannelsSilenced);\n\t\t\t});\n\t\t}\n\n\t\tif (user.type !== 'visitor') {\n\t\t\tMeteor.defer(function () {\n\t\t\t\treturn callbacks.run('afterCreateUser', user);\n\t\t\t});\n\t\t}\n\t\tif (settings.get('Accounts_SetDefaultAvatar') === true) {\n\t\t\tconst avatarSuggestions = Promise.await(getAvatarSuggestionForUser(user));\n\t\t\tObject.keys(avatarSuggestions).some((service) => {\n\t\t\t\tconst avatarData = avatarSuggestions[service];\n\t\t\t\tif (service !== 'gravatar') {\n\t\t\t\t\tMeteor.runAsUser(_id, function () {\n\t\t\t\t\t\treturn Meteor.call('setAvatarFromService', avatarData.blob, '', service);\n\t\t\t\t\t});\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * if settings shows setup wizard to be pending\n\t * and no admin's been found,\n\t * and existing role list doesn't include admin\n\t * create this user admin.\n\t * count this as the completion of setup wizard step 1.\n\t */\n\tconst hasAdmin = Users.findOneByRolesAndType('admin', 'user', { fields: { _id: 1 } });\n\tif (!roles.includes('admin') && !hasAdmin) {\n\t\troles.push('admin');\n\t\tif (settings.get('Show_Setup_Wizard') === 'pending') {\n\t\t\tSettings.updateValueById('Show_Setup_Wizard', 'in_progress');\n\t\t}\n\t}\n\n\taddUserRoles(_id, roles);\n\n\treturn _id;\n});\n\nAccounts.validateLoginAttempt(function (login) {\n\tlogin = callbacks.run('beforeValidateLogin', login);\n\n\tif (!Promise.await(isValidLoginAttemptByIp(getClientAddress(login.connection)))) {\n\t\tthrow new Meteor.Error('error-login-blocked-for-ip', 'Login has been temporarily blocked For IP', {\n\t\t\tfunction: 'Accounts.validateLoginAttempt',\n\t\t});\n\t}\n\n\tif (!Promise.await(isValidAttemptByUser(login))) {\n\t\tthrow new Meteor.Error('error-login-blocked-for-user', 'Login has been temporarily blocked For User', {\n\t\t\tfunction: 'Accounts.validateLoginAttempt',\n\t\t});\n\t}\n\n\tif (login.allowed !== true) {\n\t\treturn login.allowed;\n\t}\n\n\tif (login.user.type === 'visitor') {\n\t\treturn true;\n\t}\n\n\tif (login.user.type === 'app') {\n\t\tthrow new Meteor.Error('error-app-user-is-not-allowed-to-login', 'App user is not allowed to login', {\n\t\t\tfunction: 'Accounts.validateLoginAttempt',\n\t\t});\n\t}\n\n\tif (!!login.user.active !== true) {\n\t\tthrow new Meteor.Error('error-user-is-not-activated', 'User is not activated', {\n\t\t\tfunction: 'Accounts.validateLoginAttempt',\n\t\t});\n\t}\n\n\tif (!login.user.roles || !Array.isArray(login.user.roles)) {\n\t\tthrow new Meteor.Error('error-user-has-no-roles', 'User has no roles', {\n\t\t\tfunction: 'Accounts.validateLoginAttempt',\n\t\t});\n\t}\n\n\tif (login.user.roles.includes('admin') === false && login.type === 'password' && settings.get('Accounts_EmailVerification') === true) {\n\t\tconst validEmail = login.user.emails.filter((email) => email.verified === true);\n\t\tif (validEmail.length === 0) {\n\t\t\tthrow new Meteor.Error('error-invalid-email', 'Invalid email __email__');\n\t\t}\n\t}\n\n\tlogin = callbacks.run('onValidateLogin', login);\n\n\tUsers.updateLastLoginById(login.user._id);\n\tMeteor.defer(function () {\n\t\treturn callbacks.run('afterValidateLogin', login);\n\t});\n\n\treturn true;\n});\n\nAccounts.validateNewUser(function (user) {\n\tif (user.type === 'visitor') {\n\t\treturn true;\n\t}\n\n\tif (\n\t\tsettings.get('Accounts_Registration_AuthenticationServices_Enabled') === false &&\n\t\tsettings.get('LDAP_Enable') === false &&\n\t\t!(user.services && user.services.password)\n\t) {\n\t\tthrow new Meteor.Error('registration-disabled-authentication-services', 'User registration is disabled for authentication services');\n\t}\n\n\treturn true;\n});\n\nAccounts.validateNewUser(function (user) {\n\tif (user.type === 'visitor') {\n\t\treturn true;\n\t}\n\n\tlet domainWhiteList = settings.get('Accounts_AllowedDomainsList');\n\tif (_.isEmpty(domainWhiteList?.trim())) {\n\t\treturn true;\n\t}\n\n\tdomainWhiteList = domainWhiteList.split(',').map((domain) => domain.trim());\n\n\tif (user.emails && user.emails.length > 0) {\n\t\tconst email = user.emails[0].address;\n\t\tconst inWhiteList = domainWhiteList.some((domain) => email.match(`@${escapeRegExp(domain)}$`));\n\n\t\tif (inWhiteList === false) {\n\t\t\tthrow new Meteor.Error('error-invalid-domain');\n\t\t}\n\t}\n\n\treturn true;\n});\n\nexport const MAX_RESUME_LOGIN_TOKENS = parseInt(process.env.MAX_RESUME_LOGIN_TOKENS) || 50;\n\nAccounts.onLogin(async ({ user }) => {\n\tif (!user || !user.services || !user.services.resume || !user.services.resume.loginTokens) {\n\t\treturn;\n\t}\n\tif (user.services.resume.loginTokens.length < MAX_RESUME_LOGIN_TOKENS) {\n\t\treturn;\n\t}\n\tconst { tokens } = (await UsersRaw.findAllResumeTokensByUserId(user._id))[0];\n\tif (tokens.length >= MAX_RESUME_LOGIN_TOKENS) {\n\t\tconst oldestDate = tokens.reverse()[MAX_RESUME_LOGIN_TOKENS - 1];\n\t\tUsers.removeOlderResumeTokensByUserId(user._id, oldestDate.when);\n\t}\n});\n"]},"sourceType":"module","hash":"c50e6ffd2e4287f3d93ecfd8ffd57547f55966e0"}
