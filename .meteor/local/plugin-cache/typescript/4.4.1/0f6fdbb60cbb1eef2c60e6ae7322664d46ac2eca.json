{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/setStatusText.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/lib/server/functions/setStatusText.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/setStatusText.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/setStatusText.ts","sourceRoot":"","sources":["app/lib/server/functions/setStatusText.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,CAAC,MAAM,mBAAmB,CAAC;AAElC,OAAO,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAC;AAC/C,OAAO,EAAE,KAAK,IAAI,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAC/D,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAC9D,OAAO,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAC;AACrC,OAAO,EAAE,GAAG,EAAE,MAAM,4BAA4B,CAAC;AAEjD,MAAM,CAAC,MAAM,qBAAqB,GAAG,KAAK,WAAW,MAAc,EAAE,UAAkB;IACtF,IAAI,CAAC,MAAM,EAAE;QACZ,OAAO,KAAK,CAAC;KACb;IAED,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAE/C,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAEhD,IAAI,CAAC,IAAI,EAAE;QACV,OAAO,KAAK,CAAC;KACb;IAED,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,EAAE;QACnC,OAAO,IAAI,CAAC;KACZ;IAED,MAAM,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAEtD,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;IACvC,GAAG,CAAC,SAAS,CAAC,iBAAiB,EAAE;QAChC,IAAI,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE;KAC3C,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,UAAU,MAAW,EAAE,UAAkB;IACtE,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChC,IAAI,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE;QAC5B,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;KACvC;IAED,IAAI,CAAC,MAAM,EAAE;QACZ,OAAO,KAAK,CAAC;KACb;IAED,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAEvC,8CAA8C;IAC9C,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,EAAE;QACnC,OAAO,IAAI,CAAC;KACZ;IAED,qBAAqB;IACrB,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;IAC7C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAE7B,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;IACvC,GAAG,CAAC,SAAS,CAAC,iBAAiB,EAAE;QAChC,IAAI,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE;KAC3C,CAAC,CAAC;IAEH,OAAO,IAAI,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,EAAE,KAAK,EAAE;IAChF,CAAC;QACA,+EAA+E;QAC/E,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC/B,OAAO,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;IAClE,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport s from 'underscore.string';\n\nimport { Users } from '../../../models/server';\nimport { Users as UsersRaw } from '../../../models/server/raw';\nimport { hasPermission } from '../../../authorization/server';\nimport { RateLimiter } from '../lib';\nimport { api } from '../../../../server/sdk/api';\n\nexport const _setStatusTextPromise = async function (userId: string, statusText: string): Promise<boolean> {\n\tif (!userId) {\n\t\treturn false;\n\t}\n\n\tstatusText = s.trim(statusText).substr(0, 120);\n\n\tconst user = await UsersRaw.findOneById(userId);\n\n\tif (!user) {\n\t\treturn false;\n\t}\n\n\tif (user.statusText === statusText) {\n\t\treturn true;\n\t}\n\n\tawait UsersRaw.updateStatusText(user._id, statusText);\n\n\tconst { _id, username, status } = user;\n\tapi.broadcast('presence.status', {\n\t\tuser: { _id, username, status, statusText },\n\t});\n\n\treturn true;\n};\n\nexport const _setStatusText = function (userId: any, statusText: string): unknown {\n\tstatusText = s.trim(statusText);\n\tif (statusText.length > 120) {\n\t\tstatusText = statusText.substr(0, 120);\n\t}\n\n\tif (!userId) {\n\t\treturn false;\n\t}\n\n\tconst user = Users.findOneById(userId);\n\n\t// User already has desired statusText, return\n\tif (user.statusText === statusText) {\n\t\treturn user;\n\t}\n\n\t// Set new statusText\n\tUsers.updateStatusText(user._id, statusText);\n\tuser.statusText = statusText;\n\n\tconst { _id, username, status } = user;\n\tapi.broadcast('presence.status', {\n\t\tuser: { _id, username, status, statusText },\n\t});\n\n\treturn true;\n};\n\nexport const setStatusText = RateLimiter.limitFunction(_setStatusText, 5, 60000, {\n\t0() {\n\t\t// Administrators have permission to change others status, so don't limit those\n\t\tconst userId = Meteor.userId();\n\t\treturn !userId || !hasPermission(userId, 'edit-other-user-info');\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/setStatusText.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/setStatusText.ts"}},"code":"module.export({\n  _setStatusTextPromise: () => _setStatusTextPromise,\n  _setStatusText: () => _setStatusText,\n  setStatusText: () => setStatusText\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet UsersRaw;\nmodule.link(\"../../../models/server/raw\", {\n  Users(v) {\n    UsersRaw = v;\n  }\n\n}, 3);\nlet hasPermission;\nmodule.link(\"../../../authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 4);\nlet RateLimiter;\nmodule.link(\"../lib\", {\n  RateLimiter(v) {\n    RateLimiter = v;\n  }\n\n}, 5);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 6);\n\nconst _setStatusTextPromise = function (userId, statusText) {\n  return Promise.asyncApply(() => {\n    if (!userId) {\n      return false;\n    }\n\n    statusText = s.trim(statusText).substr(0, 120);\n    const user = Promise.await(UsersRaw.findOneById(userId));\n\n    if (!user) {\n      return false;\n    }\n\n    if (user.statusText === statusText) {\n      return true;\n    }\n\n    Promise.await(UsersRaw.updateStatusText(user._id, statusText));\n    const {\n      _id,\n      username,\n      status\n    } = user;\n    api.broadcast('presence.status', {\n      user: {\n        _id,\n        username,\n        status,\n        statusText\n      }\n    });\n    return true;\n  });\n};\n\nconst _setStatusText = function (userId, statusText) {\n  statusText = s.trim(statusText);\n\n  if (statusText.length > 120) {\n    statusText = statusText.substr(0, 120);\n  }\n\n  if (!userId) {\n    return false;\n  }\n\n  const user = Users.findOneById(userId); // User already has desired statusText, return\n\n  if (user.statusText === statusText) {\n    return user;\n  } // Set new statusText\n\n\n  Users.updateStatusText(user._id, statusText);\n  user.statusText = statusText;\n  const {\n    _id,\n    username,\n    status\n  } = user;\n  api.broadcast('presence.status', {\n    user: {\n      _id,\n      username,\n      status,\n      statusText\n    }\n  });\n  return true;\n};\n\nconst setStatusText = RateLimiter.limitFunction(_setStatusText, 5, 60000, {\n  0() {\n    // Administrators have permission to change others status, so don't limit those\n    const userId = Meteor.userId();\n    return !userId || !hasPermission(userId, 'edit-other-user-info');\n  }\n\n});","map":{"version":3,"sources":["app/lib/server/functions/setStatusText.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport s from 'underscore.string';\n\nimport { Users } from '../../../models/server';\nimport { Users as UsersRaw } from '../../../models/server/raw';\nimport { hasPermission } from '../../../authorization/server';\nimport { RateLimiter } from '../lib';\nimport { api } from '../../../../server/sdk/api';\n\nexport const _setStatusTextPromise = async function (userId: string, statusText: string): Promise<boolean> {\n\tif (!userId) {\n\t\treturn false;\n\t}\n\n\tstatusText = s.trim(statusText).substr(0, 120);\n\n\tconst user = await UsersRaw.findOneById(userId);\n\n\tif (!user) {\n\t\treturn false;\n\t}\n\n\tif (user.statusText === statusText) {\n\t\treturn true;\n\t}\n\n\tawait UsersRaw.updateStatusText(user._id, statusText);\n\n\tconst { _id, username, status } = user;\n\tapi.broadcast('presence.status', {\n\t\tuser: { _id, username, status, statusText },\n\t});\n\n\treturn true;\n};\n\nexport const _setStatusText = function (userId: any, statusText: string): unknown {\n\tstatusText = s.trim(statusText);\n\tif (statusText.length > 120) {\n\t\tstatusText = statusText.substr(0, 120);\n\t}\n\n\tif (!userId) {\n\t\treturn false;\n\t}\n\n\tconst user = Users.findOneById(userId);\n\n\t// User already has desired statusText, return\n\tif (user.statusText === statusText) {\n\t\treturn user;\n\t}\n\n\t// Set new statusText\n\tUsers.updateStatusText(user._id, statusText);\n\tuser.statusText = statusText;\n\n\tconst { _id, username, status } = user;\n\tapi.broadcast('presence.status', {\n\t\tuser: { _id, username, status, statusText },\n\t});\n\n\treturn true;\n};\n\nexport const setStatusText = RateLimiter.limitFunction(_setStatusText, 5, 60000, {\n\t0() {\n\t\t// Administrators have permission to change others status, so don't limit those\n\t\tconst userId = Meteor.userId();\n\t\treturn !userId || !hasPermission(userId, 'edit-other-user-info');\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"0f6fdbb60cbb1eef2c60e6ae7322664d46ac2eca"}
