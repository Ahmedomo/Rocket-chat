{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/server/lib/rooms/roomTypes/public.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"server/lib/rooms/roomTypes/public.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/server/lib/rooms/roomTypes/public.ts","inputSourceMap":{"version":3,"file":"server/lib/rooms/roomTypes/public.ts","sourceRoot":"","sources":["server/lib/rooms/roomTypes/public.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,iCAAiC,CAAC;AAE3D,OAAO,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAE7F,OAAO,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAC3E,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAErD,MAAM,CAAC,MAAM,cAAc,GAAG,iBAAiB,CAAC,eAAe,CAAC,CAAC;AAEjE,eAAe,CAAC,GAAG,CAAC,cAAc,EAAE;IACnC,sBAAsB,CAAC,IAAI,EAAE,OAAO;QACnC,QAAQ,OAAO,EAAE;YAChB,KAAK,gBAAgB,CAAC,SAAS;gBAC9B,OAAO,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAChC,KAAK,gBAAgB,CAAC,SAAS;gBAC9B,OAAO,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACjC,KAAK,gBAAgB,CAAC,oBAAoB;gBACzC,OAAO,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;YAC5C,KAAK,gBAAgB,CAAC,GAAG;gBACxB,OAAO,KAAK,CAAC;YACd,KAAK,gBAAgB,CAAC,eAAe,CAAC;YACtC;gBACC,OAAO,IAAI,CAAC;SACb;IACF,CAAC;IAED,iBAAiB,CAAC,KAAK,EAAE,MAAM;QAC9B,QAAQ,MAAM,EAAE;YACf,KAAK,iBAAiB,CAAC,KAAK;gBAC3B,OAAO,KAAK,CAAC;YACd;gBACC,OAAO,IAAI,CAAC;SACb;IACF,CAAC;IAED,QAAQ,CAAC,IAAI,EAAE,OAAQ;QACtB,IAAI,IAAI,CAAC,IAAI,EAAE;YACd,OAAO,IAAI,CAAC,KAAK,CAAC;SAClB;QACD,IAAI,QAAQ,CAAC,GAAG,CAAC,wCAAwC,CAAC,EAAE;YAC3D,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;SAC/B;QACD,OAAO,IAAI,CAAC,IAAI,CAAC;IAClB,CAAC;IAED,WAAW,CAAC,KAAK;QAChB,OAAO,IAAI,CAAC;IACb,CAAC;IAED,kBAAkB;QACjB,OAAO,IAAI,CAAC;IACb,CAAC;IAED,iBAAiB;QAChB,OAAO,GAAG,CAAC;IACZ,CAAC;IAED,mBAAmB;QAClB,OAAO,IAAI,CAAC;IACb,CAAC;CACiE,CAAC,CAAC","sourcesContent":["import { settings } from '../../../../app/settings/server';\nimport type { IRoomTypeServerDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport type { AtLeast } from '../../../../definition/utils';\nimport { getPublicRoomType } from '../../../../lib/rooms/roomTypes/public';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const PublicRoomType = getPublicRoomType(roomCoordinator);\n\nroomCoordinator.add(PublicRoomType, {\n\tallowRoomSettingChange(room, setting) {\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.BROADCAST:\n\t\t\t\treturn Boolean(room.broadcast);\n\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\t\treturn Boolean(!room.broadcast);\n\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\t\treturn Boolean(!room.broadcast && room.ro);\n\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\treturn false;\n\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\tallowMemberAction(_room, action) {\n\t\tswitch (action) {\n\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\troomName(room, _userId?) {\n\t\tif (room.prid) {\n\t\t\treturn room.fname;\n\t\t}\n\t\tif (settings.get('UI_Allow_room_names_with_special_chars')) {\n\t\t\treturn room.fname || room.name;\n\t\t}\n\t\treturn room.name;\n\t},\n\n\tisGroupChat(_room) {\n\t\treturn true;\n\t},\n\n\tincludeInDashboard() {\n\t\treturn true;\n\t},\n\n\tgetDiscussionType() {\n\t\treturn 'c';\n\t},\n\n\tincludeInRoomSearch() {\n\t\treturn true;\n\t},\n} as AtLeast<IRoomTypeServerDirectives, 'isGroupChat' | 'roomName'>);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/server/lib/rooms/roomTypes/public.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/rooms/roomTypes/public.ts"}},"code":"module.export({\n  PublicRoomType: () => PublicRoomType\n});\nlet settings;\nmodule.link(\"../../../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 0);\nlet RoomSettingsEnum, RoomMemberActions;\nmodule.link(\"../../../../definition/IRoomTypeConfig\", {\n  RoomSettingsEnum(v) {\n    RoomSettingsEnum = v;\n  },\n\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  }\n\n}, 1);\nlet getPublicRoomType;\nmodule.link(\"../../../../lib/rooms/roomTypes/public\", {\n  getPublicRoomType(v) {\n    getPublicRoomType = v;\n  }\n\n}, 2);\nlet roomCoordinator;\nmodule.link(\"../roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 3);\nconst PublicRoomType = getPublicRoomType(roomCoordinator);\nroomCoordinator.add(PublicRoomType, {\n  allowRoomSettingChange(room, setting) {\n    switch (setting) {\n      case RoomSettingsEnum.BROADCAST:\n        return Boolean(room.broadcast);\n\n      case RoomSettingsEnum.READ_ONLY:\n        return Boolean(!room.broadcast);\n\n      case RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n        return Boolean(!room.broadcast && room.ro);\n\n      case RoomSettingsEnum.E2E:\n        return false;\n\n      case RoomSettingsEnum.SYSTEM_MESSAGES:\n      default:\n        return true;\n    }\n  },\n\n  allowMemberAction(_room, action) {\n    switch (action) {\n      case RoomMemberActions.BLOCK:\n        return false;\n\n      default:\n        return true;\n    }\n  },\n\n  roomName(room, _userId) {\n    if (room.prid) {\n      return room.fname;\n    }\n\n    if (settings.get('UI_Allow_room_names_with_special_chars')) {\n      return room.fname || room.name;\n    }\n\n    return room.name;\n  },\n\n  isGroupChat(_room) {\n    return true;\n  },\n\n  includeInDashboard() {\n    return true;\n  },\n\n  getDiscussionType() {\n    return 'c';\n  },\n\n  includeInRoomSearch() {\n    return true;\n  }\n\n});","map":{"version":3,"sources":["server/lib/rooms/roomTypes/public.ts"],"names":[],"mappings":"AAAA,MAAA,CAAO,MAAP,CAAS;AAAA,EAAA,cAAgB,EAAA,MAAA;AAAhB,CAAT;AAAyB,IAAA,QAAA;AAAkC,MAAA,CAAA,IAAA,CAAA,iCAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA,EAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wCAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,iBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wCAAA,EAAA;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,eAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oBAAA,EAAA;AAAA,EAAA,eAAA,CAAA,CAAA,EAAA;AAAA,IAAA,eAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAOpD,MAAM,cAAc,GAAG,iBAAiB,CAAC,eAAD,CAAxC;AAEP,eAAe,CAAC,GAAhB,CAAoB,cAApB,EAAoC;AACnC,EAAA,sBAAsB,CAAC,IAAD,EAAO,OAAP,EAAc;AACnC,YAAQ,OAAR;AACC,WAAK,gBAAgB,CAAC,SAAtB;AACC,eAAO,OAAO,CAAC,IAAI,CAAC,SAAN,CAAd;;AACD,WAAK,gBAAgB,CAAC,SAAtB;AACC,eAAO,OAAO,CAAC,CAAC,IAAI,CAAC,SAAP,CAAd;;AACD,WAAK,gBAAgB,CAAC,oBAAtB;AACC,eAAO,OAAO,CAAC,CAAC,IAAI,CAAC,SAAN,IAAmB,IAAI,CAAC,EAAzB,CAAd;;AACD,WAAK,gBAAgB,CAAC,GAAtB;AACC,eAAO,KAAP;;AACD,WAAK,gBAAgB,CAAC,eAAtB;AACA;AACC,eAAO,IAAP;AAXF;AAaA,GAfkC;;AAiBnC,EAAA,iBAAiB,CAAC,KAAD,EAAQ,MAAR,EAAc;AAC9B,YAAQ,MAAR;AACC,WAAK,iBAAiB,CAAC,KAAvB;AACC,eAAO,KAAP;;AACD;AACC,eAAO,IAAP;AAJF;AAMA,GAxBkC;;AA0BnC,EAAA,QAAQ,CAAC,IAAD,EAAO,OAAP,EAAe;AACtB,QAAI,IAAI,CAAC,IAAT,EAAe;AACd,aAAO,IAAI,CAAC,KAAZ;AACA;;AACD,QAAI,QAAQ,CAAC,GAAT,CAAa,wCAAb,CAAJ,EAA4D;AAC3D,aAAO,IAAI,CAAC,KAAL,IAAc,IAAI,CAAC,IAA1B;AACA;;AACD,WAAO,IAAI,CAAC,IAAZ;AACA,GAlCkC;;AAoCnC,EAAA,WAAW,CAAC,KAAD,EAAM;AAChB,WAAO,IAAP;AACA,GAtCkC;;AAwCnC,EAAA,kBAAkB,GAAA;AACjB,WAAO,IAAP;AACA,GA1CkC;;AA4CnC,EAAA,iBAAiB,GAAA;AAChB,WAAO,GAAP;AACA,GA9CkC;;AAgDnC,EAAA,mBAAmB,GAAA;AAClB,WAAO,IAAP;AACA;;AAlDkC,CAApC","sourcesContent":["import { settings } from '../../../../app/settings/server';\nimport type { IRoomTypeServerDirectives } from '../../../../definition/IRoomTypeConfig';\nimport { RoomSettingsEnum, RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport type { AtLeast } from '../../../../definition/utils';\nimport { getPublicRoomType } from '../../../../lib/rooms/roomTypes/public';\nimport { roomCoordinator } from '../roomCoordinator';\n\nexport const PublicRoomType = getPublicRoomType(roomCoordinator);\n\nroomCoordinator.add(PublicRoomType, {\n\tallowRoomSettingChange(room, setting) {\n\t\tswitch (setting) {\n\t\t\tcase RoomSettingsEnum.BROADCAST:\n\t\t\t\treturn Boolean(room.broadcast);\n\t\t\tcase RoomSettingsEnum.READ_ONLY:\n\t\t\t\treturn Boolean(!room.broadcast);\n\t\t\tcase RoomSettingsEnum.REACT_WHEN_READ_ONLY:\n\t\t\t\treturn Boolean(!room.broadcast && room.ro);\n\t\t\tcase RoomSettingsEnum.E2E:\n\t\t\t\treturn false;\n\t\t\tcase RoomSettingsEnum.SYSTEM_MESSAGES:\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\tallowMemberAction(_room, action) {\n\t\tswitch (action) {\n\t\t\tcase RoomMemberActions.BLOCK:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t},\n\n\troomName(room, _userId?) {\n\t\tif (room.prid) {\n\t\t\treturn room.fname;\n\t\t}\n\t\tif (settings.get('UI_Allow_room_names_with_special_chars')) {\n\t\t\treturn room.fname || room.name;\n\t\t}\n\t\treturn room.name;\n\t},\n\n\tisGroupChat(_room) {\n\t\treturn true;\n\t},\n\n\tincludeInDashboard() {\n\t\treturn true;\n\t},\n\n\tgetDiscussionType() {\n\t\treturn 'c';\n\t},\n\n\tincludeInRoomSearch() {\n\t\treturn true;\n\t},\n} as AtLeast<IRoomTypeServerDirectives, 'isGroupChat' | 'roomName'>);\n"],"sourceRoot":""},"sourceType":"module","hash":"98cc55095f77dc6c8df5086d706769c3c3c07970"}
