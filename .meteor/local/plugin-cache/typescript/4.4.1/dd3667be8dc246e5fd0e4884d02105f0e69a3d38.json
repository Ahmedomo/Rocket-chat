{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/ee/server/NetworkBroker.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"ee/server/NetworkBroker.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/ee/server/NetworkBroker.ts","inputSourceMap":{"version":3,"file":"ee/server/NetworkBroker.ts","sourceRoot":"","sources":["ee/server/NetworkBroker.ts"],"names":[],"mappings":"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","sourcesContent":["import { ServiceBroker, Context, ServiceSchema } from 'moleculer';\n\nimport { asyncLocalStorage } from '../../server/sdk';\nimport { IBroker, IBrokerNode, IServiceMetrics } from '../../server/sdk/types/IBroker';\nimport { ServiceClass } from '../../server/sdk/types/ServiceClass';\nimport { EventSignatures } from '../../server/sdk/lib/Events';\n\nconst events: { [k: string]: string } = {\n\tonNodeConnected: '$node.connected',\n\tonNodeUpdated: '$node.updated',\n\tonNodeDisconnected: '$node.disconnected',\n};\n\nconst lifecycle: { [k: string]: string } = {\n\tcreated: 'created',\n\tstarted: 'started',\n\tstopped: 'stopped',\n};\n\nconst {\n\tWAIT_FOR_SERVICES_TIMEOUT = '10000', // 10 seconds\n} = process.env;\n\nconst waitForServicesTimeout = parseInt(WAIT_FOR_SERVICES_TIMEOUT, 10) || 10000;\n\nexport class NetworkBroker implements IBroker {\n\tprivate broker: ServiceBroker;\n\n\tprivate started: Promise<void>;\n\n\tmetrics: IServiceMetrics;\n\n\tconstructor(broker: ServiceBroker) {\n\t\tthis.broker = broker;\n\n\t\tthis.metrics = broker.metrics;\n\n\t\tthis.started = this.broker.start();\n\t}\n\n\tasync call(method: string, data: any): Promise<any> {\n\t\tawait this.started;\n\n\t\tconst context = asyncLocalStorage.getStore();\n\n\t\tif (context?.ctx?.call) {\n\t\t\treturn context.ctx.call(method, data);\n\t\t}\n\n\t\tconst services: { name: string }[] = await this.broker.call('$node.services', {\n\t\t\tonlyAvailable: true,\n\t\t});\n\t\tif (!services.find((service) => service.name === method.split('.')[0])) {\n\t\t\treturn new Error('method-not-available');\n\t\t}\n\t\treturn this.broker.call(method, data);\n\t}\n\n\tasync waitAndCall(method: string, data: any): Promise<any> {\n\t\tawait this.started;\n\n\t\ttry {\n\t\t\tawait this.broker.waitForServices(method.split('.')[0], waitForServicesTimeout);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\n\t\tconst context = asyncLocalStorage.getStore();\n\t\tif (context?.ctx?.call) {\n\t\t\treturn context.ctx.call(method, data);\n\t\t}\n\n\t\treturn this.broker.call(method, data);\n\t}\n\n\tdestroyService(instance: ServiceClass): void {\n\t\tthis.broker.destroyService(instance.getName());\n\t}\n\n\tcreateService(instance: ServiceClass): void {\n\t\tconst methods = (\n\t\t\tinstance.constructor?.name === 'Object'\n\t\t\t\t? Object.getOwnPropertyNames(instance)\n\t\t\t\t: Object.getOwnPropertyNames(Object.getPrototypeOf(instance))\n\t\t).filter((name) => name !== 'constructor');\n\n\t\tif (!instance.getEvents() || !methods.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst serviceInstance = instance as any;\n\n\t\tconst name = instance.getName();\n\n\t\tif (!instance.isInternal()) {\n\t\t\tinstance.onEvent('shutdown', async (services) => {\n\t\t\t\tif (!services[name]?.includes(this.broker.nodeID)) {\n\t\t\t\t\tthis.broker.logger.debug({ msg: 'Not shutting down, different node.', nodeID: this.broker.nodeID });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.broker.logger.info({ msg: 'Received shutdown event, destroying service.', nodeID: this.broker.nodeID });\n\t\t\t\tthis.destroyService(instance);\n\t\t\t});\n\t\t}\n\n\t\tconst dependencies = name !== 'license' ? { dependencies: ['license'] } : {};\n\n\t\tconst service: ServiceSchema = {\n\t\t\tname,\n\t\t\tactions: {},\n\t\t\t...dependencies,\n\t\t\tevents: instance.getEvents().reduce<Record<string, Function>>((map, eventName) => {\n\t\t\t\tmap[eventName] = /^\\$/.test(eventName)\n\t\t\t\t\t? (ctx: Context): void => {\n\t\t\t\t\t\t\t// internal events params are not an array\n\t\t\t\t\t\t\tinstance.emit(eventName, ctx.params as Parameters<EventSignatures[typeof eventName]>);\n\t\t\t\t\t  }\n\t\t\t\t\t: (ctx: Context): void => {\n\t\t\t\t\t\t\tinstance.emit(eventName, ...(ctx.params as Parameters<EventSignatures[typeof eventName]>));\n\t\t\t\t\t  };\n\t\t\t\treturn map;\n\t\t\t}, {}),\n\t\t};\n\n\t\tif (!service.events || !service.actions) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const method of methods) {\n\t\t\tif (method.match(/^on[A-Z]/)) {\n\t\t\t\tservice.events[events[method]] = serviceInstance[method].bind(serviceInstance);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lifecycle[method]) {\n\t\t\t\tservice[method] = (): void => {\n\t\t\t\t\tasyncLocalStorage.run(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\tnodeID: this.broker.nodeID,\n\t\t\t\t\t\t\trequestID: null,\n\t\t\t\t\t\t\tbroker: this,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tserviceInstance[method].bind(serviceInstance),\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tservice.actions[method] = async (ctx: Context<[]>): Promise<any> => {\n\t\t\t\treturn asyncLocalStorage.run(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: ctx.id,\n\t\t\t\t\t\tnodeID: ctx.nodeID,\n\t\t\t\t\t\trequestID: ctx.requestID,\n\t\t\t\t\t\tbroker: this,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t},\n\t\t\t\t\t() => serviceInstance[method](...ctx.params),\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\n\t\tthis.broker.createService(service);\n\t}\n\n\tasync broadcast<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\treturn this.broker.broadcast(event, args);\n\t}\n\n\tasync broadcastLocal<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\tthis.broker.broadcastLocal(event, args);\n\t}\n\n\tasync broadcastToServices<T extends keyof EventSignatures>(\n\t\tservices: string[],\n\t\tevent: T,\n\t\t...args: Parameters<EventSignatures[T]>\n\t): Promise<void> {\n\t\tthis.broker.broadcast(event, args, services);\n\t}\n\n\tasync nodeList(): Promise<IBrokerNode[]> {\n\t\treturn this.broker.call('$node.list');\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/ee/server/NetworkBroker.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/NetworkBroker.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  NetworkBroker: () => NetworkBroker\n});\nlet asyncLocalStorage;\nmodule.link(\"../../server/sdk\", {\n  asyncLocalStorage(v) {\n    asyncLocalStorage = v;\n  }\n\n}, 0);\nconst events = {\n  onNodeConnected: '$node.connected',\n  onNodeUpdated: '$node.updated',\n  onNodeDisconnected: '$node.disconnected'\n};\nconst lifecycle = {\n  created: 'created',\n  started: 'started',\n  stopped: 'stopped'\n};\nconst {\n  WAIT_FOR_SERVICES_TIMEOUT = '10000' // 10 seconds\n\n} = process.env;\nconst waitForServicesTimeout = parseInt(WAIT_FOR_SERVICES_TIMEOUT, 10) || 10000;\n\nclass NetworkBroker {\n  constructor(broker) {\n    this.broker = void 0;\n    this.started = void 0;\n    this.metrics = void 0;\n    this.broker = broker;\n    this.metrics = broker.metrics;\n    this.started = this.broker.start();\n  }\n\n  call(method, data) {\n    return Promise.asyncApply(() => {\n      var _context$ctx;\n\n      Promise.await(this.started);\n      const context = asyncLocalStorage.getStore();\n\n      if (context !== null && context !== void 0 && (_context$ctx = context.ctx) !== null && _context$ctx !== void 0 && _context$ctx.call) {\n        return context.ctx.call(method, data);\n      }\n\n      const services = Promise.await(this.broker.call('$node.services', {\n        onlyAvailable: true\n      }));\n\n      if (!services.find(service => service.name === method.split('.')[0])) {\n        return new Error('method-not-available');\n      }\n\n      return this.broker.call(method, data);\n    });\n  }\n\n  waitAndCall(method, data) {\n    return Promise.asyncApply(() => {\n      var _context$ctx2;\n\n      Promise.await(this.started);\n\n      try {\n        Promise.await(this.broker.waitForServices(method.split('.')[0], waitForServicesTimeout));\n      } catch (err) {\n        console.error(err);\n      }\n\n      const context = asyncLocalStorage.getStore();\n\n      if (context !== null && context !== void 0 && (_context$ctx2 = context.ctx) !== null && _context$ctx2 !== void 0 && _context$ctx2.call) {\n        return context.ctx.call(method, data);\n      }\n\n      return this.broker.call(method, data);\n    });\n  }\n\n  destroyService(instance) {\n    this.broker.destroyService(instance.getName());\n  }\n\n  createService(instance) {\n    var _instance$constructor;\n\n    const methods = (((_instance$constructor = instance.constructor) === null || _instance$constructor === void 0 ? void 0 : _instance$constructor.name) === 'Object' ? Object.getOwnPropertyNames(instance) : Object.getOwnPropertyNames(Object.getPrototypeOf(instance))).filter(name => name !== 'constructor');\n\n    if (!instance.getEvents() || !methods.length) {\n      return;\n    }\n\n    const serviceInstance = instance;\n    const name = instance.getName();\n\n    if (!instance.isInternal()) {\n      instance.onEvent('shutdown', services => Promise.asyncApply(() => {\n        var _services$name;\n\n        if (!((_services$name = services[name]) !== null && _services$name !== void 0 && _services$name.includes(this.broker.nodeID))) {\n          this.broker.logger.debug({\n            msg: 'Not shutting down, different node.',\n            nodeID: this.broker.nodeID\n          });\n          return;\n        }\n\n        this.broker.logger.info({\n          msg: 'Received shutdown event, destroying service.',\n          nodeID: this.broker.nodeID\n        });\n        this.destroyService(instance);\n      }));\n    }\n\n    const dependencies = name !== 'license' ? {\n      dependencies: ['license']\n    } : {};\n\n    const service = _objectSpread(_objectSpread({\n      name,\n      actions: {}\n    }, dependencies), {}, {\n      events: instance.getEvents().reduce((map, eventName) => {\n        map[eventName] = /^\\$/.test(eventName) ? ctx => {\n          // internal events params are not an array\n          instance.emit(eventName, ctx.params);\n        } : ctx => {\n          instance.emit(eventName, ...ctx.params);\n        };\n        return map;\n      }, {})\n    });\n\n    if (!service.events || !service.actions) {\n      return;\n    }\n\n    for (const method of methods) {\n      if (method.match(/^on[A-Z]/)) {\n        service.events[events[method]] = serviceInstance[method].bind(serviceInstance);\n        continue;\n      }\n\n      if (lifecycle[method]) {\n        service[method] = () => {\n          asyncLocalStorage.run({\n            id: '',\n            nodeID: this.broker.nodeID,\n            requestID: null,\n            broker: this\n          }, serviceInstance[method].bind(serviceInstance));\n        };\n\n        continue;\n      }\n\n      service.actions[method] = ctx => Promise.asyncApply(() => {\n        return asyncLocalStorage.run({\n          id: ctx.id,\n          nodeID: ctx.nodeID,\n          requestID: ctx.requestID,\n          broker: this,\n          ctx\n        }, () => serviceInstance[method](...ctx.params));\n      });\n    }\n\n    this.broker.createService(service);\n  }\n\n  broadcast(event) {\n    return Promise.asyncApply(() => {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return this.broker.broadcast(event, args);\n    });\n  }\n\n  broadcastLocal(event) {\n    return Promise.asyncApply(() => {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      this.broker.broadcastLocal(event, args);\n    });\n  }\n\n  broadcastToServices(services, event) {\n    return Promise.asyncApply(() => {\n      for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n        args[_key3 - 2] = arguments[_key3];\n      }\n\n      this.broker.broadcast(event, args, services);\n    });\n  }\n\n  nodeList() {\n    return Promise.asyncApply(() => {\n      return this.broker.call('$node.list');\n    });\n  }\n\n}","map":{"version":3,"sources":["ee/server/NetworkBroker.ts"],"names":[],"mappings":"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","sourcesContent":["import { ServiceBroker, Context, ServiceSchema } from 'moleculer';\n\nimport { asyncLocalStorage } from '../../server/sdk';\nimport { IBroker, IBrokerNode, IServiceMetrics } from '../../server/sdk/types/IBroker';\nimport { ServiceClass } from '../../server/sdk/types/ServiceClass';\nimport { EventSignatures } from '../../server/sdk/lib/Events';\n\nconst events: { [k: string]: string } = {\n\tonNodeConnected: '$node.connected',\n\tonNodeUpdated: '$node.updated',\n\tonNodeDisconnected: '$node.disconnected',\n};\n\nconst lifecycle: { [k: string]: string } = {\n\tcreated: 'created',\n\tstarted: 'started',\n\tstopped: 'stopped',\n};\n\nconst {\n\tWAIT_FOR_SERVICES_TIMEOUT = '10000', // 10 seconds\n} = process.env;\n\nconst waitForServicesTimeout = parseInt(WAIT_FOR_SERVICES_TIMEOUT, 10) || 10000;\n\nexport class NetworkBroker implements IBroker {\n\tprivate broker: ServiceBroker;\n\n\tprivate started: Promise<void>;\n\n\tmetrics: IServiceMetrics;\n\n\tconstructor(broker: ServiceBroker) {\n\t\tthis.broker = broker;\n\n\t\tthis.metrics = broker.metrics;\n\n\t\tthis.started = this.broker.start();\n\t}\n\n\tasync call(method: string, data: any): Promise<any> {\n\t\tawait this.started;\n\n\t\tconst context = asyncLocalStorage.getStore();\n\n\t\tif (context?.ctx?.call) {\n\t\t\treturn context.ctx.call(method, data);\n\t\t}\n\n\t\tconst services: { name: string }[] = await this.broker.call('$node.services', {\n\t\t\tonlyAvailable: true,\n\t\t});\n\t\tif (!services.find((service) => service.name === method.split('.')[0])) {\n\t\t\treturn new Error('method-not-available');\n\t\t}\n\t\treturn this.broker.call(method, data);\n\t}\n\n\tasync waitAndCall(method: string, data: any): Promise<any> {\n\t\tawait this.started;\n\n\t\ttry {\n\t\t\tawait this.broker.waitForServices(method.split('.')[0], waitForServicesTimeout);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\n\t\tconst context = asyncLocalStorage.getStore();\n\t\tif (context?.ctx?.call) {\n\t\t\treturn context.ctx.call(method, data);\n\t\t}\n\n\t\treturn this.broker.call(method, data);\n\t}\n\n\tdestroyService(instance: ServiceClass): void {\n\t\tthis.broker.destroyService(instance.getName());\n\t}\n\n\tcreateService(instance: ServiceClass): void {\n\t\tconst methods = (\n\t\t\tinstance.constructor?.name === 'Object'\n\t\t\t\t? Object.getOwnPropertyNames(instance)\n\t\t\t\t: Object.getOwnPropertyNames(Object.getPrototypeOf(instance))\n\t\t).filter((name) => name !== 'constructor');\n\n\t\tif (!instance.getEvents() || !methods.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst serviceInstance = instance as any;\n\n\t\tconst name = instance.getName();\n\n\t\tif (!instance.isInternal()) {\n\t\t\tinstance.onEvent('shutdown', async (services) => {\n\t\t\t\tif (!services[name]?.includes(this.broker.nodeID)) {\n\t\t\t\t\tthis.broker.logger.debug({ msg: 'Not shutting down, different node.', nodeID: this.broker.nodeID });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.broker.logger.info({ msg: 'Received shutdown event, destroying service.', nodeID: this.broker.nodeID });\n\t\t\t\tthis.destroyService(instance);\n\t\t\t});\n\t\t}\n\n\t\tconst dependencies = name !== 'license' ? { dependencies: ['license'] } : {};\n\n\t\tconst service: ServiceSchema = {\n\t\t\tname,\n\t\t\tactions: {},\n\t\t\t...dependencies,\n\t\t\tevents: instance.getEvents().reduce<Record<string, Function>>((map, eventName) => {\n\t\t\t\tmap[eventName] = /^\\$/.test(eventName)\n\t\t\t\t\t? (ctx: Context): void => {\n\t\t\t\t\t\t\t// internal events params are not an array\n\t\t\t\t\t\t\tinstance.emit(eventName, ctx.params as Parameters<EventSignatures[typeof eventName]>);\n\t\t\t\t\t  }\n\t\t\t\t\t: (ctx: Context): void => {\n\t\t\t\t\t\t\tinstance.emit(eventName, ...(ctx.params as Parameters<EventSignatures[typeof eventName]>));\n\t\t\t\t\t  };\n\t\t\t\treturn map;\n\t\t\t}, {}),\n\t\t};\n\n\t\tif (!service.events || !service.actions) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const method of methods) {\n\t\t\tif (method.match(/^on[A-Z]/)) {\n\t\t\t\tservice.events[events[method]] = serviceInstance[method].bind(serviceInstance);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (lifecycle[method]) {\n\t\t\t\tservice[method] = (): void => {\n\t\t\t\t\tasyncLocalStorage.run(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\tnodeID: this.broker.nodeID,\n\t\t\t\t\t\t\trequestID: null,\n\t\t\t\t\t\t\tbroker: this,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tserviceInstance[method].bind(serviceInstance),\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tservice.actions[method] = async (ctx: Context<[]>): Promise<any> => {\n\t\t\t\treturn asyncLocalStorage.run(\n\t\t\t\t\t{\n\t\t\t\t\t\tid: ctx.id,\n\t\t\t\t\t\tnodeID: ctx.nodeID,\n\t\t\t\t\t\trequestID: ctx.requestID,\n\t\t\t\t\t\tbroker: this,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t},\n\t\t\t\t\t() => serviceInstance[method](...ctx.params),\n\t\t\t\t);\n\t\t\t};\n\t\t}\n\n\t\tthis.broker.createService(service);\n\t}\n\n\tasync broadcast<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\treturn this.broker.broadcast(event, args);\n\t}\n\n\tasync broadcastLocal<T extends keyof EventSignatures>(event: T, ...args: Parameters<EventSignatures[T]>): Promise<void> {\n\t\tthis.broker.broadcastLocal(event, args);\n\t}\n\n\tasync broadcastToServices<T extends keyof EventSignatures>(\n\t\tservices: string[],\n\t\tevent: T,\n\t\t...args: Parameters<EventSignatures[T]>\n\t): Promise<void> {\n\t\tthis.broker.broadcast(event, args, services);\n\t}\n\n\tasync nodeList(): Promise<IBrokerNode[]> {\n\t\treturn this.broker.call('$node.list');\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"dd3667be8dc246e5fd0e4884d02105f0e69a3d38"}
