{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/helpers/getUserFromParams.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/api/server/helpers/getUserFromParams.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/helpers/getUserFromParams.ts","inputSourceMap":{"version":3,"file":"app/api/server/helpers/getUserFromParams.ts","sourceRoot":"","sources":["app/api/server/helpers/getUserFromParams.ts"],"names":[],"mappings":"AAAA,wEAAwE;AACxE,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAC;AAC/C,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAE7B,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,mBAAmB,EAAE,SAAS,kBAAkB;IACrE,MAAM,WAAW,GAAG,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;IAC3C,IAAI,IAAI,CAAC;IACT,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IAEpC,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE;QAC1C,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC;KACvD;SAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE;QACrD,IAAI,GAAG,KAAK,CAAC,6BAA6B,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC;KAC3E;SAAM,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;QAC7C,IAAI,GAAG,KAAK,CAAC,6BAA6B,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC;KACvE;SAAM;QACN,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,+BAA+B,EAAE,4DAA4D,CAAC,CAAC;KACtH;IAED,IAAI,IAAI,CAAC,YAAY,EAAE;QACtB,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,oBAAoB,EAAE,6EAA6E,CAAC,CAAC;KAC5H;IAED,OAAO,IAAI,CAAC;AACb,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,uBAAuB,EAAE,SAAS,sBAAsB;IAC7E,IAAI,KAAK,CAAC;IACV,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IACpC,mDAAmD;IACnD,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC;IACjE,IAAI,aAAa,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;IAC7D,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7B,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAE9C,8BAA8B;IAC9B,aAAa,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;IAE5C,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;QAC1B,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,iCAAiC,EAAE,4EAA4E,CAAC,CAAC;KACxI;IAED,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE;QACpC,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;KACvC;SAAM;QACN,KAAK,GAAG,KAAK,CAAC,2BAA2B,CAAC,aAAa,CAAC,CAAC;KACzD;IAED,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC;AACtB,CAAC,CAAC,CAAC","sourcesContent":["// Convenience method, almost need to turn it into a middleware of sorts\nimport { Meteor } from 'meteor/meteor';\n\nimport { Users } from '../../../models/server';\nimport { API } from '../api';\n\nAPI.helperMethods.set('getUserFromParams', function _getUserFromParams(this: any) {\n\tconst doesntExist = { _doesntExist: true };\n\tlet user;\n\tconst params = this.requestParams();\n\n\tif (params.userId && params.userId.trim()) {\n\t\tuser = Users.findOneById(params.userId) || doesntExist;\n\t} else if (params.username && params.username.trim()) {\n\t\tuser = Users.findOneByUsernameIgnoringCase(params.username) || doesntExist;\n\t} else if (params.user && params.user.trim()) {\n\t\tuser = Users.findOneByUsernameIgnoringCase(params.user) || doesntExist;\n\t} else {\n\t\tthrow new Meteor.Error('error-user-param-not-provided', 'The required \"userId\" or \"username\" param was not provided');\n\t}\n\n\tif (user._doesntExist) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'The required \"userId\" or \"username\" param provided does not match any users');\n\t}\n\n\treturn user;\n});\n\nAPI.helperMethods.set('getUserListFromParams', function _getUserListFromParams(this: any) {\n\tlet users;\n\tconst params = this.requestParams();\n\t// if params.userId is provided, include it as well\n\tconst soleUser = params.userId || params.username || params.user;\n\tlet userListParam = params.userIds || params.usernames || [];\n\tuserListParam.push(soleUser);\n\tuserListParam = userListParam.filter(Boolean);\n\n\t// deduplicate to avoid errors\n\tuserListParam = [...new Set(userListParam)];\n\n\tif (!userListParam.length) {\n\t\tthrow new Meteor.Error('error-users-params-not-provided', 'Please provide \"userId\" or \"username\" or \"userIds\" or \"usernames\" as param');\n\t}\n\n\tif (params.userIds || params.userId) {\n\t\tusers = Users.findByIds(userListParam);\n\t} else {\n\t\tusers = Users.findByUsernamesIgnoringCase(userListParam);\n\t}\n\n\treturn users.fetch();\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/helpers/getUserFromParams.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/helpers/getUserFromParams.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 2);\nAPI.helperMethods.set('getUserFromParams', function _getUserFromParams() {\n  const doesntExist = {\n    _doesntExist: true\n  };\n  let user;\n  const params = this.requestParams();\n\n  if (params.userId && params.userId.trim()) {\n    user = Users.findOneById(params.userId) || doesntExist;\n  } else if (params.username && params.username.trim()) {\n    user = Users.findOneByUsernameIgnoringCase(params.username) || doesntExist;\n  } else if (params.user && params.user.trim()) {\n    user = Users.findOneByUsernameIgnoringCase(params.user) || doesntExist;\n  } else {\n    throw new Meteor.Error('error-user-param-not-provided', 'The required \"userId\" or \"username\" param was not provided');\n  }\n\n  if (user._doesntExist) {\n    throw new Meteor.Error('error-invalid-user', 'The required \"userId\" or \"username\" param provided does not match any users');\n  }\n\n  return user;\n});\nAPI.helperMethods.set('getUserListFromParams', function _getUserListFromParams() {\n  let users;\n  const params = this.requestParams(); // if params.userId is provided, include it as well\n\n  const soleUser = params.userId || params.username || params.user;\n  let userListParam = params.userIds || params.usernames || [];\n  userListParam.push(soleUser);\n  userListParam = userListParam.filter(Boolean); // deduplicate to avoid errors\n\n  userListParam = [...new Set(userListParam)];\n\n  if (!userListParam.length) {\n    throw new Meteor.Error('error-users-params-not-provided', 'Please provide \"userId\" or \"username\" or \"userIds\" or \"usernames\" as param');\n  }\n\n  if (params.userIds || params.userId) {\n    users = Users.findByIds(userListParam);\n  } else {\n    users = Users.findByUsernamesIgnoringCase(userListParam);\n  }\n\n  return users.fetch();\n});","map":{"version":3,"sources":["app/api/server/helpers/getUserFromParams.ts"],"names":[],"mappings":"AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA;AAAwE,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,GAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAMxE,GAAG,CAAC,aAAJ,CAAkB,GAAlB,CAAsB,mBAAtB,EAA2C,SAAS,kBAAT,GAA2B;AACrE,QAAM,WAAW,GAAG;AAAE,IAAA,YAAY,EAAE;AAAhB,GAApB;AACA,MAAI,IAAJ;AACA,QAAM,MAAM,GAAG,KAAK,aAAL,EAAf;;AAEA,MAAI,MAAM,CAAC,MAAP,IAAiB,MAAM,CAAC,MAAP,CAAc,IAAd,EAArB,EAA2C;AAC1C,IAAA,IAAI,GAAG,KAAK,CAAC,WAAN,CAAkB,MAAM,CAAC,MAAzB,KAAoC,WAA3C;AACA,GAFD,MAEO,IAAI,MAAM,CAAC,QAAP,IAAmB,MAAM,CAAC,QAAP,CAAgB,IAAhB,EAAvB,EAA+C;AACrD,IAAA,IAAI,GAAG,KAAK,CAAC,6BAAN,CAAoC,MAAM,CAAC,QAA3C,KAAwD,WAA/D;AACA,GAFM,MAEA,IAAI,MAAM,CAAC,IAAP,IAAe,MAAM,CAAC,IAAP,CAAY,IAAZ,EAAnB,EAAuC;AAC7C,IAAA,IAAI,GAAG,KAAK,CAAC,6BAAN,CAAoC,MAAM,CAAC,IAA3C,KAAoD,WAA3D;AACA,GAFM,MAEA;AACN,UAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,+BAAjB,EAAkD,4DAAlD,CAAN;AACA;;AAED,MAAI,IAAI,CAAC,YAAT,EAAuB;AACtB,UAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,oBAAjB,EAAuC,6EAAvC,CAAN;AACA;;AAED,SAAO,IAAP;AACA,CApBD;AAsBA,GAAG,CAAC,aAAJ,CAAkB,GAAlB,CAAsB,uBAAtB,EAA+C,SAAS,sBAAT,GAA+B;AAC7E,MAAI,KAAJ;AACA,QAAM,MAAM,GAAG,KAAK,aAAL,EAAf,CAF6E,CAG7E;;AACA,QAAM,QAAQ,GAAG,MAAM,CAAC,MAAP,IAAiB,MAAM,CAAC,QAAxB,IAAoC,MAAM,CAAC,IAA5D;AACA,MAAI,aAAa,GAAG,MAAM,CAAC,OAAP,IAAkB,MAAM,CAAC,SAAzB,IAAsC,EAA1D;AACA,EAAA,aAAa,CAAC,IAAd,CAAmB,QAAnB;AACA,EAAA,aAAa,GAAG,aAAa,CAAC,MAAd,CAAqB,OAArB,CAAhB,CAP6E,CAS7E;;AACA,EAAA,aAAa,GAAG,CAAC,GAAG,IAAI,GAAJ,CAAQ,aAAR,CAAJ,CAAhB;;AAEA,MAAI,CAAC,aAAa,CAAC,MAAnB,EAA2B;AAC1B,UAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,iCAAjB,EAAoD,4EAApD,CAAN;AACA;;AAED,MAAI,MAAM,CAAC,OAAP,IAAkB,MAAM,CAAC,MAA7B,EAAqC;AACpC,IAAA,KAAK,GAAG,KAAK,CAAC,SAAN,CAAgB,aAAhB,CAAR;AACA,GAFD,MAEO;AACN,IAAA,KAAK,GAAG,KAAK,CAAC,2BAAN,CAAkC,aAAlC,CAAR;AACA;;AAED,SAAO,KAAK,CAAC,KAAN,EAAP;AACA,CAvBD","sourcesContent":["// Convenience method, almost need to turn it into a middleware of sorts\nimport { Meteor } from 'meteor/meteor';\n\nimport { Users } from '../../../models/server';\nimport { API } from '../api';\n\nAPI.helperMethods.set('getUserFromParams', function _getUserFromParams(this: any) {\n\tconst doesntExist = { _doesntExist: true };\n\tlet user;\n\tconst params = this.requestParams();\n\n\tif (params.userId && params.userId.trim()) {\n\t\tuser = Users.findOneById(params.userId) || doesntExist;\n\t} else if (params.username && params.username.trim()) {\n\t\tuser = Users.findOneByUsernameIgnoringCase(params.username) || doesntExist;\n\t} else if (params.user && params.user.trim()) {\n\t\tuser = Users.findOneByUsernameIgnoringCase(params.user) || doesntExist;\n\t} else {\n\t\tthrow new Meteor.Error('error-user-param-not-provided', 'The required \"userId\" or \"username\" param was not provided');\n\t}\n\n\tif (user._doesntExist) {\n\t\tthrow new Meteor.Error('error-invalid-user', 'The required \"userId\" or \"username\" param provided does not match any users');\n\t}\n\n\treturn user;\n});\n\nAPI.helperMethods.set('getUserListFromParams', function _getUserListFromParams(this: any) {\n\tlet users;\n\tconst params = this.requestParams();\n\t// if params.userId is provided, include it as well\n\tconst soleUser = params.userId || params.username || params.user;\n\tlet userListParam = params.userIds || params.usernames || [];\n\tuserListParam.push(soleUser);\n\tuserListParam = userListParam.filter(Boolean);\n\n\t// deduplicate to avoid errors\n\tuserListParam = [...new Set(userListParam)];\n\n\tif (!userListParam.length) {\n\t\tthrow new Meteor.Error('error-users-params-not-provided', 'Please provide \"userId\" or \"username\" or \"userIds\" or \"usernames\" as param');\n\t}\n\n\tif (params.userIds || params.userId) {\n\t\tusers = Users.findByIds(userListParam);\n\t} else {\n\t\tusers = Users.findByUsernamesIgnoringCase(userListParam);\n\t}\n\n\treturn users.fetch();\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"f88b1695e3d2f3b887cd8ca5757af7ae33213895"}
