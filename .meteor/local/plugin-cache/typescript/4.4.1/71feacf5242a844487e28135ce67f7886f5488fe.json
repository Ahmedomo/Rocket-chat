{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/ee/server/lib/syncUserRoles.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"ee/server/lib/syncUserRoles.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/ee/server/lib/syncUserRoles.ts","inputSourceMap":{"version":3,"file":"ee/server/lib/syncUserRoles.ts","sourceRoot":"","sources":["ee/server/lib/syncUserRoles.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AACxD,OAAO,EAAE,GAAG,EAAE,MAAM,yBAAyB,CAAC;AAC9C,OAAO,EAAE,iBAAiB,EAAE,MAAM,wCAAwC,CAAC;AAC3E,OAAO,EAAE,wBAAwB,EAAE,MAAM,+CAA+C,CAAC;AACzF,OAAO,EAAE,KAAK,EAAE,MAAM,gCAAgC,CAAC;AACvD,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AAWjE,SAAS,cAAc,CACtB,QAA6B,EAC7B,gBAAqC,EACrC,eAAqC;IAErC,MAAM,aAAa,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IAEtF,IAAI,CAAC,eAAe,EAAE;QACrB,OAAO,aAAa,CAAC;KACrB;IAED,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3E,CAAC;AAED,SAAS,mBAAmB,CAAC,IAAY,EAAE,QAA6B,EAAE,IAAwC;IACjH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;QACrC,OAAO;KACP;IAED,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;IAE/B,KAAK,MAAM,MAAM,IAAI,QAAQ,EAAE;QAC9B,GAAG,CAAC,SAAS,CAAC,iBAAiB,EAAE;YAChC,IAAI;YACJ,GAAG,EAAE,MAAM;YACX,CAAC,EAAE;gBACF,GAAG;gBACH,QAAQ;aACR;SACD,CAAC,CAAC;KACH;AACF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAClC,GAAiB,EACjB,WAAgC,EAChC,EAAE,YAAY,EAAE,iBAAiB,EAAE,KAAK,EAAuB;IAE/D,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,WAAW,CAA4C,GAAG,EAAE,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAChI,IAAI,CAAC,IAAI,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;KACxC;IAED,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;IACjC,MAAM,UAAU,GAAG,cAAc,CAAC,WAAW,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;IAC5E,MAAM,aAAa,GAAG,cAAc,CAAC,aAAa,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;IAE/E,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;QAChD,OAAO;KACP;IAED,MAAM,QAAQ,GAAG,aAAa,CAAC,MAAM,KAAK,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC;IAC5E,IAAI,QAAQ,IAAI,CAAC,aAAa,EAAE,EAAE;QACjC,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;KACpD;IAED,IAAI,UAAU,CAAC,MAAM,IAAI,CAAC,MAAM,iBAAiB,CAAC,GAAG,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC,EAAE;QAC3E,mBAAmB,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;KAC/C;IAED,IAAI,iBAAiB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;QAC/C,OAAO;KACP;IAED,IAAI,MAAM,wBAAwB,CAAC,GAAG,EAAE,aAAa,EAAE,KAAK,CAAC,EAAE;QAC9D,mBAAmB,CAAC,SAAS,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;KACpD;AACF,CAAC","sourcesContent":["import type { IUser } from '../../../definition/IUser';\nimport type { IRole } from '../../../definition/IRole';\nimport type { AtLeast } from '../../../definition/utils';\nimport { settings } from '../../../app/settings/server';\nimport { api } from '../../../server/sdk/api';\nimport { addUserRolesAsync } from '../../../server/lib/roles/addUserRoles';\nimport { removeUserFromRolesAsync } from '../../../server/lib/roles/removeUserFromRoles';\nimport { Users } from '../../../app/models/server/raw';\nimport { canAddNewUser } from '../../app/license/server/license';\n\ntype setUserRolesOptions = {\n\t// If specified, the function will not add nor remove any role that is not on this list.\n\tallowedRoles?: Array<IRole['_id']>;\n\t// If set to true, roles will only be added, not removed\n\tskipRemovingRoles?: boolean;\n\t// the scope value (eg: room id) to assign the roles to\n\tscope?: string;\n};\n\nfunction filterRoleList(\n\troleList: Array<IRole['_id']>,\n\trolesToFilterOut: Array<IRole['_id']>,\n\trolesToFilterIn?: Array<IRole['_id']>,\n): Array<IRole['_id']> {\n\tconst filteredRoles = roleList.filter((roleId) => !rolesToFilterOut.includes(roleId));\n\n\tif (!rolesToFilterIn) {\n\t\treturn filteredRoles;\n\t}\n\n\treturn filteredRoles.filter((roleId) => rolesToFilterIn.includes(roleId));\n}\n\nfunction broadcastRoleChange(type: string, roleList: Array<IRole['_id']>, user: AtLeast<IUser, '_id' | 'username'>): void {\n\tif (!settings.get('UI_DisplayRoles')) {\n\t\treturn;\n\t}\n\n\tconst { _id, username } = user;\n\n\tfor (const roleId of roleList) {\n\t\tapi.broadcast('user.roleUpdate', {\n\t\t\ttype,\n\t\t\t_id: roleId,\n\t\t\tu: {\n\t\t\t\t_id,\n\t\t\t\tusername,\n\t\t\t},\n\t\t});\n\t}\n}\n\nexport async function syncUserRoles(\n\tuid: IUser['_id'],\n\tnewRoleList: Array<IRole['_id']>,\n\t{ allowedRoles, skipRemovingRoles, scope }: setUserRolesOptions,\n): Promise<void> {\n\tconst user = await Users.findOneById<Pick<IUser, '_id' | 'username' | 'roles'>>(uid, { projection: { username: 1, roles: 1 } });\n\tif (!user) {\n\t\tthrow new Error('error-user-not-found');\n\t}\n\n\tconst existingRoles = user.roles;\n\tconst rolesToAdd = filterRoleList(newRoleList, existingRoles, allowedRoles);\n\tconst rolesToRemove = filterRoleList(existingRoles, newRoleList, allowedRoles);\n\n\tif (!rolesToAdd.length && !rolesToRemove.length) {\n\t\treturn;\n\t}\n\n\tconst wasGuest = existingRoles.length === 1 && existingRoles[0] === 'guest';\n\tif (wasGuest && !canAddNewUser()) {\n\t\tthrow new Error('error-license-user-limit-reached');\n\t}\n\n\tif (rolesToAdd.length && (await addUserRolesAsync(uid, rolesToAdd, scope))) {\n\t\tbroadcastRoleChange('added', rolesToAdd, user);\n\t}\n\n\tif (skipRemovingRoles || !rolesToRemove.length) {\n\t\treturn;\n\t}\n\n\tif (await removeUserFromRolesAsync(uid, rolesToRemove, scope)) {\n\t\tbroadcastRoleChange('removed', rolesToRemove, user);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/ee/server/lib/syncUserRoles.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/lib/syncUserRoles.ts"}},"code":"module.export({\n  syncUserRoles: () => syncUserRoles\n});\nlet settings;\nmodule.link(\"../../../app/settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 0);\nlet api;\nmodule.link(\"../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 1);\nlet addUserRolesAsync;\nmodule.link(\"../../../server/lib/roles/addUserRoles\", {\n  addUserRolesAsync(v) {\n    addUserRolesAsync = v;\n  }\n\n}, 2);\nlet removeUserFromRolesAsync;\nmodule.link(\"../../../server/lib/roles/removeUserFromRoles\", {\n  removeUserFromRolesAsync(v) {\n    removeUserFromRolesAsync = v;\n  }\n\n}, 3);\nlet Users;\nmodule.link(\"../../../app/models/server/raw\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 4);\nlet canAddNewUser;\nmodule.link(\"../../app/license/server/license\", {\n  canAddNewUser(v) {\n    canAddNewUser = v;\n  }\n\n}, 5);\n\nfunction filterRoleList(roleList, rolesToFilterOut, rolesToFilterIn) {\n  const filteredRoles = roleList.filter(roleId => !rolesToFilterOut.includes(roleId));\n\n  if (!rolesToFilterIn) {\n    return filteredRoles;\n  }\n\n  return filteredRoles.filter(roleId => rolesToFilterIn.includes(roleId));\n}\n\nfunction broadcastRoleChange(type, roleList, user) {\n  if (!settings.get('UI_DisplayRoles')) {\n    return;\n  }\n\n  const {\n    _id,\n    username\n  } = user;\n\n  for (const roleId of roleList) {\n    api.broadcast('user.roleUpdate', {\n      type,\n      _id: roleId,\n      u: {\n        _id,\n        username\n      }\n    });\n  }\n}\n\nfunction syncUserRoles(uid, newRoleList, _ref) {\n  return Promise.asyncApply(() => {\n    let {\n      allowedRoles,\n      skipRemovingRoles,\n      scope\n    } = _ref;\n    const user = Promise.await(Users.findOneById(uid, {\n      projection: {\n        username: 1,\n        roles: 1\n      }\n    }));\n\n    if (!user) {\n      throw new Error('error-user-not-found');\n    }\n\n    const existingRoles = user.roles;\n    const rolesToAdd = filterRoleList(newRoleList, existingRoles, allowedRoles);\n    const rolesToRemove = filterRoleList(existingRoles, newRoleList, allowedRoles);\n\n    if (!rolesToAdd.length && !rolesToRemove.length) {\n      return;\n    }\n\n    const wasGuest = existingRoles.length === 1 && existingRoles[0] === 'guest';\n\n    if (wasGuest && !canAddNewUser()) {\n      throw new Error('error-license-user-limit-reached');\n    }\n\n    if (rolesToAdd.length && Promise.await(addUserRolesAsync(uid, rolesToAdd, scope))) {\n      broadcastRoleChange('added', rolesToAdd, user);\n    }\n\n    if (skipRemovingRoles || !rolesToRemove.length) {\n      return;\n    }\n\n    if (Promise.await(removeUserFromRolesAsync(uid, rolesToRemove, scope))) {\n      broadcastRoleChange('removed', rolesToRemove, user);\n    }\n  });\n}","map":{"version":3,"sources":["ee/server/lib/syncUserRoles.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IUser } from '../../../definition/IUser';\nimport type { IRole } from '../../../definition/IRole';\nimport type { AtLeast } from '../../../definition/utils';\nimport { settings } from '../../../app/settings/server';\nimport { api } from '../../../server/sdk/api';\nimport { addUserRolesAsync } from '../../../server/lib/roles/addUserRoles';\nimport { removeUserFromRolesAsync } from '../../../server/lib/roles/removeUserFromRoles';\nimport { Users } from '../../../app/models/server/raw';\nimport { canAddNewUser } from '../../app/license/server/license';\n\ntype setUserRolesOptions = {\n\t// If specified, the function will not add nor remove any role that is not on this list.\n\tallowedRoles?: Array<IRole['_id']>;\n\t// If set to true, roles will only be added, not removed\n\tskipRemovingRoles?: boolean;\n\t// the scope value (eg: room id) to assign the roles to\n\tscope?: string;\n};\n\nfunction filterRoleList(\n\troleList: Array<IRole['_id']>,\n\trolesToFilterOut: Array<IRole['_id']>,\n\trolesToFilterIn?: Array<IRole['_id']>,\n): Array<IRole['_id']> {\n\tconst filteredRoles = roleList.filter((roleId) => !rolesToFilterOut.includes(roleId));\n\n\tif (!rolesToFilterIn) {\n\t\treturn filteredRoles;\n\t}\n\n\treturn filteredRoles.filter((roleId) => rolesToFilterIn.includes(roleId));\n}\n\nfunction broadcastRoleChange(type: string, roleList: Array<IRole['_id']>, user: AtLeast<IUser, '_id' | 'username'>): void {\n\tif (!settings.get('UI_DisplayRoles')) {\n\t\treturn;\n\t}\n\n\tconst { _id, username } = user;\n\n\tfor (const roleId of roleList) {\n\t\tapi.broadcast('user.roleUpdate', {\n\t\t\ttype,\n\t\t\t_id: roleId,\n\t\t\tu: {\n\t\t\t\t_id,\n\t\t\t\tusername,\n\t\t\t},\n\t\t});\n\t}\n}\n\nexport async function syncUserRoles(\n\tuid: IUser['_id'],\n\tnewRoleList: Array<IRole['_id']>,\n\t{ allowedRoles, skipRemovingRoles, scope }: setUserRolesOptions,\n): Promise<void> {\n\tconst user = await Users.findOneById<Pick<IUser, '_id' | 'username' | 'roles'>>(uid, { projection: { username: 1, roles: 1 } });\n\tif (!user) {\n\t\tthrow new Error('error-user-not-found');\n\t}\n\n\tconst existingRoles = user.roles;\n\tconst rolesToAdd = filterRoleList(newRoleList, existingRoles, allowedRoles);\n\tconst rolesToRemove = filterRoleList(existingRoles, newRoleList, allowedRoles);\n\n\tif (!rolesToAdd.length && !rolesToRemove.length) {\n\t\treturn;\n\t}\n\n\tconst wasGuest = existingRoles.length === 1 && existingRoles[0] === 'guest';\n\tif (wasGuest && !canAddNewUser()) {\n\t\tthrow new Error('error-license-user-limit-reached');\n\t}\n\n\tif (rolesToAdd.length && (await addUserRolesAsync(uid, rolesToAdd, scope))) {\n\t\tbroadcastRoleChange('added', rolesToAdd, user);\n\t}\n\n\tif (skipRemovingRoles || !rolesToRemove.length) {\n\t\treturn;\n\t}\n\n\tif (await removeUserFromRolesAsync(uid, rolesToRemove, scope)) {\n\t\tbroadcastRoleChange('removed', rolesToRemove, user);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"71feacf5242a844487e28135ce67f7886f5488fe"}
