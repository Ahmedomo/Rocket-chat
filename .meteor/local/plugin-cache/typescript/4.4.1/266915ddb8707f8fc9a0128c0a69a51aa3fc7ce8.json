{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/setUsername.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/lib/server/functions/setUsername.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/setUsername.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/setUsername.ts","sourceRoot":"","sources":["app/lib/server/functions/setUsername.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport s from 'underscore.string';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { settings } from '../../../settings/server';\nimport { Users } from '../../../models/server';\nimport { Invites } from '../../../models/server/raw';\nimport { hasPermission } from '../../../authorization/server';\nimport { RateLimiter } from '../lib';\nimport { addUserToRoom } from './addUserToRoom';\nimport { api } from '../../../../server/sdk/api';\nimport { checkUsernameAvailability, setUserAvatar } from '.';\nimport { getAvatarSuggestionForUser } from './getAvatarSuggestionForUser';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { IUser } from '../../../../definition/IUser';\n\nexport const _setUsername = function (userId: string, u: string, fullUser: IUser): unknown {\n\tconst username = s.trim(u);\n\tif (!userId || !username) {\n\t\treturn false;\n\t}\n\tlet nameValidation;\n\ttry {\n\t\tnameValidation = new RegExp(`^${settings.get('UTF8_User_Names_Validation')}$`);\n\t} catch (error) {\n\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t}\n\tif (!nameValidation.test(username)) {\n\t\treturn false;\n\t}\n\tconst user = fullUser || Users.findOneById(userId);\n\t// User already has desired username, return\n\tif (user.username === username) {\n\t\treturn user;\n\t}\n\tconst previousUsername = user.username;\n\t// Check username availability or if the user already owns a different casing of the name\n\tif (!previousUsername || !(username.toLowerCase() === previousUsername.toLowerCase())) {\n\t\tif (!checkUsernameAvailability(username)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t// If first time setting username, send Enrollment Email\n\ttry {\n\t\tif (!previousUsername && user.emails && user.emails.length > 0 && settings.get('Accounts_Enrollment_Email')) {\n\t\t\tMeteor.defer(() => {\n\t\t\t\tAccounts.sendEnrollmentEmail(user._id);\n\t\t\t});\n\t\t}\n\t} catch (e: any) {\n\t\tSystemLogger.error(e);\n\t}\n\t// Set new username*\n\tUsers.setUsername(user._id, username);\n\tuser.username = username;\n\tif (!previousUsername && settings.get('Accounts_SetDefaultAvatar') === true) {\n\t\tconst avatarSuggestions = Promise.await(getAvatarSuggestionForUser(user)) as [];\n\t\tlet gravatar;\n\t\tObject.keys(avatarSuggestions).some((service) => {\n\t\t\tconst avatarData = avatarSuggestions[+service];\n\t\t\tif (service !== 'gravatar') {\n\t\t\t\t// eslint-disable-next-line dot-notation\n\t\t\t\tsetUserAvatar(user, avatarData['blob'], avatarData['contentType'], service);\n\t\t\t\tgravatar = null;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tgravatar = avatarData;\n\t\t\treturn false;\n\t\t});\n\t\tif (gravatar != null) {\n\t\t\t// eslint-disable-next-line dot-notation\n\t\t\tsetUserAvatar(user, gravatar['blob'], gravatar['contentType'], 'gravatar');\n\t\t}\n\t}\n\n\t// If it's the first username and the user has an invite Token, then join the invite room\n\tif (!previousUsername && user.inviteToken) {\n\t\tconst inviteData = Promise.await(Invites.findOneById(user.inviteToken));\n\t\tif (inviteData?.rid) {\n\t\t\taddUserToRoom(inviteData.rid, user);\n\t\t}\n\t}\n\n\tapi.broadcast('user.nameChanged', {\n\t\t_id: user._id,\n\t\tname: user.name,\n\t\tusername: user.username,\n\t});\n\n\treturn user;\n};\n\nexport const setUsername = RateLimiter.limitFunction(_setUsername, 1, 60000, {\n\t0() {\n\t\tconst userId = Meteor.userId();\n\t\treturn !userId || !hasPermission(userId, 'edit-other-user-info');\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/setUsername.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/setUsername.ts"}},"code":"module.export({\n  _setUsername: () => _setUsername,\n  setUsername: () => setUsername\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet s;\nmodule.link(\"underscore.string\", {\n  default(v) {\n    s = v;\n  }\n\n}, 1);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 4);\nlet Invites;\nmodule.link(\"../../../models/server/raw\", {\n  Invites(v) {\n    Invites = v;\n  }\n\n}, 5);\nlet hasPermission;\nmodule.link(\"../../../authorization/server\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 6);\nlet RateLimiter;\nmodule.link(\"../lib\", {\n  RateLimiter(v) {\n    RateLimiter = v;\n  }\n\n}, 7);\nlet addUserToRoom;\nmodule.link(\"./addUserToRoom\", {\n  addUserToRoom(v) {\n    addUserToRoom = v;\n  }\n\n}, 8);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 9);\nlet checkUsernameAvailability, setUserAvatar;\nmodule.link(\".\", {\n  checkUsernameAvailability(v) {\n    checkUsernameAvailability = v;\n  },\n\n  setUserAvatar(v) {\n    setUserAvatar = v;\n  }\n\n}, 10);\nlet getAvatarSuggestionForUser;\nmodule.link(\"./getAvatarSuggestionForUser\", {\n  getAvatarSuggestionForUser(v) {\n    getAvatarSuggestionForUser = v;\n  }\n\n}, 11);\nlet SystemLogger;\nmodule.link(\"../../../../server/lib/logger/system\", {\n  SystemLogger(v) {\n    SystemLogger = v;\n  }\n\n}, 12);\n\nconst _setUsername = function (userId, u, fullUser) {\n  const username = s.trim(u);\n\n  if (!userId || !username) {\n    return false;\n  }\n\n  let nameValidation;\n\n  try {\n    nameValidation = new RegExp(\"^\".concat(settings.get('UTF8_User_Names_Validation'), \"$\"));\n  } catch (error) {\n    nameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n  }\n\n  if (!nameValidation.test(username)) {\n    return false;\n  }\n\n  const user = fullUser || Users.findOneById(userId); // User already has desired username, return\n\n  if (user.username === username) {\n    return user;\n  }\n\n  const previousUsername = user.username; // Check username availability or if the user already owns a different casing of the name\n\n  if (!previousUsername || !(username.toLowerCase() === previousUsername.toLowerCase())) {\n    if (!checkUsernameAvailability(username)) {\n      return false;\n    }\n  } // If first time setting username, send Enrollment Email\n\n\n  try {\n    if (!previousUsername && user.emails && user.emails.length > 0 && settings.get('Accounts_Enrollment_Email')) {\n      Meteor.defer(() => {\n        Accounts.sendEnrollmentEmail(user._id);\n      });\n    }\n  } catch (e) {\n    SystemLogger.error(e);\n  } // Set new username*\n\n\n  Users.setUsername(user._id, username);\n  user.username = username;\n\n  if (!previousUsername && settings.get('Accounts_SetDefaultAvatar') === true) {\n    const avatarSuggestions = Promise.await(getAvatarSuggestionForUser(user));\n    let gravatar;\n    Object.keys(avatarSuggestions).some(service => {\n      const avatarData = avatarSuggestions[+service];\n\n      if (service !== 'gravatar') {\n        // eslint-disable-next-line dot-notation\n        setUserAvatar(user, avatarData['blob'], avatarData['contentType'], service);\n        gravatar = null;\n        return true;\n      }\n\n      gravatar = avatarData;\n      return false;\n    });\n\n    if (gravatar != null) {\n      // eslint-disable-next-line dot-notation\n      setUserAvatar(user, gravatar['blob'], gravatar['contentType'], 'gravatar');\n    }\n  } // If it's the first username and the user has an invite Token, then join the invite room\n\n\n  if (!previousUsername && user.inviteToken) {\n    const inviteData = Promise.await(Invites.findOneById(user.inviteToken));\n\n    if (inviteData !== null && inviteData !== void 0 && inviteData.rid) {\n      addUserToRoom(inviteData.rid, user);\n    }\n  }\n\n  api.broadcast('user.nameChanged', {\n    _id: user._id,\n    name: user.name,\n    username: user.username\n  });\n  return user;\n};\n\nconst setUsername = RateLimiter.limitFunction(_setUsername, 1, 60000, {\n  0() {\n    const userId = Meteor.userId();\n    return !userId || !hasPermission(userId, 'edit-other-user-info');\n  }\n\n});","map":{"version":3,"sources":["app/lib/server/functions/setUsername.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport s from 'underscore.string';\nimport { Accounts } from 'meteor/accounts-base';\n\nimport { settings } from '../../../settings/server';\nimport { Users } from '../../../models/server';\nimport { Invites } from '../../../models/server/raw';\nimport { hasPermission } from '../../../authorization/server';\nimport { RateLimiter } from '../lib';\nimport { addUserToRoom } from './addUserToRoom';\nimport { api } from '../../../../server/sdk/api';\nimport { checkUsernameAvailability, setUserAvatar } from '.';\nimport { getAvatarSuggestionForUser } from './getAvatarSuggestionForUser';\nimport { SystemLogger } from '../../../../server/lib/logger/system';\nimport { IUser } from '../../../../definition/IUser';\n\nexport const _setUsername = function (userId: string, u: string, fullUser: IUser): unknown {\n\tconst username = s.trim(u);\n\tif (!userId || !username) {\n\t\treturn false;\n\t}\n\tlet nameValidation;\n\ttry {\n\t\tnameValidation = new RegExp(`^${settings.get('UTF8_User_Names_Validation')}$`);\n\t} catch (error) {\n\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t}\n\tif (!nameValidation.test(username)) {\n\t\treturn false;\n\t}\n\tconst user = fullUser || Users.findOneById(userId);\n\t// User already has desired username, return\n\tif (user.username === username) {\n\t\treturn user;\n\t}\n\tconst previousUsername = user.username;\n\t// Check username availability or if the user already owns a different casing of the name\n\tif (!previousUsername || !(username.toLowerCase() === previousUsername.toLowerCase())) {\n\t\tif (!checkUsernameAvailability(username)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t// If first time setting username, send Enrollment Email\n\ttry {\n\t\tif (!previousUsername && user.emails && user.emails.length > 0 && settings.get('Accounts_Enrollment_Email')) {\n\t\t\tMeteor.defer(() => {\n\t\t\t\tAccounts.sendEnrollmentEmail(user._id);\n\t\t\t});\n\t\t}\n\t} catch (e: any) {\n\t\tSystemLogger.error(e);\n\t}\n\t// Set new username*\n\tUsers.setUsername(user._id, username);\n\tuser.username = username;\n\tif (!previousUsername && settings.get('Accounts_SetDefaultAvatar') === true) {\n\t\tconst avatarSuggestions = Promise.await(getAvatarSuggestionForUser(user)) as [];\n\t\tlet gravatar;\n\t\tObject.keys(avatarSuggestions).some((service) => {\n\t\t\tconst avatarData = avatarSuggestions[+service];\n\t\t\tif (service !== 'gravatar') {\n\t\t\t\t// eslint-disable-next-line dot-notation\n\t\t\t\tsetUserAvatar(user, avatarData['blob'], avatarData['contentType'], service);\n\t\t\t\tgravatar = null;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tgravatar = avatarData;\n\t\t\treturn false;\n\t\t});\n\t\tif (gravatar != null) {\n\t\t\t// eslint-disable-next-line dot-notation\n\t\t\tsetUserAvatar(user, gravatar['blob'], gravatar['contentType'], 'gravatar');\n\t\t}\n\t}\n\n\t// If it's the first username and the user has an invite Token, then join the invite room\n\tif (!previousUsername && user.inviteToken) {\n\t\tconst inviteData = Promise.await(Invites.findOneById(user.inviteToken));\n\t\tif (inviteData?.rid) {\n\t\t\taddUserToRoom(inviteData.rid, user);\n\t\t}\n\t}\n\n\tapi.broadcast('user.nameChanged', {\n\t\t_id: user._id,\n\t\tname: user.name,\n\t\tusername: user.username,\n\t});\n\n\treturn user;\n};\n\nexport const setUsername = RateLimiter.limitFunction(_setUsername, 1, 60000, {\n\t0() {\n\t\tconst userId = Meteor.userId();\n\t\treturn !userId || !hasPermission(userId, 'edit-other-user-info');\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"266915ddb8707f8fc9a0128c0a69a51aa3fc7ce8"}
