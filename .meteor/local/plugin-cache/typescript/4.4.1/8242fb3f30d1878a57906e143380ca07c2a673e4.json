{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/removeUserFromRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/lib/server/functions/removeUserFromRoom.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/removeUserFromRoom.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/removeUserFromRoom.ts","sourceRoot":"","sources":["app/lib/server/functions/removeUserFromRoom.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,OAAO,EAAE,mBAAmB,EAAE,MAAM,gDAAgD,CAAC;AACrF,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAEvC,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AACxE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AACtD,OAAO,EAAE,IAAI,EAAE,MAAM,wBAAwB,CAAC;AAG9C,MAAM,CAAC,MAAM,kBAAkB,GAAG,KAAK,WACtC,GAAW,EACX,IAAW,EACX,OAAqD;IAErD,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAEpC,IAAI,CAAC,IAAI,EAAE;QACV,OAAO;KACP;IAED,IAAI;QACH,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;KACjE;IAAC,OAAO,KAAK,EAAE;QACf,IAAI,KAAK,YAAY,mBAAmB,EAAE;YACzC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;SAC7D;QAED,MAAM,KAAK,CAAC;KACZ;IAED,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAE7C,MAAM,YAAY,GAAG,aAAa,CAAC,wBAAwB,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE;QAC1E,MAAM,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;KAClB,CAAC,CAAC;IAEH,IAAI,YAAY,EAAE;QACjB,MAAM,WAAW,GAAG,IAAI,CAAC;QACzB,IAAI,OAAO,EAAE,MAAM,EAAE;YACpB,MAAM,SAAS,GAAG;gBACjB,CAAC,EAAE,OAAO,CAAC,MAAM;aACjB,CAAC;YAEF,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAClB,QAAQ,CAAC,0CAA0C,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;aAC1E;iBAAM;gBACN,QAAQ,CAAC,kCAAkC,CAAC,GAAG,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;aAClE;SACD;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YACzB,QAAQ,CAAC,oCAAoC,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;SAChE;aAAM;YACN,QAAQ,CAAC,gCAAgC,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;SAC5D;KACD;IAED,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE;QACnB,QAAQ,CAAC,8BAA8B,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;KAC7D;IAED,aAAa,CAAC,uBAAuB,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAErD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;QACjC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KAC/C;IAED,8BAA8B;IAC9B,SAAS,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAE5C,MAAM,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,kBAAkB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACnE,CAAC,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Rooms, Messages, Subscriptions } from '../../../models/server';\nimport { AppEvents, Apps } from '../../../apps/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Team } from '../../../../server/sdk';\nimport { IUser } from '../../../../definition/IUser';\n\nexport const removeUserFromRoom = async function (\n\trid: string,\n\tuser: IUser,\n\toptions?: { byUser: Pick<IUser, '_id' | 'username'> },\n): Promise<void> {\n\tconst room = Rooms.findOneById(rid);\n\n\tif (!room) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait Apps.triggerEvent(AppEvents.IPreRoomUserLeave, room, user);\n\t} catch (error) {\n\t\tif (error instanceof AppsEngineException) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\tcallbacks.run('beforeLeaveRoom', user, room);\n\n\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id, {\n\t\tfields: { _id: 1 },\n\t});\n\n\tif (subscription) {\n\t\tconst removedUser = user;\n\t\tif (options?.byUser) {\n\t\t\tconst extraData = {\n\t\t\t\tu: options.byUser,\n\t\t\t};\n\n\t\t\tif (room.teamMain) {\n\t\t\t\tMessages.createUserRemovedFromTeamWithRoomIdAndUser(rid, user, extraData);\n\t\t\t} else {\n\t\t\t\tMessages.createUserRemovedWithRoomIdAndUser(rid, user, extraData);\n\t\t\t}\n\t\t} else if (room.teamMain) {\n\t\t\tMessages.createUserLeaveTeamWithRoomIdAndUser(rid, removedUser);\n\t\t} else {\n\t\t\tMessages.createUserLeaveWithRoomIdAndUser(rid, removedUser);\n\t\t}\n\t}\n\n\tif (room.t === 'l') {\n\t\tMessages.createCommandWithRoomIdAndUser('survey', rid, user);\n\t}\n\n\tSubscriptions.removeByRoomIdAndUserId(rid, user._id);\n\n\tif (room.teamId && room.teamMain) {\n\t\tawait Team.removeMember(room.teamId, user._id);\n\t}\n\n\t// TODO: CACHE: maybe a queue?\n\tcallbacks.run('afterLeaveRoom', user, room);\n\n\tawait Apps.triggerEvent(AppEvents.IPostRoomUserLeave, room, user);\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/removeUserFromRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/removeUserFromRoom.ts"}},"code":"module.export({\n  removeUserFromRoom: () => removeUserFromRoom\n});\nlet AppsEngineException;\nmodule.link(\"@rocket.chat/apps-engine/definition/exceptions\", {\n  AppsEngineException(v) {\n    AppsEngineException = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Rooms, Messages, Subscriptions;\nmodule.link(\"../../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 2);\nlet AppEvents, Apps;\nmodule.link(\"../../../apps/server\", {\n  AppEvents(v) {\n    AppEvents = v;\n  },\n\n  Apps(v) {\n    Apps = v;\n  }\n\n}, 3);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 4);\nlet Team;\nmodule.link(\"../../../../server/sdk\", {\n  Team(v) {\n    Team = v;\n  }\n\n}, 5);\n\nconst removeUserFromRoom = function (rid, user, options) {\n  return Promise.asyncApply(() => {\n    const room = Rooms.findOneById(rid);\n\n    if (!room) {\n      return;\n    }\n\n    try {\n      Promise.await(Apps.triggerEvent(AppEvents.IPreRoomUserLeave, room, user));\n    } catch (error) {\n      if (error instanceof AppsEngineException) {\n        throw new Meteor.Error('error-app-prevented', error.message);\n      }\n\n      throw error;\n    }\n\n    callbacks.run('beforeLeaveRoom', user, room);\n    const subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id, {\n      fields: {\n        _id: 1\n      }\n    });\n\n    if (subscription) {\n      const removedUser = user;\n\n      if (options !== null && options !== void 0 && options.byUser) {\n        const extraData = {\n          u: options.byUser\n        };\n\n        if (room.teamMain) {\n          Messages.createUserRemovedFromTeamWithRoomIdAndUser(rid, user, extraData);\n        } else {\n          Messages.createUserRemovedWithRoomIdAndUser(rid, user, extraData);\n        }\n      } else if (room.teamMain) {\n        Messages.createUserLeaveTeamWithRoomIdAndUser(rid, removedUser);\n      } else {\n        Messages.createUserLeaveWithRoomIdAndUser(rid, removedUser);\n      }\n    }\n\n    if (room.t === 'l') {\n      Messages.createCommandWithRoomIdAndUser('survey', rid, user);\n    }\n\n    Subscriptions.removeByRoomIdAndUserId(rid, user._id);\n\n    if (room.teamId && room.teamMain) {\n      Promise.await(Team.removeMember(room.teamId, user._id));\n    } // TODO: CACHE: maybe a queue?\n\n\n    callbacks.run('afterLeaveRoom', user, room);\n    Promise.await(Apps.triggerEvent(AppEvents.IPostRoomUserLeave, room, user));\n  });\n};","map":{"version":3,"sources":["app/lib/server/functions/removeUserFromRoom.ts"],"names":[],"mappings":"AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,kBAAA,EAAA,MAAA;AAAA,CAAA;AAAA,IAAA,mBAAA;AAAqE,MAAA,CAAA,IAAA,CAAA,gDAAA,EAAA;AAAA,EAAA,mBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,KAAA,EAAA,QAAA,EAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA,EAAA,IAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,SAAA,CAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,IAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,IAAA,CAAA,CAAA,EAAA;AAAA,IAAA,IAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAU9D,MAAM,kBAAkB,GAAG,UACjC,GADiC,EAEjC,IAFiC,EAGjC,OAHiC;AAAA,kCAGoB;AAErD,UAAM,IAAI,GAAG,KAAK,CAAC,WAAN,CAAkB,GAAlB,CAAb;;AAEA,QAAI,CAAC,IAAL,EAAW;AACV;AACA;;AAED,QAAI;AACH,oBAAM,IAAI,CAAC,YAAL,CAAkB,SAAS,CAAC,iBAA5B,EAA+C,IAA/C,EAAqD,IAArD,CAAN;AACA,KAFD,CAEE,OAAO,KAAP,EAAc;AACf,UAAI,KAAK,YAAY,mBAArB,EAA0C;AACzC,cAAM,IAAI,MAAM,CAAC,KAAX,CAAiB,qBAAjB,EAAwC,KAAK,CAAC,OAA9C,CAAN;AACA;;AAED,YAAM,KAAN;AACA;;AAED,IAAA,SAAS,CAAC,GAAV,CAAc,iBAAd,EAAiC,IAAjC,EAAuC,IAAvC;AAEA,UAAM,YAAY,GAAG,aAAa,CAAC,wBAAd,CAAuC,GAAvC,EAA4C,IAAI,CAAC,GAAjD,EAAsD;AAC1E,MAAA,MAAM,EAAE;AAAE,QAAA,GAAG,EAAE;AAAP;AADkE,KAAtD,CAArB;;AAIA,QAAI,YAAJ,EAAkB;AACjB,YAAM,WAAW,GAAG,IAApB;;AACA,UAAI,OAAJ,aAAI,OAAJ,eAAI,OAAO,CAAE,MAAb,EAAqB;AACpB,cAAM,SAAS,GAAG;AACjB,UAAA,CAAC,EAAE,OAAO,CAAC;AADM,SAAlB;;AAIA,YAAI,IAAI,CAAC,QAAT,EAAmB;AAClB,UAAA,QAAQ,CAAC,0CAAT,CAAoD,GAApD,EAAyD,IAAzD,EAA+D,SAA/D;AACA,SAFD,MAEO;AACN,UAAA,QAAQ,CAAC,kCAAT,CAA4C,GAA5C,EAAiD,IAAjD,EAAuD,SAAvD;AACA;AACD,OAVD,MAUO,IAAI,IAAI,CAAC,QAAT,EAAmB;AACzB,QAAA,QAAQ,CAAC,oCAAT,CAA8C,GAA9C,EAAmD,WAAnD;AACA,OAFM,MAEA;AACN,QAAA,QAAQ,CAAC,gCAAT,CAA0C,GAA1C,EAA+C,WAA/C;AACA;AACD;;AAED,QAAI,IAAI,CAAC,CAAL,KAAW,GAAf,EAAoB;AACnB,MAAA,QAAQ,CAAC,8BAAT,CAAwC,QAAxC,EAAkD,GAAlD,EAAuD,IAAvD;AACA;;AAED,IAAA,aAAa,CAAC,uBAAd,CAAsC,GAAtC,EAA2C,IAAI,CAAC,GAAhD;;AAEA,QAAI,IAAI,CAAC,MAAL,IAAe,IAAI,CAAC,QAAxB,EAAkC;AACjC,oBAAM,IAAI,CAAC,YAAL,CAAkB,IAAI,CAAC,MAAvB,EAA+B,IAAI,CAAC,GAApC,CAAN;AACA,KAnDoD,CAqDrD;;;AACA,IAAA,SAAS,CAAC,GAAV,CAAc,gBAAd,EAAgC,IAAhC,EAAsC,IAAtC;AAEA,kBAAM,IAAI,CAAC,YAAL,CAAkB,SAAS,CAAC,kBAA5B,EAAgD,IAAhD,EAAsD,IAAtD,CAAN;AACA,GA5DiC;AAAA,CAA3B","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Meteor } from 'meteor/meteor';\n\nimport { Rooms, Messages, Subscriptions } from '../../../models/server';\nimport { AppEvents, Apps } from '../../../apps/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Team } from '../../../../server/sdk';\nimport { IUser } from '../../../../definition/IUser';\n\nexport const removeUserFromRoom = async function (\n\trid: string,\n\tuser: IUser,\n\toptions?: { byUser: Pick<IUser, '_id' | 'username'> },\n): Promise<void> {\n\tconst room = Rooms.findOneById(rid);\n\n\tif (!room) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tawait Apps.triggerEvent(AppEvents.IPreRoomUserLeave, room, user);\n\t} catch (error) {\n\t\tif (error instanceof AppsEngineException) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\tcallbacks.run('beforeLeaveRoom', user, room);\n\n\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id, {\n\t\tfields: { _id: 1 },\n\t});\n\n\tif (subscription) {\n\t\tconst removedUser = user;\n\t\tif (options?.byUser) {\n\t\t\tconst extraData = {\n\t\t\t\tu: options.byUser,\n\t\t\t};\n\n\t\t\tif (room.teamMain) {\n\t\t\t\tMessages.createUserRemovedFromTeamWithRoomIdAndUser(rid, user, extraData);\n\t\t\t} else {\n\t\t\t\tMessages.createUserRemovedWithRoomIdAndUser(rid, user, extraData);\n\t\t\t}\n\t\t} else if (room.teamMain) {\n\t\t\tMessages.createUserLeaveTeamWithRoomIdAndUser(rid, removedUser);\n\t\t} else {\n\t\t\tMessages.createUserLeaveWithRoomIdAndUser(rid, removedUser);\n\t\t}\n\t}\n\n\tif (room.t === 'l') {\n\t\tMessages.createCommandWithRoomIdAndUser('survey', rid, user);\n\t}\n\n\tSubscriptions.removeByRoomIdAndUserId(rid, user._id);\n\n\tif (room.teamId && room.teamMain) {\n\t\tawait Team.removeMember(room.teamId, user._id);\n\t}\n\n\t// TODO: CACHE: maybe a queue?\n\tcallbacks.run('afterLeaveRoom', user, room);\n\n\tawait Apps.triggerEvent(AppEvents.IPostRoomUserLeave, room, user);\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"8242fb3f30d1878a57906e143380ca07c2a673e4"}
