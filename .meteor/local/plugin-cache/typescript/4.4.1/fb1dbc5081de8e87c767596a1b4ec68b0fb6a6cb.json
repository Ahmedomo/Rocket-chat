{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/server/startup/migrations/v258.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"server/startup/migrations/v258.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/server/startup/migrations/v258.ts","inputSourceMap":{"version":3,"file":"server/startup/migrations/v258.ts","sourceRoot":"","sources":["server/startup/migrations/v258.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,gCAAgC,CAAC;AAC7E,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAGpD,YAAY,CAAC;IACZ,OAAO,EAAE,GAAG;IACZ,KAAK,CAAC,EAAE;QACP,8BAA8B;QAC9B,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,IAAI,CAAwC,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QACnI,mDAAmD;QACnD,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC;QAEpE,6DAA6D;QAC7D,MAAM,OAAO,CAAC,UAAU,CACvB,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;YAC1C,MAAM,KAAK,GAAG;gBACb,KAAK,EAAE,IAAI;aACX,CAAC;YAEF,MAAM,MAAM,GAAG;gBACd,KAAK,EAAE;oBACN,KAAK,EAAE,GAAG;iBACV;aACD,CAAC;YAEF,MAAM,OAAO,GAAG;gBACf,KAAK,EAAE,IAAI;aACX,CAAC;YAEF,IAAI,KAAK,KAAK,eAAe,EAAE;gBAC9B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;aACpD;YAED,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7C,CAAC,CAAC,CACF,CAAC;QAEF,0CAA0C;QAC1C,MAAM,OAAO,CAAC,UAAU,CACvB,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE;YACrC,MAAM,KAAK,GAAG;gBACb,KAAK,EAAE,IAAI;aACX,CAAC;YAEF,MAAM,MAAM,GAAG;gBACd,KAAK,EAAE;oBACN,KAAK,EAAE,IAAI;iBACX;aACD,CAAC;YAEF,MAAM,OAAO,GAAG;gBACf,KAAK,EAAE,IAAI;aACX,CAAC;YAEF,IAAI,KAAK,KAAK,eAAe,EAAE;gBAC9B,OAAO,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;aACpD;YAED,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7C,CAAC,CAAC,CACF,CAAC;IACH,CAAC;CACD,CAAC,CAAC","sourcesContent":["import { Roles, Users, Subscriptions } from '../../../app/models/server/raw';\nimport { addMigration } from '../../lib/migrations';\nimport type { IRole } from '../../../definition/IUser';\n\naddMigration({\n\tversion: 258,\n\tasync up() {\n\t\t// Load all role ids and names\n\t\tconst roles = await Roles.find<Pick<IRole, '_id' | 'name' | 'scope'>>({}, { projection: { _id: 1, name: 1, scope: 1 } }).toArray();\n\t\t// Skip any role where the ID and name are the same\n\t\tconst filteredRoles = roles.filter(({ _id, name }) => _id !== name);\n\n\t\t// First, add the role id to all documents that have the name\n\t\tawait Promise.allSettled(\n\t\t\tfilteredRoles.map(({ _id, name, scope }) => {\n\t\t\t\tconst query = {\n\t\t\t\t\troles: name,\n\t\t\t\t};\n\n\t\t\t\tconst update = {\n\t\t\t\t\t$push: {\n\t\t\t\t\t\troles: _id,\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst options = {\n\t\t\t\t\tmulti: true,\n\t\t\t\t};\n\n\t\t\t\tif (scope === 'Subscriptions') {\n\t\t\t\t\treturn Subscriptions.update(query, update, options);\n\t\t\t\t}\n\n\t\t\t\treturn Users.update(query, update, options);\n\t\t\t}),\n\t\t);\n\n\t\t// Remove the role name from all documents\n\t\tawait Promise.allSettled(\n\t\t\tfilteredRoles.map(({ name, scope }) => {\n\t\t\t\tconst query = {\n\t\t\t\t\troles: name,\n\t\t\t\t};\n\n\t\t\t\tconst update = {\n\t\t\t\t\t$pull: {\n\t\t\t\t\t\troles: name,\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst options = {\n\t\t\t\t\tmulti: true,\n\t\t\t\t};\n\n\t\t\t\tif (scope === 'Subscriptions') {\n\t\t\t\t\treturn Subscriptions.update(query, update, options);\n\t\t\t\t}\n\n\t\t\t\treturn Users.update(query, update, options);\n\t\t\t}),\n\t\t);\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/server/startup/migrations/v258.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/startup/migrations/v258.ts"}},"code":"let Roles, Users, Subscriptions;\nmodule.link(\"../../../app/models/server/raw\", {\n  Roles(v) {\n    Roles = v;\n  },\n\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 0);\nlet addMigration;\nmodule.link(\"../../lib/migrations\", {\n  addMigration(v) {\n    addMigration = v;\n  }\n\n}, 1);\naddMigration({\n  version: 258,\n\n  up() {\n    return Promise.asyncApply(() => {\n      // Load all role ids and names\n      const roles = Promise.await(Roles.find({}, {\n        projection: {\n          _id: 1,\n          name: 1,\n          scope: 1\n        }\n      }).toArray()); // Skip any role where the ID and name are the same\n\n      const filteredRoles = roles.filter(_ref => {\n        let {\n          _id,\n          name\n        } = _ref;\n        return _id !== name;\n      }); // First, add the role id to all documents that have the name\n\n      Promise.await(Promise.allSettled(filteredRoles.map(_ref2 => {\n        let {\n          _id,\n          name,\n          scope\n        } = _ref2;\n        const query = {\n          roles: name\n        };\n        const update = {\n          $push: {\n            roles: _id\n          }\n        };\n        const options = {\n          multi: true\n        };\n\n        if (scope === 'Subscriptions') {\n          return Subscriptions.update(query, update, options);\n        }\n\n        return Users.update(query, update, options);\n      }))); // Remove the role name from all documents\n\n      Promise.await(Promise.allSettled(filteredRoles.map(_ref3 => {\n        let {\n          name,\n          scope\n        } = _ref3;\n        const query = {\n          roles: name\n        };\n        const update = {\n          $pull: {\n            roles: name\n          }\n        };\n        const options = {\n          multi: true\n        };\n\n        if (scope === 'Subscriptions') {\n          return Subscriptions.update(query, update, options);\n        }\n\n        return Users.update(query, update, options);\n      })));\n    });\n  }\n\n});","map":{"version":3,"sources":["server/startup/migrations/v258.ts"],"names":[],"mappings":"AAAA,IAAA,KAAA,EAAS,KAAT,EAAgB,aAAhB;AAAuB,MAAa,CAAA,IAAb,CAAe,gCAAf,EAAqB;AAAgC,EAAA,KAAC,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAjC;;AAAiC,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAjC;;AAAiC,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAjC,CAArB,EAAsD,CAAtD;AAAsD,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,sBAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAI7E,YAAY,CAAC;AACZ,EAAA,OAAO,EAAE,GADG;;AAEN,EAAA,EAAN;AAAA,oCAAQ;AACP;AACA,YAAM,KAAK,iBAAS,KAAK,CAAC,IAAN,CAAkD,EAAlD,EAAsD;AAAE,QAAA,UAAU,EAAE;AAAE,UAAA,GAAG,EAAE,CAAP;AAAU,UAAA,IAAI,EAAE,CAAhB;AAAmB,UAAA,KAAK,EAAE;AAA1B;AAAd,OAAtD,EAAqG,OAArG,EAAT,CAAX,CAFO,CAGP;;AACA,YAAM,aAAa,GAAG,KAAK,CAAC,MAAN,CAAa;AAAA,YAAC;AAAE,UAAA,GAAF;AAAO,UAAA;AAAP,SAAD;AAAA,eAAmB,GAAG,KAAK,IAA3B;AAAA,OAAb,CAAtB,CAJO,CAMP;;AACA,oBAAM,OAAO,CAAC,UAAR,CACL,aAAa,CAAC,GAAd,CAAkB,SAAyB;AAAA,YAAxB;AAAE,UAAA,GAAF;AAAO,UAAA,IAAP;AAAa,UAAA;AAAb,SAAwB;AAC1C,cAAM,KAAK,GAAG;AACb,UAAA,KAAK,EAAE;AADM,SAAd;AAIA,cAAM,MAAM,GAAG;AACd,UAAA,KAAK,EAAE;AACN,YAAA,KAAK,EAAE;AADD;AADO,SAAf;AAMA,cAAM,OAAO,GAAG;AACf,UAAA,KAAK,EAAE;AADQ,SAAhB;;AAIA,YAAI,KAAK,KAAK,eAAd,EAA+B;AAC9B,iBAAO,aAAa,CAAC,MAAd,CAAqB,KAArB,EAA4B,MAA5B,EAAoC,OAApC,CAAP;AACA;;AAED,eAAO,KAAK,CAAC,MAAN,CAAa,KAAb,EAAoB,MAApB,EAA4B,OAA5B,CAAP;AACA,OApBD,CADK,CAAN,EAPO,CA+BP;;AACA,oBAAM,OAAO,CAAC,UAAR,CACL,aAAa,CAAC,GAAd,CAAkB,SAAoB;AAAA,YAAnB;AAAE,UAAA,IAAF;AAAQ,UAAA;AAAR,SAAmB;AACrC,cAAM,KAAK,GAAG;AACb,UAAA,KAAK,EAAE;AADM,SAAd;AAIA,cAAM,MAAM,GAAG;AACd,UAAA,KAAK,EAAE;AACN,YAAA,KAAK,EAAE;AADD;AADO,SAAf;AAMA,cAAM,OAAO,GAAG;AACf,UAAA,KAAK,EAAE;AADQ,SAAhB;;AAIA,YAAI,KAAK,KAAK,eAAd,EAA+B;AAC9B,iBAAO,aAAa,CAAC,MAAd,CAAqB,KAArB,EAA4B,MAA5B,EAAoC,OAApC,CAAP;AACA;;AAED,eAAO,KAAK,CAAC,MAAN,CAAa,KAAb,EAAoB,MAApB,EAA4B,OAA5B,CAAP;AACA,OApBD,CADK,CAAN;AAuBA,KAvDD;AAAA;;AAFY,CAAD,CAAZ","sourcesContent":["import { Roles, Users, Subscriptions } from '../../../app/models/server/raw';\nimport { addMigration } from '../../lib/migrations';\nimport type { IRole } from '../../../definition/IUser';\n\naddMigration({\n\tversion: 258,\n\tasync up() {\n\t\t// Load all role ids and names\n\t\tconst roles = await Roles.find<Pick<IRole, '_id' | 'name' | 'scope'>>({}, { projection: { _id: 1, name: 1, scope: 1 } }).toArray();\n\t\t// Skip any role where the ID and name are the same\n\t\tconst filteredRoles = roles.filter(({ _id, name }) => _id !== name);\n\n\t\t// First, add the role id to all documents that have the name\n\t\tawait Promise.allSettled(\n\t\t\tfilteredRoles.map(({ _id, name, scope }) => {\n\t\t\t\tconst query = {\n\t\t\t\t\troles: name,\n\t\t\t\t};\n\n\t\t\t\tconst update = {\n\t\t\t\t\t$push: {\n\t\t\t\t\t\troles: _id,\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst options = {\n\t\t\t\t\tmulti: true,\n\t\t\t\t};\n\n\t\t\t\tif (scope === 'Subscriptions') {\n\t\t\t\t\treturn Subscriptions.update(query, update, options);\n\t\t\t\t}\n\n\t\t\t\treturn Users.update(query, update, options);\n\t\t\t}),\n\t\t);\n\n\t\t// Remove the role name from all documents\n\t\tawait Promise.allSettled(\n\t\t\tfilteredRoles.map(({ name, scope }) => {\n\t\t\t\tconst query = {\n\t\t\t\t\troles: name,\n\t\t\t\t};\n\n\t\t\t\tconst update = {\n\t\t\t\t\t$pull: {\n\t\t\t\t\t\troles: name,\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst options = {\n\t\t\t\t\tmulti: true,\n\t\t\t\t};\n\n\t\t\t\tif (scope === 'Subscriptions') {\n\t\t\t\t\treturn Subscriptions.update(query, update, options);\n\t\t\t\t}\n\n\t\t\t\treturn Users.update(query, update, options);\n\t\t\t}),\n\t\t);\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"fb1dbc5081de8e87c767596a1b4ec68b0fb6a6cb"}
