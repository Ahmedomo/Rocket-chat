{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/createDirectRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/lib/server/functions/createDirectRoom.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/createDirectRoom.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/createDirectRoom.ts","sourceRoot":"","sources":["app/lib/server/functions/createDirectRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport { Apps } from '../../../apps/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Rooms } from '../../../models/server';\nimport { settings } from '../../../settings/server';\nimport { getDefaultSubscriptionPref } from '../../../utils/server';\nimport { Users, Subscriptions } from '../../../models/server/raw';\nimport { IUser } from '../../../../definition/IUser';\nimport { ICreateRoomParams } from '../../../../server/sdk/types/IRoomService';\n\nconst generateSubscription = (fname: string, name: string, user: IUser, extra: {}): any => ({\n\t_id: Random.id(),\n\talert: false,\n\tunread: 0,\n\tuserMentions: 0,\n\tgroupMentions: 0,\n\t...(user.customFields && { customFields: user.customFields }),\n\t...getDefaultSubscriptionPref(user),\n\t...extra,\n\tt: 'd',\n\tfname,\n\tname,\n\tu: {\n\t\t_id: user._id,\n\t\tusername: user.username,\n\t},\n});\n\nconst getFname = (members: IUser[]): string => members.map(({ name, username }) => name || username).join(', ');\nconst getName = (members: IUser[]): string => members.map(({ username }) => username).join(', ');\n\nexport const createDirectRoom = function (members: IUser[], roomExtraData = {}, options: ICreateRoomParams['options']): unknown {\n\tif (members.length > (settings.get('DirectMesssage_maxUsers') || 1)) {\n\t\tthrow new Error('error-direct-message-max-user-exceeded');\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst sortedMembers = members.sort((u1, u2) => (u1.name! || u1.username!).localeCompare(u2.name! || u2.username!));\n\n\tconst usernames = sortedMembers.map(({ username }) => username);\n\tconst uids = members.map(({ _id }) => _id).sort();\n\n\t// Deprecated: using users' _id to compose the room _id is deprecated\n\tconst room =\n\t\tuids.length === 2\n\t\t\t? Rooms.findOneById(uids.join(''), { fields: { _id: 1 } })\n\t\t\t: Rooms.findOneDirectRoomContainingAllUserIDs(uids, { fields: { _id: 1 } });\n\n\tconst isNewRoom = !room;\n\n\tconst roomInfo = {\n\t\t...(uids.length === 2 && { _id: uids.join('') }), // Deprecated: using users' _id to compose the room _id is deprecated\n\t\tt: 'd',\n\t\tusernames,\n\t\tusersCount: members.length,\n\t\tmsgs: 0,\n\t\tts: new Date(),\n\t\tuids,\n\t\t...roomExtraData,\n\t};\n\n\tif (isNewRoom) {\n\t\tconst tmpRoom = {\n\t\t\t...roomInfo,\n\t\t\t_USERNAMES: usernames,\n\t\t};\n\n\t\tconst prevent = Promise.await(\n\t\t\tApps.triggerEvent('IPreRoomCreatePrevent', tmpRoom).catch((error) => {\n\t\t\t\tif (error instanceof AppsEngineException) {\n\t\t\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}),\n\t\t);\n\t\tif (prevent) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', 'A Rocket.Chat App prevented the room creation.');\n\t\t}\n\n\t\tconst result = Promise.await(\n\t\t\tApps.triggerEvent('IPreRoomCreateModify', Promise.await(Apps.triggerEvent('IPreRoomCreateExtend', tmpRoom))),\n\t\t);\n\n\t\tif (typeof result === 'object') {\n\t\t\tObject.assign(roomInfo, result);\n\t\t}\n\t}\n\n\tconst rid = room?._id || Rooms.insert(roomInfo);\n\n\tif (members.length === 1) {\n\t\t// dm to yourself\n\t\tSubscriptions.updateOne(\n\t\t\t{ rid, 'u._id': members[0]._id },\n\t\t\t{\n\t\t\t\t$set: { open: true },\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t$setOnInsert: generateSubscription(members[0].name! || members[0].username!, members[0].username!, members[0], {\n\t\t\t\t\t...options?.subscriptionExtra,\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t} else {\n\t\tconst memberIds = members.map((member) => member._id);\n\t\tconst membersWithPreferences = Users.find({ _id: { $in: memberIds } }, { fields: { 'username': 1, 'settings.preferences': 1 } });\n\n\t\tmembersWithPreferences.forEach((member) => {\n\t\t\tconst otherMembers = sortedMembers.filter(({ _id }) => _id !== member._id);\n\t\t\tSubscriptions.updateOne(\n\t\t\t\t{ rid, 'u._id': member._id },\n\t\t\t\t{\n\t\t\t\t\t...(options?.creator === member._id && { $set: { open: true } }),\n\t\t\t\t\t$setOnInsert: generateSubscription(getFname(otherMembers), getName(otherMembers), member, {\n\t\t\t\t\t\t...options?.subscriptionExtra,\n\t\t\t\t\t\t...(options?.creator !== member._id && { open: members.length > 2 }),\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{ upsert: true },\n\t\t\t);\n\t\t});\n\t}\n\n\t// If the room is new, run a callback\n\tif (isNewRoom) {\n\t\tconst insertedRoom = Rooms.findOneById(rid);\n\n\t\tcallbacks.run('afterCreateDirectRoom', insertedRoom, { members });\n\n\t\tApps.triggerEvent('IPostRoomCreate', insertedRoom);\n\t}\n\n\treturn {\n\t\t_id: rid,\n\t\tusernames,\n\t\tt: 'd',\n\t\tinserted: isNewRoom,\n\t};\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/createDirectRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/createDirectRoom.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  createDirectRoom: () => createDirectRoom\n});\nlet AppsEngineException;\nmodule.link(\"@rocket.chat/apps-engine/definition/exceptions\", {\n  AppsEngineException(v) {\n    AppsEngineException = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Random;\nmodule.link(\"meteor/random\", {\n  Random(v) {\n    Random = v;\n  }\n\n}, 2);\nlet Apps;\nmodule.link(\"../../../apps/server\", {\n  Apps(v) {\n    Apps = v;\n  }\n\n}, 3);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 4);\nlet Rooms;\nmodule.link(\"../../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 5);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 6);\nlet getDefaultSubscriptionPref;\nmodule.link(\"../../../utils/server\", {\n  getDefaultSubscriptionPref(v) {\n    getDefaultSubscriptionPref = v;\n  }\n\n}, 7);\nlet Users, Subscriptions;\nmodule.link(\"../../../models/server/raw\", {\n  Users(v) {\n    Users = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 8);\n\nconst generateSubscription = (fname, name, user, extra) => _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n  _id: Random.id(),\n  alert: false,\n  unread: 0,\n  userMentions: 0,\n  groupMentions: 0\n}, user.customFields && {\n  customFields: user.customFields\n}), getDefaultSubscriptionPref(user)), extra), {}, {\n  t: 'd',\n  fname,\n  name,\n  u: {\n    _id: user._id,\n    username: user.username\n  }\n});\n\nconst getFname = members => members.map(_ref => {\n  let {\n    name,\n    username\n  } = _ref;\n  return name || username;\n}).join(', ');\n\nconst getName = members => members.map(_ref2 => {\n  let {\n    username\n  } = _ref2;\n  return username;\n}).join(', ');\n\nconst createDirectRoom = function (members) {\n  let roomExtraData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let options = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (members.length > (settings.get('DirectMesssage_maxUsers') || 1)) {\n    throw new Error('error-direct-message-max-user-exceeded');\n  } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n  const sortedMembers = members.sort((u1, u2) => (u1.name || u1.username).localeCompare(u2.name || u2.username));\n  const usernames = sortedMembers.map(_ref3 => {\n    let {\n      username\n    } = _ref3;\n    return username;\n  });\n  const uids = members.map(_ref4 => {\n    let {\n      _id\n    } = _ref4;\n    return _id;\n  }).sort(); // Deprecated: using users' _id to compose the room _id is deprecated\n\n  const room = uids.length === 2 ? Rooms.findOneById(uids.join(''), {\n    fields: {\n      _id: 1\n    }\n  }) : Rooms.findOneDirectRoomContainingAllUserIDs(uids, {\n    fields: {\n      _id: 1\n    }\n  });\n  const isNewRoom = !room;\n\n  const roomInfo = _objectSpread(_objectSpread({}, uids.length === 2 && {\n    _id: uids.join('')\n  }), {}, {\n    t: 'd',\n    usernames,\n    usersCount: members.length,\n    msgs: 0,\n    ts: new Date(),\n    uids\n  }, roomExtraData);\n\n  if (isNewRoom) {\n    const tmpRoom = _objectSpread(_objectSpread({}, roomInfo), {}, {\n      _USERNAMES: usernames\n    });\n\n    const prevent = Promise.await(Apps.triggerEvent('IPreRoomCreatePrevent', tmpRoom).catch(error => {\n      if (error instanceof AppsEngineException) {\n        throw new Meteor.Error('error-app-prevented', error.message);\n      }\n\n      throw error;\n    }));\n\n    if (prevent) {\n      throw new Meteor.Error('error-app-prevented', 'A Rocket.Chat App prevented the room creation.');\n    }\n\n    const result = Promise.await(Apps.triggerEvent('IPreRoomCreateModify', Promise.await(Apps.triggerEvent('IPreRoomCreateExtend', tmpRoom))));\n\n    if (typeof result === 'object') {\n      Object.assign(roomInfo, result);\n    }\n  }\n\n  const rid = (room === null || room === void 0 ? void 0 : room._id) || Rooms.insert(roomInfo);\n\n  if (members.length === 1) {\n    // dm to yourself\n    Subscriptions.updateOne({\n      rid,\n      'u._id': members[0]._id\n    }, {\n      $set: {\n        open: true\n      },\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      $setOnInsert: generateSubscription(members[0].name || members[0].username, members[0].username, members[0], _objectSpread({}, options === null || options === void 0 ? void 0 : options.subscriptionExtra))\n    }, {\n      upsert: true\n    });\n  } else {\n    const memberIds = members.map(member => member._id);\n    const membersWithPreferences = Users.find({\n      _id: {\n        $in: memberIds\n      }\n    }, {\n      fields: {\n        'username': 1,\n        'settings.preferences': 1\n      }\n    });\n    membersWithPreferences.forEach(member => {\n      const otherMembers = sortedMembers.filter(_ref5 => {\n        let {\n          _id\n        } = _ref5;\n        return _id !== member._id;\n      });\n      Subscriptions.updateOne({\n        rid,\n        'u._id': member._id\n      }, _objectSpread(_objectSpread({}, (options === null || options === void 0 ? void 0 : options.creator) === member._id && {\n        $set: {\n          open: true\n        }\n      }), {}, {\n        $setOnInsert: generateSubscription(getFname(otherMembers), getName(otherMembers), member, _objectSpread(_objectSpread({}, options === null || options === void 0 ? void 0 : options.subscriptionExtra), (options === null || options === void 0 ? void 0 : options.creator) !== member._id && {\n          open: members.length > 2\n        }))\n      }), {\n        upsert: true\n      });\n    });\n  } // If the room is new, run a callback\n\n\n  if (isNewRoom) {\n    const insertedRoom = Rooms.findOneById(rid);\n    callbacks.run('afterCreateDirectRoom', insertedRoom, {\n      members\n    });\n    Apps.triggerEvent('IPostRoomCreate', insertedRoom);\n  }\n\n  return {\n    _id: rid,\n    usernames,\n    t: 'd',\n    inserted: isNewRoom\n  };\n};","map":{"version":3,"sources":["app/lib/server/functions/createDirectRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Meteor } from 'meteor/meteor';\nimport { Random } from 'meteor/random';\n\nimport { Apps } from '../../../apps/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Rooms } from '../../../models/server';\nimport { settings } from '../../../settings/server';\nimport { getDefaultSubscriptionPref } from '../../../utils/server';\nimport { Users, Subscriptions } from '../../../models/server/raw';\nimport { IUser } from '../../../../definition/IUser';\nimport { ICreateRoomParams } from '../../../../server/sdk/types/IRoomService';\n\nconst generateSubscription = (fname: string, name: string, user: IUser, extra: {}): any => ({\n\t_id: Random.id(),\n\talert: false,\n\tunread: 0,\n\tuserMentions: 0,\n\tgroupMentions: 0,\n\t...(user.customFields && { customFields: user.customFields }),\n\t...getDefaultSubscriptionPref(user),\n\t...extra,\n\tt: 'd',\n\tfname,\n\tname,\n\tu: {\n\t\t_id: user._id,\n\t\tusername: user.username,\n\t},\n});\n\nconst getFname = (members: IUser[]): string => members.map(({ name, username }) => name || username).join(', ');\nconst getName = (members: IUser[]): string => members.map(({ username }) => username).join(', ');\n\nexport const createDirectRoom = function (members: IUser[], roomExtraData = {}, options: ICreateRoomParams['options']): unknown {\n\tif (members.length > (settings.get('DirectMesssage_maxUsers') || 1)) {\n\t\tthrow new Error('error-direct-message-max-user-exceeded');\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\tconst sortedMembers = members.sort((u1, u2) => (u1.name! || u1.username!).localeCompare(u2.name! || u2.username!));\n\n\tconst usernames = sortedMembers.map(({ username }) => username);\n\tconst uids = members.map(({ _id }) => _id).sort();\n\n\t// Deprecated: using users' _id to compose the room _id is deprecated\n\tconst room =\n\t\tuids.length === 2\n\t\t\t? Rooms.findOneById(uids.join(''), { fields: { _id: 1 } })\n\t\t\t: Rooms.findOneDirectRoomContainingAllUserIDs(uids, { fields: { _id: 1 } });\n\n\tconst isNewRoom = !room;\n\n\tconst roomInfo = {\n\t\t...(uids.length === 2 && { _id: uids.join('') }), // Deprecated: using users' _id to compose the room _id is deprecated\n\t\tt: 'd',\n\t\tusernames,\n\t\tusersCount: members.length,\n\t\tmsgs: 0,\n\t\tts: new Date(),\n\t\tuids,\n\t\t...roomExtraData,\n\t};\n\n\tif (isNewRoom) {\n\t\tconst tmpRoom = {\n\t\t\t...roomInfo,\n\t\t\t_USERNAMES: usernames,\n\t\t};\n\n\t\tconst prevent = Promise.await(\n\t\t\tApps.triggerEvent('IPreRoomCreatePrevent', tmpRoom).catch((error) => {\n\t\t\t\tif (error instanceof AppsEngineException) {\n\t\t\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t}),\n\t\t);\n\t\tif (prevent) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', 'A Rocket.Chat App prevented the room creation.');\n\t\t}\n\n\t\tconst result = Promise.await(\n\t\t\tApps.triggerEvent('IPreRoomCreateModify', Promise.await(Apps.triggerEvent('IPreRoomCreateExtend', tmpRoom))),\n\t\t);\n\n\t\tif (typeof result === 'object') {\n\t\t\tObject.assign(roomInfo, result);\n\t\t}\n\t}\n\n\tconst rid = room?._id || Rooms.insert(roomInfo);\n\n\tif (members.length === 1) {\n\t\t// dm to yourself\n\t\tSubscriptions.updateOne(\n\t\t\t{ rid, 'u._id': members[0]._id },\n\t\t\t{\n\t\t\t\t$set: { open: true },\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t$setOnInsert: generateSubscription(members[0].name! || members[0].username!, members[0].username!, members[0], {\n\t\t\t\t\t...options?.subscriptionExtra,\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{ upsert: true },\n\t\t);\n\t} else {\n\t\tconst memberIds = members.map((member) => member._id);\n\t\tconst membersWithPreferences = Users.find({ _id: { $in: memberIds } }, { fields: { 'username': 1, 'settings.preferences': 1 } });\n\n\t\tmembersWithPreferences.forEach((member) => {\n\t\t\tconst otherMembers = sortedMembers.filter(({ _id }) => _id !== member._id);\n\t\t\tSubscriptions.updateOne(\n\t\t\t\t{ rid, 'u._id': member._id },\n\t\t\t\t{\n\t\t\t\t\t...(options?.creator === member._id && { $set: { open: true } }),\n\t\t\t\t\t$setOnInsert: generateSubscription(getFname(otherMembers), getName(otherMembers), member, {\n\t\t\t\t\t\t...options?.subscriptionExtra,\n\t\t\t\t\t\t...(options?.creator !== member._id && { open: members.length > 2 }),\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{ upsert: true },\n\t\t\t);\n\t\t});\n\t}\n\n\t// If the room is new, run a callback\n\tif (isNewRoom) {\n\t\tconst insertedRoom = Rooms.findOneById(rid);\n\n\t\tcallbacks.run('afterCreateDirectRoom', insertedRoom, { members });\n\n\t\tApps.triggerEvent('IPostRoomCreate', insertedRoom);\n\t}\n\n\treturn {\n\t\t_id: rid,\n\t\tusernames,\n\t\tt: 'd',\n\t\tinserted: isNewRoom,\n\t};\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"a5fdded245a4cf5fa0f0540edf7c7e7bf07ec4c4"}
