{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/slashcommands-archiveroom/server/server.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/slashcommands-archiveroom/server/server.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/slashcommands-archiveroom/server/server.ts","inputSourceMap":{"version":3,"file":"app/slashcommands-archiveroom/server/server.ts","sourceRoot":"","sources":["app/slashcommands-archiveroom/server/server.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAC7D,OAAO,EAAE,GAAG,EAAE,MAAM,yBAAyB,CAAC;AAC9C,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,SAAS,OAAO,CAAC,QAAmB,EAAE,MAAc,EAAE,IAA4B;IACjF,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;IAE5B,IAAI,IAAI,CAAC;IAET,IAAI,OAAO,KAAK,EAAE,EAAE;QACnB,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;KACpB;SAAM;QACN,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACnC,IAAI,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;KACpC;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;IAE/B,IAAI,CAAC,MAAM,EAAE;QACZ,OAAO;KACP;IAED,IAAI,CAAC,IAAI,EAAE;QACV,GAAG,CAAC,SAAS,CAAC,yBAAyB,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE;YAC1D,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,sBAAsB,EAAE;gBACvC,WAAW,EAAE,SAAS;gBACtB,OAAO,EAAE,CAAC,OAAO,CAAC;gBAClB,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI;aACrC,CAAC;SACF,CAAC,CAAC;QACH,OAAO;KACP;IAED,uCAAuC;IACvC,IAAI,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE;QACnB,OAAO;KACP;IAED,IAAI,IAAI,CAAC,QAAQ,EAAE;QAClB,GAAG,CAAC,SAAS,CAAC,yBAAyB,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE;YAC1D,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,iCAAiC,EAAE;gBAClD,WAAW,EAAE,SAAS;gBACtB,OAAO,EAAE,CAAC,OAAO,CAAC;gBAClB,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI;aACrC,CAAC;SACF,CAAC,CAAC;QACH,OAAO;KACP;IACD,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAErC,QAAQ,CAAC,iCAAiC,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;IACpE,GAAG,CAAC,SAAS,CAAC,yBAAyB,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE;QAC1D,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,kBAAkB,EAAE;YACnC,WAAW,EAAE,SAAS;YACtB,OAAO,EAAE,CAAC,OAAO,CAAC;YAClB,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI;SACrC,CAAC;KACF,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AAChB,CAAC;AAED,aAAa,CAAC,GAAG,CAChB,SAAS,EACT,OAAO,EACP;IACC,WAAW,EAAE,SAAS;IACtB,MAAM,EAAE,UAAU;IAClB,UAAU,EAAE,cAAc;CAC1B,EACD,SAAS,EACT,KAAK,EACL,SAAS,EACT,SAAS,CACT,CAAC","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { Rooms, Messages } from '../../models/server';\nimport { slashCommands } from '../../utils/lib/slashCommand';\nimport { api } from '../../../server/sdk/api';\nimport { settings } from '../../settings/server';\n\nfunction Archive(_command: 'archive', params: string, item: Record<string, string>): void | Function {\n\tlet channel = params.trim();\n\n\tlet room;\n\n\tif (channel === '') {\n\t\troom = Rooms.findOneById(item.rid);\n\t\tchannel = room.name;\n\t} else {\n\t\tchannel = channel.replace('#', '');\n\t\troom = Rooms.findOneByName(channel);\n\t}\n\n\tconst userId = Meteor.userId();\n\n\tif (!userId) {\n\t\treturn;\n\t}\n\n\tif (!room) {\n\t\tapi.broadcast('notify.ephemeralMessage', userId, item.rid, {\n\t\t\tmsg: TAPi18n.__('Channel_doesnt_exist', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel],\n\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t}),\n\t\t});\n\t\treturn;\n\t}\n\n\t// You can not archive direct messages.\n\tif (room.t === 'd') {\n\t\treturn;\n\t}\n\n\tif (room.archived) {\n\t\tapi.broadcast('notify.ephemeralMessage', userId, item.rid, {\n\t\t\tmsg: TAPi18n.__('Duplicate_archived_channel_name', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel],\n\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t}),\n\t\t});\n\t\treturn;\n\t}\n\tMeteor.call('archiveRoom', room._id);\n\n\tMessages.createRoomArchivedByRoomIdAndUser(room._id, Meteor.user());\n\tapi.broadcast('notify.ephemeralMessage', userId, item.rid, {\n\t\tmsg: TAPi18n.__('Channel_Archived', {\n\t\t\tpostProcess: 'sprintf',\n\t\t\tsprintf: [channel],\n\t\t\tlng: settings.get('Language') || 'en',\n\t\t}),\n\t});\n\n\treturn Archive;\n}\n\nslashCommands.add(\n\t'archive',\n\tArchive,\n\t{\n\t\tdescription: 'Archive',\n\t\tparams: '#channel',\n\t\tpermission: 'archive-room',\n\t},\n\tundefined,\n\tfalse,\n\tundefined,\n\tundefined,\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/slashcommands-archiveroom/server/server.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/slashcommands-archiveroom/server/server.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 1);\nlet Rooms, Messages;\nmodule.link(\"../../models/server\", {\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Messages(v) {\n    Messages = v;\n  }\n\n}, 2);\nlet slashCommands;\nmodule.link(\"../../utils/lib/slashCommand\", {\n  slashCommands(v) {\n    slashCommands = v;\n  }\n\n}, 3);\nlet api;\nmodule.link(\"../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\n\nfunction Archive(_command, params, item) {\n  let channel = params.trim();\n  let room;\n\n  if (channel === '') {\n    room = Rooms.findOneById(item.rid);\n    channel = room.name;\n  } else {\n    channel = channel.replace('#', '');\n    room = Rooms.findOneByName(channel);\n  }\n\n  const userId = Meteor.userId();\n\n  if (!userId) {\n    return;\n  }\n\n  if (!room) {\n    api.broadcast('notify.ephemeralMessage', userId, item.rid, {\n      msg: TAPi18n.__('Channel_doesnt_exist', {\n        postProcess: 'sprintf',\n        sprintf: [channel],\n        lng: settings.get('Language') || 'en'\n      })\n    });\n    return;\n  } // You can not archive direct messages.\n\n\n  if (room.t === 'd') {\n    return;\n  }\n\n  if (room.archived) {\n    api.broadcast('notify.ephemeralMessage', userId, item.rid, {\n      msg: TAPi18n.__('Duplicate_archived_channel_name', {\n        postProcess: 'sprintf',\n        sprintf: [channel],\n        lng: settings.get('Language') || 'en'\n      })\n    });\n    return;\n  }\n\n  Meteor.call('archiveRoom', room._id);\n  Messages.createRoomArchivedByRoomIdAndUser(room._id, Meteor.user());\n  api.broadcast('notify.ephemeralMessage', userId, item.rid, {\n    msg: TAPi18n.__('Channel_Archived', {\n      postProcess: 'sprintf',\n      sprintf: [channel],\n      lng: settings.get('Language') || 'en'\n    })\n  });\n  return Archive;\n}\n\nslashCommands.add('archive', Archive, {\n  description: 'Archive',\n  params: '#channel',\n  permission: 'archive-room'\n}, undefined, false, undefined, undefined);","map":{"version":3,"sources":["app/slashcommands-archiveroom/server/server.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { Rooms, Messages } from '../../models/server';\nimport { slashCommands } from '../../utils/lib/slashCommand';\nimport { api } from '../../../server/sdk/api';\nimport { settings } from '../../settings/server';\n\nfunction Archive(_command: 'archive', params: string, item: Record<string, string>): void | Function {\n\tlet channel = params.trim();\n\n\tlet room;\n\n\tif (channel === '') {\n\t\troom = Rooms.findOneById(item.rid);\n\t\tchannel = room.name;\n\t} else {\n\t\tchannel = channel.replace('#', '');\n\t\troom = Rooms.findOneByName(channel);\n\t}\n\n\tconst userId = Meteor.userId();\n\n\tif (!userId) {\n\t\treturn;\n\t}\n\n\tif (!room) {\n\t\tapi.broadcast('notify.ephemeralMessage', userId, item.rid, {\n\t\t\tmsg: TAPi18n.__('Channel_doesnt_exist', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel],\n\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t}),\n\t\t});\n\t\treturn;\n\t}\n\n\t// You can not archive direct messages.\n\tif (room.t === 'd') {\n\t\treturn;\n\t}\n\n\tif (room.archived) {\n\t\tapi.broadcast('notify.ephemeralMessage', userId, item.rid, {\n\t\t\tmsg: TAPi18n.__('Duplicate_archived_channel_name', {\n\t\t\t\tpostProcess: 'sprintf',\n\t\t\t\tsprintf: [channel],\n\t\t\t\tlng: settings.get('Language') || 'en',\n\t\t\t}),\n\t\t});\n\t\treturn;\n\t}\n\tMeteor.call('archiveRoom', room._id);\n\n\tMessages.createRoomArchivedByRoomIdAndUser(room._id, Meteor.user());\n\tapi.broadcast('notify.ephemeralMessage', userId, item.rid, {\n\t\tmsg: TAPi18n.__('Channel_Archived', {\n\t\t\tpostProcess: 'sprintf',\n\t\t\tsprintf: [channel],\n\t\t\tlng: settings.get('Language') || 'en',\n\t\t}),\n\t});\n\n\treturn Archive;\n}\n\nslashCommands.add(\n\t'archive',\n\tArchive,\n\t{\n\t\tdescription: 'Archive',\n\t\tparams: '#channel',\n\t\tpermission: 'archive-room',\n\t},\n\tundefined,\n\tfalse,\n\tundefined,\n\tundefined,\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"6e66933c83794cc38393a4ef4ca6af6f164a4a00"}
