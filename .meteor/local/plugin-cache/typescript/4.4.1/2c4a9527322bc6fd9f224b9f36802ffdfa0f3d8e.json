{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/server/services/startup.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"server/services/startup.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/server/services/startup.ts","inputSourceMap":{"version":3,"file":"server/services/startup.ts","sourceRoot":"","sources":["server/services/startup.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAC;AAE9C,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AACjC,OAAO,EAAE,qBAAqB,EAAE,MAAM,+DAA+D,CAAC;AACtG,OAAO,EAAE,sBAAsB,EAAE,MAAM,gEAAgE,CAAC;AACxG,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AACzD,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,sBAAsB,EAAE,MAAM,4BAA4B,CAAC;AACpE,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAC7C,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAEjD,MAAM,EAAE,EAAE,EAAE,GAAG,cAAc,CAAC,6BAA6B,EAAE,CAAC,KAAK,CAAC;AAEpE,GAAG,CAAC,eAAe,CAAC,IAAI,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9C,GAAG,CAAC,eAAe,CAAC,IAAI,qBAAqB,EAAE,CAAC,CAAC;AACjD,GAAG,CAAC,eAAe,CAAC,IAAI,sBAAsB,EAAE,CAAC,CAAC;AAClD,GAAG,CAAC,eAAe,CAAC,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3C,GAAG,CAAC,eAAe,CAAC,IAAI,WAAW,EAAE,CAAC,CAAC;AACvC,GAAG,CAAC,eAAe,CAAC,IAAI,YAAY,EAAE,CAAC,CAAC;AACxC,GAAG,CAAC,eAAe,CAAC,IAAI,aAAa,EAAE,CAAC,CAAC;AACzC,GAAG,CAAC,eAAe,CAAC,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;AACxC,GAAG,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,GAAG,CAAC,eAAe,CAAC,IAAI,iBAAiB,EAAE,CAAC,CAAC;AAC7C,GAAG,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,GAAG,CAAC,eAAe,CAAC,IAAI,sBAAsB,CAAC,EAAE,CAAC,CAAC,CAAC;AACpD,GAAG,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,GAAG,CAAC,eAAe,CAAC,IAAI,YAAY,EAAE,CAAC,CAAC;AAExC,+GAA+G;AAC/G,IAAI,CAAC,WAAW,EAAE,EAAE;IACnB,CAAC,KAAK,IAAmB,EAAE;QAC1B,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;QAElE,GAAG,CAAC,eAAe,CAAC,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,EAAE,CAAC;CACL","sourcesContent":["import { MongoInternals } from 'meteor/mongo';\n\nimport { AnalyticsService } from './analytics/service';\nimport { api } from '../sdk/api';\nimport { AuthorizationLivechat } from '../../app/livechat/server/roomAccessValidator.internalService';\nimport { AuthorizationTokenpass } from '../../app/tokenpass/server/roomAccessValidator.internalService';\nimport { BannerService } from './banner/service';\nimport { LDAPService } from './ldap/service';\nimport { MediaService } from './image/service';\nimport { MeteorService } from './meteor/service';\nimport { NPSService } from './nps/service';\nimport { RoomService } from './room/service';\nimport { SAUMonitorService } from './sauMonitor/service';\nimport { TeamService } from './team/service';\nimport { UiKitCoreApp } from './uikit-core-app/service';\nimport { OmnichannelVoipService } from './omnichannel-voip/service';\nimport { VoipService } from './voip/service';\nimport { isRunningMs } from '../lib/isRunningMs';\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\napi.registerService(new AnalyticsService(db));\napi.registerService(new AuthorizationLivechat());\napi.registerService(new AuthorizationTokenpass());\napi.registerService(new BannerService(db));\napi.registerService(new LDAPService());\napi.registerService(new MediaService());\napi.registerService(new MeteorService());\napi.registerService(new NPSService(db));\napi.registerService(new RoomService(db));\napi.registerService(new SAUMonitorService());\napi.registerService(new VoipService(db));\napi.registerService(new OmnichannelVoipService(db));\napi.registerService(new TeamService(db));\napi.registerService(new UiKitCoreApp());\n\n// if the process is running in micro services mode we don't need to register services that will run separately\nif (!isRunningMs()) {\n\t(async (): Promise<void> => {\n\t\tconst { Authorization } = await import('./authorization/service');\n\n\t\tapi.registerService(new Authorization(db));\n\t})();\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/server/services/startup.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/startup.ts"}},"code":"let MongoInternals;\nmodule.link(\"meteor/mongo\", {\n  MongoInternals(v) {\n    MongoInternals = v;\n  }\n\n}, 0);\nlet AnalyticsService;\nmodule.link(\"./analytics/service\", {\n  AnalyticsService(v) {\n    AnalyticsService = v;\n  }\n\n}, 1);\nlet api;\nmodule.link(\"../sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 2);\nlet AuthorizationLivechat;\nmodule.link(\"../../app/livechat/server/roomAccessValidator.internalService\", {\n  AuthorizationLivechat(v) {\n    AuthorizationLivechat = v;\n  }\n\n}, 3);\nlet AuthorizationTokenpass;\nmodule.link(\"../../app/tokenpass/server/roomAccessValidator.internalService\", {\n  AuthorizationTokenpass(v) {\n    AuthorizationTokenpass = v;\n  }\n\n}, 4);\nlet BannerService;\nmodule.link(\"./banner/service\", {\n  BannerService(v) {\n    BannerService = v;\n  }\n\n}, 5);\nlet LDAPService;\nmodule.link(\"./ldap/service\", {\n  LDAPService(v) {\n    LDAPService = v;\n  }\n\n}, 6);\nlet MediaService;\nmodule.link(\"./image/service\", {\n  MediaService(v) {\n    MediaService = v;\n  }\n\n}, 7);\nlet MeteorService;\nmodule.link(\"./meteor/service\", {\n  MeteorService(v) {\n    MeteorService = v;\n  }\n\n}, 8);\nlet NPSService;\nmodule.link(\"./nps/service\", {\n  NPSService(v) {\n    NPSService = v;\n  }\n\n}, 9);\nlet RoomService;\nmodule.link(\"./room/service\", {\n  RoomService(v) {\n    RoomService = v;\n  }\n\n}, 10);\nlet SAUMonitorService;\nmodule.link(\"./sauMonitor/service\", {\n  SAUMonitorService(v) {\n    SAUMonitorService = v;\n  }\n\n}, 11);\nlet TeamService;\nmodule.link(\"./team/service\", {\n  TeamService(v) {\n    TeamService = v;\n  }\n\n}, 12);\nlet UiKitCoreApp;\nmodule.link(\"./uikit-core-app/service\", {\n  UiKitCoreApp(v) {\n    UiKitCoreApp = v;\n  }\n\n}, 13);\nlet OmnichannelVoipService;\nmodule.link(\"./omnichannel-voip/service\", {\n  OmnichannelVoipService(v) {\n    OmnichannelVoipService = v;\n  }\n\n}, 14);\nlet VoipService;\nmodule.link(\"./voip/service\", {\n  VoipService(v) {\n    VoipService = v;\n  }\n\n}, 15);\nlet isRunningMs;\nmodule.link(\"../lib/isRunningMs\", {\n  isRunningMs(v) {\n    isRunningMs = v;\n  }\n\n}, 16);\nconst {\n  db\n} = MongoInternals.defaultRemoteCollectionDriver().mongo;\napi.registerService(new AnalyticsService(db));\napi.registerService(new AuthorizationLivechat());\napi.registerService(new AuthorizationTokenpass());\napi.registerService(new BannerService(db));\napi.registerService(new LDAPService());\napi.registerService(new MediaService());\napi.registerService(new MeteorService());\napi.registerService(new NPSService(db));\napi.registerService(new RoomService(db));\napi.registerService(new SAUMonitorService());\napi.registerService(new VoipService(db));\napi.registerService(new OmnichannelVoipService(db));\napi.registerService(new TeamService(db));\napi.registerService(new UiKitCoreApp()); // if the process is running in micro services mode we don't need to register services that will run separately\n\nif (!isRunningMs()) {\n  (() => Promise.asyncApply(() => {\n    const {\n      Authorization\n    } = Promise.await(module.dynamicImport('./authorization/service'));\n    api.registerService(new Authorization(db));\n  }))();\n}","map":{"version":3,"sources":["server/services/startup.ts"],"names":[],"mappings":"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","sourcesContent":["import { MongoInternals } from 'meteor/mongo';\n\nimport { AnalyticsService } from './analytics/service';\nimport { api } from '../sdk/api';\nimport { AuthorizationLivechat } from '../../app/livechat/server/roomAccessValidator.internalService';\nimport { AuthorizationTokenpass } from '../../app/tokenpass/server/roomAccessValidator.internalService';\nimport { BannerService } from './banner/service';\nimport { LDAPService } from './ldap/service';\nimport { MediaService } from './image/service';\nimport { MeteorService } from './meteor/service';\nimport { NPSService } from './nps/service';\nimport { RoomService } from './room/service';\nimport { SAUMonitorService } from './sauMonitor/service';\nimport { TeamService } from './team/service';\nimport { UiKitCoreApp } from './uikit-core-app/service';\nimport { OmnichannelVoipService } from './omnichannel-voip/service';\nimport { VoipService } from './voip/service';\nimport { isRunningMs } from '../lib/isRunningMs';\n\nconst { db } = MongoInternals.defaultRemoteCollectionDriver().mongo;\n\napi.registerService(new AnalyticsService(db));\napi.registerService(new AuthorizationLivechat());\napi.registerService(new AuthorizationTokenpass());\napi.registerService(new BannerService(db));\napi.registerService(new LDAPService());\napi.registerService(new MediaService());\napi.registerService(new MeteorService());\napi.registerService(new NPSService(db));\napi.registerService(new RoomService(db));\napi.registerService(new SAUMonitorService());\napi.registerService(new VoipService(db));\napi.registerService(new OmnichannelVoipService(db));\napi.registerService(new TeamService(db));\napi.registerService(new UiKitCoreApp());\n\n// if the process is running in micro services mode we don't need to register services that will run separately\nif (!isRunningMs()) {\n\t(async (): Promise<void> => {\n\t\tconst { Authorization } = await import('./authorization/service');\n\n\t\tapi.registerService(new Authorization(db));\n\t})();\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"2c4a9527322bc6fd9f224b9f36802ffdfa0f3d8e"}
