{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/server/services/voip/connector/asterisk/ami/ACDQueue.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"server/services/voip/connector/asterisk/ami/ACDQueue.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/server/services/voip/connector/asterisk/ami/ACDQueue.ts","inputSourceMap":{"version":3,"file":"server/services/voip/connector/asterisk/ami/ACDQueue.ts","sourceRoot":"","sources":["server/services/voip/connector/asterisk/ami/ACDQueue.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * This class is responsible for handling ACD Queue summary\n * @remarks\n */\nimport { Db } from 'mongodb';\n\nimport { Command, CommandType } from '../Command';\nimport { Logger } from '../../../../../lib/logger/Logger';\nimport { Commands } from '../Commands';\nimport { CallbackContext } from './CallbackContext';\nimport { IVoipConnectorResult } from '../../../../../../definition/IVoipConnectorResult';\n\nexport class ACDQueue extends Command {\n\tprivate logger: Logger;\n\n\tconstructor(command: string, parametersNeeded: boolean, db: Db) {\n\t\tsuper(command, parametersNeeded, db);\n\t\tthis._type = CommandType.AMI;\n\t\tthis.logger = new Logger('ACDQueue');\n\t}\n\n\tonQueueSummary(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueSummary() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst queue = {\n\t\t\tname: event.queue,\n\t\t\tloggedin: event.loggedin,\n\t\t\tavailable: event.available,\n\t\t\tcallers: event.callers,\n\t\t\tholdtime: event.holdtime,\n\t\t\ttalktime: event.talktime,\n\t\t\tlogestholdtime: event.logestholdtime,\n\t\t};\n\t\tconst { result } = this;\n\t\tif (result.queueSummary) {\n\t\t\tresult.queueSummary.push(queue);\n\t\t} else {\n\t\t\tresult.queueSummary = [];\n\t\t\tresult.queueSummary.push(queue);\n\t\t}\n\t}\n\n\tonQueueSummaryComplete(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueSummaryComplete() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.resetEventHandlers();\n\t\tconst { result } = this;\n\t\tthis.returnResolve({ result: result.queueSummary } as IVoipConnectorResult);\n\t}\n\n\t/**  Callback for receiving Queue parameters for queuestatus action.\n\t *\n\t */\n\tonQueueParams(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueParams() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst queue = {\n\t\t\tname: event.queue,\n\t\t\tstrategy: event.strategy,\n\t\t\tcalls: event.calls,\n\t\t\tholdtime: event.holdtime,\n\t\t\ttalktime: event.talktime,\n\t\t\tcompleted: event.completed,\n\t\t\tabandoned: event.abandoned,\n\t\t\tlogestholdtime: event.logestholdtime,\n\t\t};\n\t\tthis.result.queueStatus = queue;\n\t}\n\n\t/**  Callback for receiving Queue members for queuestatus action.\n\t *\n\t */\n\tonQueueMember(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueMember() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst member = {\n\t\t\tname: event.name,\n\t\t\tlocation: event.location,\n\t\t\tstateinterface: event.stateinterface,\n\t\t\tmembership: event.membership,\n\t\t\tpenalty: event.penalty,\n\t\t\tcallstaken: event.callstaken,\n\t\t\tlastcall: event.lastcall,\n\t\t\tlastpause: event.lastpause,\n\t\t\tincall: event.incall,\n\t\t\tstatus: event.status,\n\t\t\tpaused: event.paused,\n\t\t\tpausedreason: event.pausedreason,\n\t\t\twrapuptime: event.wrapuptime,\n\t\t};\n\t\tif (this.result.queueStatus.name !== event.queue) {\n\t\t\tthis.logger.error({ msg: `onQueueMember() : Unknown error. Queue ${event.queue} not found` });\n\t\t} else {\n\t\t\tif (!this.result.queueStatus.members) {\n\t\t\t\tthis.result.queueStatus.members = [];\n\t\t\t}\n\t\t\tthis.result.queueStatus.members.push(member);\n\t\t}\n\t}\n\n\t/**  Callback when all the data is received for queuestatus action.\n\t *\n\t */\n\tonQueueStatusComplete(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueStatusComplete() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.resetEventHandlers();\n\t\tconst { result } = this;\n\t\tthis.returnResolve({ result: result.queueStatus } as IVoipConnectorResult);\n\t}\n\n\t/**\n\t * Callback for indicatiing command execution status.\n\t * Received actionid for the first time.\n\t */\n\tonActionResult(error: any, result: any): void {\n\t\tif (error) {\n\t\t\tthis.logger.error({ msg: 'onActionResult()', error: JSON.stringify(error) });\n\t\t\tthis.returnReject(`error${error} while executing command`);\n\t\t} else {\n\t\t\t// Set up actionid for future reference in case of success.\n\t\t\tthis.actionid = result.actionid;\n\t\t}\n\t}\n\n\tsetupEventHandlers(): void {\n\t\t// Setup necessary command event handlers based on the command\n\t\tswitch (this.commandText) {\n\t\t\tcase Commands.queue_summary.toString(): {\n\t\t\t\tthis.connection.on('queuesummary', new CallbackContext(this.onQueueSummary.bind(this), this));\n\t\t\t\tthis.connection.on('queuesummarycomplete', new CallbackContext(this.onQueueSummaryComplete.bind(this), this));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Commands.queue_details.toString(): {\n\t\t\t\tthis.connection.on('queueparams', new CallbackContext(this.onQueueParams.bind(this), this));\n\t\t\t\tthis.connection.on('queuemember', new CallbackContext(this.onQueueMember.bind(this), this));\n\t\t\t\tthis.connection.on('queuestatuscomplete', new CallbackContext(this.onQueueStatusComplete.bind(this), this));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.logger.error({ msg: `setupEventHandlers() : Unimplemented ${this.commandText}` });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tresetEventHandlers(): void {\n\t\tswitch (this.commandText) {\n\t\t\tcase Commands.queue_summary.toString(): {\n\t\t\t\tthis.connection.off('queuesummary', this);\n\t\t\t\tthis.connection.off('queuesummarycomplete', this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Commands.queue_details.toString(): {\n\t\t\t\tthis.connection.off('queueparams', this);\n\t\t\t\tthis.connection.off('queuemember', this);\n\t\t\t\tthis.connection.off('queuestatuscomplete', this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.logger.error({ msg: `resetEventHandlers() : Unimplemented ${this.commandText}` });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync executeCommand(data: any): Promise<IVoipConnectorResult> {\n\t\tlet amiCommand = {};\n\t\t// set up the specific action based on the value of |Commands|\n\t\tif (this.commandText === Commands.queue_summary.toString()) {\n\t\t\tamiCommand = {\n\t\t\t\taction: 'queuesummary',\n\t\t\t};\n\t\t} else if (this.commandText === Commands.queue_details.toString()) {\n\t\t\tamiCommand = {\n\t\t\t\taction: 'queuestatus',\n\t\t\t\tqueue: data.queueName,\n\t\t\t};\n\t\t}\n\t\tthis.logger.debug({ msg: `Executing AMI command ${JSON.stringify(amiCommand)}`, data });\n\t\tconst actionResultCallback = this.onActionResult.bind(this);\n\t\tconst eventHandlerSetupCallback = this.setupEventHandlers.bind(this);\n\t\treturn super.prepareCommandAndExecution(amiCommand, actionResultCallback, eventHandlerSetupCallback);\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/server/services/voip/connector/asterisk/ami/ACDQueue.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/services/voip/connector/asterisk/ami/ACDQueue.ts"}},"code":"module.export({\n  ACDQueue: () => ACDQueue\n});\nlet Command, CommandType;\nmodule.link(\"../Command\", {\n  Command(v) {\n    Command = v;\n  },\n\n  CommandType(v) {\n    CommandType = v;\n  }\n\n}, 0);\nlet Logger;\nmodule.link(\"../../../../../lib/logger/Logger\", {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 1);\nlet Commands;\nmodule.link(\"../Commands\", {\n  Commands(v) {\n    Commands = v;\n  }\n\n}, 2);\nlet CallbackContext;\nmodule.link(\"./CallbackContext\", {\n  CallbackContext(v) {\n    CallbackContext = v;\n  }\n\n}, 3);\n\nclass ACDQueue extends Command {\n  constructor(command, parametersNeeded, db) {\n    super(command, parametersNeeded, db);\n    this.logger = void 0;\n    this._type = CommandType.AMI;\n    this.logger = new Logger('ACDQueue');\n  }\n\n  onQueueSummary(event) {\n    if (event.actionid !== this.actionid) {\n      this.logger.error({\n        msg: 'onQueueSummary() Unusual behavior. ActionId does not belong to this object',\n        eventActionId: event.actionid,\n        actionId: this.actionid\n      });\n      return;\n    }\n\n    const queue = {\n      name: event.queue,\n      loggedin: event.loggedin,\n      available: event.available,\n      callers: event.callers,\n      holdtime: event.holdtime,\n      talktime: event.talktime,\n      logestholdtime: event.logestholdtime\n    };\n    const {\n      result\n    } = this;\n\n    if (result.queueSummary) {\n      result.queueSummary.push(queue);\n    } else {\n      result.queueSummary = [];\n      result.queueSummary.push(queue);\n    }\n  }\n\n  onQueueSummaryComplete(event) {\n    if (event.actionid !== this.actionid) {\n      this.logger.error({\n        msg: 'onQueueSummaryComplete() Unusual behavior. ActionId does not belong to this object',\n        eventActionId: event.actionid,\n        actionId: this.actionid\n      });\n      return;\n    }\n\n    this.resetEventHandlers();\n    const {\n      result\n    } = this;\n    this.returnResolve({\n      result: result.queueSummary\n    });\n  }\n  /**  Callback for receiving Queue parameters for queuestatus action.\n   *\n   */\n\n\n  onQueueParams(event) {\n    if (event.actionid !== this.actionid) {\n      this.logger.error({\n        msg: 'onQueueParams() Unusual behavior. ActionId does not belong to this object',\n        eventActionId: event.actionid,\n        actionId: this.actionid\n      });\n      return;\n    }\n\n    const queue = {\n      name: event.queue,\n      strategy: event.strategy,\n      calls: event.calls,\n      holdtime: event.holdtime,\n      talktime: event.talktime,\n      completed: event.completed,\n      abandoned: event.abandoned,\n      logestholdtime: event.logestholdtime\n    };\n    this.result.queueStatus = queue;\n  }\n  /**  Callback for receiving Queue members for queuestatus action.\n   *\n   */\n\n\n  onQueueMember(event) {\n    if (event.actionid !== this.actionid) {\n      this.logger.error({\n        msg: 'onQueueMember() Unusual behavior. ActionId does not belong to this object',\n        eventActionId: event.actionid,\n        actionId: this.actionid\n      });\n      return;\n    }\n\n    const member = {\n      name: event.name,\n      location: event.location,\n      stateinterface: event.stateinterface,\n      membership: event.membership,\n      penalty: event.penalty,\n      callstaken: event.callstaken,\n      lastcall: event.lastcall,\n      lastpause: event.lastpause,\n      incall: event.incall,\n      status: event.status,\n      paused: event.paused,\n      pausedreason: event.pausedreason,\n      wrapuptime: event.wrapuptime\n    };\n\n    if (this.result.queueStatus.name !== event.queue) {\n      this.logger.error({\n        msg: \"onQueueMember() : Unknown error. Queue \".concat(event.queue, \" not found\")\n      });\n    } else {\n      if (!this.result.queueStatus.members) {\n        this.result.queueStatus.members = [];\n      }\n\n      this.result.queueStatus.members.push(member);\n    }\n  }\n  /**  Callback when all the data is received for queuestatus action.\n   *\n   */\n\n\n  onQueueStatusComplete(event) {\n    if (event.actionid !== this.actionid) {\n      this.logger.error({\n        msg: 'onQueueStatusComplete() Unusual behavior. ActionId does not belong to this object',\n        eventActionId: event.actionid,\n        actionId: this.actionid\n      });\n      return;\n    }\n\n    this.resetEventHandlers();\n    const {\n      result\n    } = this;\n    this.returnResolve({\n      result: result.queueStatus\n    });\n  }\n  /**\n   * Callback for indicatiing command execution status.\n   * Received actionid for the first time.\n   */\n\n\n  onActionResult(error, result) {\n    if (error) {\n      this.logger.error({\n        msg: 'onActionResult()',\n        error: JSON.stringify(error)\n      });\n      this.returnReject(\"error\".concat(error, \" while executing command\"));\n    } else {\n      // Set up actionid for future reference in case of success.\n      this.actionid = result.actionid;\n    }\n  }\n\n  setupEventHandlers() {\n    // Setup necessary command event handlers based on the command\n    switch (this.commandText) {\n      case Commands.queue_summary.toString():\n        {\n          this.connection.on('queuesummary', new CallbackContext(this.onQueueSummary.bind(this), this));\n          this.connection.on('queuesummarycomplete', new CallbackContext(this.onQueueSummaryComplete.bind(this), this));\n          break;\n        }\n\n      case Commands.queue_details.toString():\n        {\n          this.connection.on('queueparams', new CallbackContext(this.onQueueParams.bind(this), this));\n          this.connection.on('queuemember', new CallbackContext(this.onQueueMember.bind(this), this));\n          this.connection.on('queuestatuscomplete', new CallbackContext(this.onQueueStatusComplete.bind(this), this));\n          break;\n        }\n\n      default:\n        {\n          this.logger.error({\n            msg: \"setupEventHandlers() : Unimplemented \".concat(this.commandText)\n          });\n          break;\n        }\n    }\n  }\n\n  resetEventHandlers() {\n    switch (this.commandText) {\n      case Commands.queue_summary.toString():\n        {\n          this.connection.off('queuesummary', this);\n          this.connection.off('queuesummarycomplete', this);\n          break;\n        }\n\n      case Commands.queue_details.toString():\n        {\n          this.connection.off('queueparams', this);\n          this.connection.off('queuemember', this);\n          this.connection.off('queuestatuscomplete', this);\n          break;\n        }\n\n      default:\n        {\n          this.logger.error({\n            msg: \"resetEventHandlers() : Unimplemented \".concat(this.commandText)\n          });\n          break;\n        }\n    }\n  }\n\n  executeCommand(data) {\n    return Promise.asyncApply(() => {\n      let amiCommand = {}; // set up the specific action based on the value of |Commands|\n\n      if (this.commandText === Commands.queue_summary.toString()) {\n        amiCommand = {\n          action: 'queuesummary'\n        };\n      } else if (this.commandText === Commands.queue_details.toString()) {\n        amiCommand = {\n          action: 'queuestatus',\n          queue: data.queueName\n        };\n      }\n\n      this.logger.debug({\n        msg: \"Executing AMI command \".concat(JSON.stringify(amiCommand)),\n        data\n      });\n      const actionResultCallback = this.onActionResult.bind(this);\n      const eventHandlerSetupCallback = this.setupEventHandlers.bind(this);\n      return super.prepareCommandAndExecution(amiCommand, actionResultCallback, eventHandlerSetupCallback);\n    });\n  }\n\n}","map":{"version":3,"sources":["server/services/voip/connector/asterisk/ami/ACDQueue.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * This class is responsible for handling ACD Queue summary\n * @remarks\n */\nimport { Db } from 'mongodb';\n\nimport { Command, CommandType } from '../Command';\nimport { Logger } from '../../../../../lib/logger/Logger';\nimport { Commands } from '../Commands';\nimport { CallbackContext } from './CallbackContext';\nimport { IVoipConnectorResult } from '../../../../../../definition/IVoipConnectorResult';\n\nexport class ACDQueue extends Command {\n\tprivate logger: Logger;\n\n\tconstructor(command: string, parametersNeeded: boolean, db: Db) {\n\t\tsuper(command, parametersNeeded, db);\n\t\tthis._type = CommandType.AMI;\n\t\tthis.logger = new Logger('ACDQueue');\n\t}\n\n\tonQueueSummary(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueSummary() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst queue = {\n\t\t\tname: event.queue,\n\t\t\tloggedin: event.loggedin,\n\t\t\tavailable: event.available,\n\t\t\tcallers: event.callers,\n\t\t\tholdtime: event.holdtime,\n\t\t\ttalktime: event.talktime,\n\t\t\tlogestholdtime: event.logestholdtime,\n\t\t};\n\t\tconst { result } = this;\n\t\tif (result.queueSummary) {\n\t\t\tresult.queueSummary.push(queue);\n\t\t} else {\n\t\t\tresult.queueSummary = [];\n\t\t\tresult.queueSummary.push(queue);\n\t\t}\n\t}\n\n\tonQueueSummaryComplete(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueSummaryComplete() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.resetEventHandlers();\n\t\tconst { result } = this;\n\t\tthis.returnResolve({ result: result.queueSummary } as IVoipConnectorResult);\n\t}\n\n\t/**  Callback for receiving Queue parameters for queuestatus action.\n\t *\n\t */\n\tonQueueParams(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueParams() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst queue = {\n\t\t\tname: event.queue,\n\t\t\tstrategy: event.strategy,\n\t\t\tcalls: event.calls,\n\t\t\tholdtime: event.holdtime,\n\t\t\ttalktime: event.talktime,\n\t\t\tcompleted: event.completed,\n\t\t\tabandoned: event.abandoned,\n\t\t\tlogestholdtime: event.logestholdtime,\n\t\t};\n\t\tthis.result.queueStatus = queue;\n\t}\n\n\t/**  Callback for receiving Queue members for queuestatus action.\n\t *\n\t */\n\tonQueueMember(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueMember() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst member = {\n\t\t\tname: event.name,\n\t\t\tlocation: event.location,\n\t\t\tstateinterface: event.stateinterface,\n\t\t\tmembership: event.membership,\n\t\t\tpenalty: event.penalty,\n\t\t\tcallstaken: event.callstaken,\n\t\t\tlastcall: event.lastcall,\n\t\t\tlastpause: event.lastpause,\n\t\t\tincall: event.incall,\n\t\t\tstatus: event.status,\n\t\t\tpaused: event.paused,\n\t\t\tpausedreason: event.pausedreason,\n\t\t\twrapuptime: event.wrapuptime,\n\t\t};\n\t\tif (this.result.queueStatus.name !== event.queue) {\n\t\t\tthis.logger.error({ msg: `onQueueMember() : Unknown error. Queue ${event.queue} not found` });\n\t\t} else {\n\t\t\tif (!this.result.queueStatus.members) {\n\t\t\t\tthis.result.queueStatus.members = [];\n\t\t\t}\n\t\t\tthis.result.queueStatus.members.push(member);\n\t\t}\n\t}\n\n\t/**  Callback when all the data is received for queuestatus action.\n\t *\n\t */\n\tonQueueStatusComplete(event: any): void {\n\t\tif (event.actionid !== this.actionid) {\n\t\t\tthis.logger.error({\n\t\t\t\tmsg: 'onQueueStatusComplete() Unusual behavior. ActionId does not belong to this object',\n\t\t\t\teventActionId: event.actionid,\n\t\t\t\tactionId: this.actionid,\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.resetEventHandlers();\n\t\tconst { result } = this;\n\t\tthis.returnResolve({ result: result.queueStatus } as IVoipConnectorResult);\n\t}\n\n\t/**\n\t * Callback for indicatiing command execution status.\n\t * Received actionid for the first time.\n\t */\n\tonActionResult(error: any, result: any): void {\n\t\tif (error) {\n\t\t\tthis.logger.error({ msg: 'onActionResult()', error: JSON.stringify(error) });\n\t\t\tthis.returnReject(`error${error} while executing command`);\n\t\t} else {\n\t\t\t// Set up actionid for future reference in case of success.\n\t\t\tthis.actionid = result.actionid;\n\t\t}\n\t}\n\n\tsetupEventHandlers(): void {\n\t\t// Setup necessary command event handlers based on the command\n\t\tswitch (this.commandText) {\n\t\t\tcase Commands.queue_summary.toString(): {\n\t\t\t\tthis.connection.on('queuesummary', new CallbackContext(this.onQueueSummary.bind(this), this));\n\t\t\t\tthis.connection.on('queuesummarycomplete', new CallbackContext(this.onQueueSummaryComplete.bind(this), this));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Commands.queue_details.toString(): {\n\t\t\t\tthis.connection.on('queueparams', new CallbackContext(this.onQueueParams.bind(this), this));\n\t\t\t\tthis.connection.on('queuemember', new CallbackContext(this.onQueueMember.bind(this), this));\n\t\t\t\tthis.connection.on('queuestatuscomplete', new CallbackContext(this.onQueueStatusComplete.bind(this), this));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.logger.error({ msg: `setupEventHandlers() : Unimplemented ${this.commandText}` });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tresetEventHandlers(): void {\n\t\tswitch (this.commandText) {\n\t\t\tcase Commands.queue_summary.toString(): {\n\t\t\t\tthis.connection.off('queuesummary', this);\n\t\t\t\tthis.connection.off('queuesummarycomplete', this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase Commands.queue_details.toString(): {\n\t\t\t\tthis.connection.off('queueparams', this);\n\t\t\t\tthis.connection.off('queuemember', this);\n\t\t\t\tthis.connection.off('queuestatuscomplete', this);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tthis.logger.error({ msg: `resetEventHandlers() : Unimplemented ${this.commandText}` });\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync executeCommand(data: any): Promise<IVoipConnectorResult> {\n\t\tlet amiCommand = {};\n\t\t// set up the specific action based on the value of |Commands|\n\t\tif (this.commandText === Commands.queue_summary.toString()) {\n\t\t\tamiCommand = {\n\t\t\t\taction: 'queuesummary',\n\t\t\t};\n\t\t} else if (this.commandText === Commands.queue_details.toString()) {\n\t\t\tamiCommand = {\n\t\t\t\taction: 'queuestatus',\n\t\t\t\tqueue: data.queueName,\n\t\t\t};\n\t\t}\n\t\tthis.logger.debug({ msg: `Executing AMI command ${JSON.stringify(amiCommand)}`, data });\n\t\tconst actionResultCallback = this.onActionResult.bind(this);\n\t\tconst eventHandlerSetupCallback = this.setupEventHandlers.bind(this);\n\t\treturn super.prepareCommandAndExecution(amiCommand, actionResultCallback, eventHandlerSetupCallback);\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"356897a68c8c9a9d3aa2a2fa294d3cf708d002a6"}
