{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/ee/server/startup/broker.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"ee/server/startup/broker.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/ee/server/startup/broker.ts","inputSourceMap":{"version":3,"file":"ee/server/startup/broker.ts","sourceRoot":"","sources":["ee/server/startup/broker.ts"],"names":[],"mappings":"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","sourcesContent":["import EJSON from 'ejson';\nimport { Errors, Serializers, ServiceBroker } from 'moleculer';\nimport { pino } from 'pino';\n\nimport { api } from '../../../server/sdk/api';\nimport { isMeteorError, MeteorError } from '../../../server/sdk/errors';\nimport { NetworkBroker } from '../NetworkBroker';\n\nconst {\n\tMS_NAMESPACE = '',\n\tTRANSPORTER = '',\n\tCACHE = 'Memory',\n\t// SERIALIZER = 'MsgPack',\n\tSERIALIZER = 'EJSON',\n\tMOLECULER_LOG_LEVEL = 'warn',\n\tBALANCE_STRATEGY = 'RoundRobin',\n\tBALANCE_PREFER_LOCAL = 'false',\n\tRETRY_FACTOR = '2',\n\tRETRY_MAX_DELAY = '1000',\n\tRETRY_DELAY = '100',\n\tRETRY_RETRIES = '5',\n\tRETRY_ENABLED = 'false',\n\tREQUEST_TIMEOUT = '10',\n\tHEARTBEAT_INTERVAL = '10',\n\tHEARTBEAT_TIMEOUT = '30',\n\tBULKHEAD_ENABLED = 'false',\n\tBULKHEAD_CONCURRENCY = '10',\n\tBULKHEAD_MAX_QUEUE_SIZE = '10000',\n\tMS_METRICS = 'false',\n\tMS_METRICS_PORT = '9458',\n\tTRACING_ENABLED = 'false',\n\tSKIP_PROCESS_EVENT_REGISTRATION = 'false',\n} = process.env;\n\nconst Base = Serializers.Base as unknown as new () => {};\nclass CustomRegenerator extends Errors.Regenerator {\n\trestoreCustomError(plainError: any): Error | undefined {\n\t\tconst { message, reason, details, errorType, isClientSafe } = plainError;\n\n\t\tif (errorType === 'Meteor.Error') {\n\t\t\tconst error = new MeteorError(message, reason, details);\n\t\t\tif (typeof isClientSafe !== 'undefined') {\n\t\t\t\terror.isClientSafe = isClientSafe;\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\textractPlainError(err: Error | MeteorError): Errors.PlainMoleculerError {\n\t\treturn {\n\t\t\t...super.extractPlainError(err),\n\t\t\t...(isMeteorError(err) && {\n\t\t\t\tisClientSafe: err.isClientSafe,\n\t\t\t\terrorType: err.errorType,\n\t\t\t\treason: err.reason,\n\t\t\t\tdetails: err.details,\n\t\t\t}),\n\t\t};\n\t}\n}\n\nclass EJSONSerializer extends Base {\n\tserialize(obj: {}): Buffer {\n\t\treturn Buffer.from(EJSON.stringify(obj));\n\t}\n\n\tdeserialize(buf: Buffer): any {\n\t\treturn EJSON.parse(buf.toString());\n\t}\n}\n\nconst network = new ServiceBroker({\n\tnamespace: MS_NAMESPACE,\n\tskipProcessEventRegistration: SKIP_PROCESS_EVENT_REGISTRATION === 'true',\n\ttransporter: TRANSPORTER,\n\tmetrics: {\n\t\tenabled: MS_METRICS === 'true',\n\t\treporter: [\n\t\t\t{\n\t\t\t\ttype: 'Prometheus',\n\t\t\t\toptions: {\n\t\t\t\t\tport: MS_METRICS_PORT,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\tcacher: CACHE,\n\tserializer: SERIALIZER === 'EJSON' ? new EJSONSerializer() : SERIALIZER,\n\tlogger: {\n\t\ttype: 'Pino',\n\t\toptions: {\n\t\t\tlevel: MOLECULER_LOG_LEVEL,\n\t\t\tpino: {\n\t\t\t\toptions: {\n\t\t\t\t\ttimestamp: pino.stdTimeFunctions.isoTime,\n\t\t\t\t\t...(process.env.NODE_ENV !== 'production'\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\ttransport: {\n\t\t\t\t\t\t\t\t\ttarget: 'pino-pretty',\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\tcolorize: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tregistry: {\n\t\tstrategy: BALANCE_STRATEGY,\n\t\tpreferLocal: BALANCE_PREFER_LOCAL !== 'false',\n\t},\n\n\trequestTimeout: parseInt(REQUEST_TIMEOUT) * 1000,\n\tretryPolicy: {\n\t\tenabled: RETRY_ENABLED === 'true',\n\t\tretries: parseInt(RETRY_RETRIES),\n\t\tdelay: parseInt(RETRY_DELAY),\n\t\tmaxDelay: parseInt(RETRY_MAX_DELAY),\n\t\tfactor: parseInt(RETRY_FACTOR),\n\t\tcheck: (err: any): boolean => err && !!err.retryable,\n\t},\n\n\tmaxCallLevel: 100,\n\theartbeatInterval: parseInt(HEARTBEAT_INTERVAL),\n\theartbeatTimeout: parseInt(HEARTBEAT_TIMEOUT),\n\n\t// circuitBreaker: {\n\t// \tenabled: false,\n\t// \tthreshold: 0.5,\n\t// \twindowTime: 60,\n\t// \tminRequestCount: 20,\n\t// \thalfOpenTime: 10 * 1000,\n\t// \tcheck: (err: any): boolean => err && err.code >= 500,\n\t// },\n\n\tbulkhead: {\n\t\tenabled: BULKHEAD_ENABLED === 'true',\n\t\tconcurrency: parseInt(BULKHEAD_CONCURRENCY),\n\t\tmaxQueueSize: parseInt(BULKHEAD_MAX_QUEUE_SIZE),\n\t},\n\n\ttracing: {\n\t\tenabled: TRACING_ENABLED === 'true',\n\t\texporter: {\n\t\t\ttype: 'Jaeger',\n\t\t\toptions: {\n\t\t\t\tendpoint: null,\n\t\t\t\thost: 'jaeger',\n\t\t\t\tport: 6832,\n\t\t\t\tsampler: {\n\t\t\t\t\t// Sampler type. More info: https://www.jaegertracing.io/docs/1.14/sampling/#client-sampling-configuration\n\t\t\t\t\ttype: 'Const',\n\t\t\t\t\t// Sampler specific options.\n\t\t\t\t\toptions: {},\n\t\t\t\t},\n\t\t\t\t// Additional options for `Jaeger.Tracer`\n\t\t\t\ttracerOptions: {},\n\t\t\t\t// Default tags. They will be added into all span tags.\n\t\t\t\tdefaultTags: null,\n\t\t\t},\n\t\t},\n\t},\n\terrorRegenerator: new CustomRegenerator(),\n\tstarted(): void {\n\t\tconsole.log('NetworkBroker started successfully.');\n\t},\n});\n\napi.setBroker(new NetworkBroker(network));\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/ee/server/startup/broker.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/server/startup/broker.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet EJSON;\nmodule.link(\"ejson\", {\n  default(v) {\n    EJSON = v;\n  }\n\n}, 0);\nlet Errors, Serializers, ServiceBroker;\nmodule.link(\"moleculer\", {\n  Errors(v) {\n    Errors = v;\n  },\n\n  Serializers(v) {\n    Serializers = v;\n  },\n\n  ServiceBroker(v) {\n    ServiceBroker = v;\n  }\n\n}, 1);\nlet pino;\nmodule.link(\"pino\", {\n  pino(v) {\n    pino = v;\n  }\n\n}, 2);\nlet api;\nmodule.link(\"../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 3);\nlet isMeteorError, MeteorError;\nmodule.link(\"../../../server/sdk/errors\", {\n  isMeteorError(v) {\n    isMeteorError = v;\n  },\n\n  MeteorError(v) {\n    MeteorError = v;\n  }\n\n}, 4);\nlet NetworkBroker;\nmodule.link(\"../NetworkBroker\", {\n  NetworkBroker(v) {\n    NetworkBroker = v;\n  }\n\n}, 5);\nconst {\n  MS_NAMESPACE = '',\n  TRANSPORTER = '',\n  CACHE = 'Memory',\n  // SERIALIZER = 'MsgPack',\n  SERIALIZER = 'EJSON',\n  MOLECULER_LOG_LEVEL = 'warn',\n  BALANCE_STRATEGY = 'RoundRobin',\n  BALANCE_PREFER_LOCAL = 'false',\n  RETRY_FACTOR = '2',\n  RETRY_MAX_DELAY = '1000',\n  RETRY_DELAY = '100',\n  RETRY_RETRIES = '5',\n  RETRY_ENABLED = 'false',\n  REQUEST_TIMEOUT = '10',\n  HEARTBEAT_INTERVAL = '10',\n  HEARTBEAT_TIMEOUT = '30',\n  BULKHEAD_ENABLED = 'false',\n  BULKHEAD_CONCURRENCY = '10',\n  BULKHEAD_MAX_QUEUE_SIZE = '10000',\n  MS_METRICS = 'false',\n  MS_METRICS_PORT = '9458',\n  TRACING_ENABLED = 'false',\n  SKIP_PROCESS_EVENT_REGISTRATION = 'false'\n} = process.env;\nconst Base = Serializers.Base;\n\nclass CustomRegenerator extends Errors.Regenerator {\n  restoreCustomError(plainError) {\n    const {\n      message,\n      reason,\n      details,\n      errorType,\n      isClientSafe\n    } = plainError;\n\n    if (errorType === 'Meteor.Error') {\n      const error = new MeteorError(message, reason, details);\n\n      if (typeof isClientSafe !== 'undefined') {\n        error.isClientSafe = isClientSafe;\n      }\n\n      return error;\n    }\n\n    return undefined;\n  }\n\n  extractPlainError(err) {\n    return _objectSpread(_objectSpread({}, super.extractPlainError(err)), isMeteorError(err) && {\n      isClientSafe: err.isClientSafe,\n      errorType: err.errorType,\n      reason: err.reason,\n      details: err.details\n    });\n  }\n\n}\n\nclass EJSONSerializer extends Base {\n  serialize(obj) {\n    return Buffer.from(EJSON.stringify(obj));\n  }\n\n  deserialize(buf) {\n    return EJSON.parse(buf.toString());\n  }\n\n}\n\nconst network = new ServiceBroker({\n  namespace: MS_NAMESPACE,\n  skipProcessEventRegistration: SKIP_PROCESS_EVENT_REGISTRATION === 'true',\n  transporter: TRANSPORTER,\n  metrics: {\n    enabled: MS_METRICS === 'true',\n    reporter: [{\n      type: 'Prometheus',\n      options: {\n        port: MS_METRICS_PORT\n      }\n    }]\n  },\n  cacher: CACHE,\n  serializer: SERIALIZER === 'EJSON' ? new EJSONSerializer() : SERIALIZER,\n  logger: {\n    type: 'Pino',\n    options: {\n      level: MOLECULER_LOG_LEVEL,\n      pino: {\n        options: _objectSpread({\n          timestamp: pino.stdTimeFunctions.isoTime\n        }, process.env.NODE_ENV !== 'production' ? {\n          transport: {\n            target: 'pino-pretty',\n            options: {\n              colorize: true\n            }\n          }\n        } : {})\n      }\n    }\n  },\n  registry: {\n    strategy: BALANCE_STRATEGY,\n    preferLocal: BALANCE_PREFER_LOCAL !== 'false'\n  },\n  requestTimeout: parseInt(REQUEST_TIMEOUT) * 1000,\n  retryPolicy: {\n    enabled: RETRY_ENABLED === 'true',\n    retries: parseInt(RETRY_RETRIES),\n    delay: parseInt(RETRY_DELAY),\n    maxDelay: parseInt(RETRY_MAX_DELAY),\n    factor: parseInt(RETRY_FACTOR),\n    check: err => err && !!err.retryable\n  },\n  maxCallLevel: 100,\n  heartbeatInterval: parseInt(HEARTBEAT_INTERVAL),\n  heartbeatTimeout: parseInt(HEARTBEAT_TIMEOUT),\n  // circuitBreaker: {\n  // \tenabled: false,\n  // \tthreshold: 0.5,\n  // \twindowTime: 60,\n  // \tminRequestCount: 20,\n  // \thalfOpenTime: 10 * 1000,\n  // \tcheck: (err: any): boolean => err && err.code >= 500,\n  // },\n  bulkhead: {\n    enabled: BULKHEAD_ENABLED === 'true',\n    concurrency: parseInt(BULKHEAD_CONCURRENCY),\n    maxQueueSize: parseInt(BULKHEAD_MAX_QUEUE_SIZE)\n  },\n  tracing: {\n    enabled: TRACING_ENABLED === 'true',\n    exporter: {\n      type: 'Jaeger',\n      options: {\n        endpoint: null,\n        host: 'jaeger',\n        port: 6832,\n        sampler: {\n          // Sampler type. More info: https://www.jaegertracing.io/docs/1.14/sampling/#client-sampling-configuration\n          type: 'Const',\n          // Sampler specific options.\n          options: {}\n        },\n        // Additional options for `Jaeger.Tracer`\n        tracerOptions: {},\n        // Default tags. They will be added into all span tags.\n        defaultTags: null\n      }\n    }\n  },\n  errorRegenerator: new CustomRegenerator(),\n\n  started() {\n    console.log('NetworkBroker started successfully.');\n  }\n\n});\napi.setBroker(new NetworkBroker(network));","map":{"version":3,"sources":["ee/server/startup/broker.ts"],"names":[],"mappings":"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","sourcesContent":["import EJSON from 'ejson';\nimport { Errors, Serializers, ServiceBroker } from 'moleculer';\nimport { pino } from 'pino';\n\nimport { api } from '../../../server/sdk/api';\nimport { isMeteorError, MeteorError } from '../../../server/sdk/errors';\nimport { NetworkBroker } from '../NetworkBroker';\n\nconst {\n\tMS_NAMESPACE = '',\n\tTRANSPORTER = '',\n\tCACHE = 'Memory',\n\t// SERIALIZER = 'MsgPack',\n\tSERIALIZER = 'EJSON',\n\tMOLECULER_LOG_LEVEL = 'warn',\n\tBALANCE_STRATEGY = 'RoundRobin',\n\tBALANCE_PREFER_LOCAL = 'false',\n\tRETRY_FACTOR = '2',\n\tRETRY_MAX_DELAY = '1000',\n\tRETRY_DELAY = '100',\n\tRETRY_RETRIES = '5',\n\tRETRY_ENABLED = 'false',\n\tREQUEST_TIMEOUT = '10',\n\tHEARTBEAT_INTERVAL = '10',\n\tHEARTBEAT_TIMEOUT = '30',\n\tBULKHEAD_ENABLED = 'false',\n\tBULKHEAD_CONCURRENCY = '10',\n\tBULKHEAD_MAX_QUEUE_SIZE = '10000',\n\tMS_METRICS = 'false',\n\tMS_METRICS_PORT = '9458',\n\tTRACING_ENABLED = 'false',\n\tSKIP_PROCESS_EVENT_REGISTRATION = 'false',\n} = process.env;\n\nconst Base = Serializers.Base as unknown as new () => {};\nclass CustomRegenerator extends Errors.Regenerator {\n\trestoreCustomError(plainError: any): Error | undefined {\n\t\tconst { message, reason, details, errorType, isClientSafe } = plainError;\n\n\t\tif (errorType === 'Meteor.Error') {\n\t\t\tconst error = new MeteorError(message, reason, details);\n\t\t\tif (typeof isClientSafe !== 'undefined') {\n\t\t\t\terror.isClientSafe = isClientSafe;\n\t\t\t}\n\t\t\treturn error;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\textractPlainError(err: Error | MeteorError): Errors.PlainMoleculerError {\n\t\treturn {\n\t\t\t...super.extractPlainError(err),\n\t\t\t...(isMeteorError(err) && {\n\t\t\t\tisClientSafe: err.isClientSafe,\n\t\t\t\terrorType: err.errorType,\n\t\t\t\treason: err.reason,\n\t\t\t\tdetails: err.details,\n\t\t\t}),\n\t\t};\n\t}\n}\n\nclass EJSONSerializer extends Base {\n\tserialize(obj: {}): Buffer {\n\t\treturn Buffer.from(EJSON.stringify(obj));\n\t}\n\n\tdeserialize(buf: Buffer): any {\n\t\treturn EJSON.parse(buf.toString());\n\t}\n}\n\nconst network = new ServiceBroker({\n\tnamespace: MS_NAMESPACE,\n\tskipProcessEventRegistration: SKIP_PROCESS_EVENT_REGISTRATION === 'true',\n\ttransporter: TRANSPORTER,\n\tmetrics: {\n\t\tenabled: MS_METRICS === 'true',\n\t\treporter: [\n\t\t\t{\n\t\t\t\ttype: 'Prometheus',\n\t\t\t\toptions: {\n\t\t\t\t\tport: MS_METRICS_PORT,\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n\tcacher: CACHE,\n\tserializer: SERIALIZER === 'EJSON' ? new EJSONSerializer() : SERIALIZER,\n\tlogger: {\n\t\ttype: 'Pino',\n\t\toptions: {\n\t\t\tlevel: MOLECULER_LOG_LEVEL,\n\t\t\tpino: {\n\t\t\t\toptions: {\n\t\t\t\t\ttimestamp: pino.stdTimeFunctions.isoTime,\n\t\t\t\t\t...(process.env.NODE_ENV !== 'production'\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\ttransport: {\n\t\t\t\t\t\t\t\t\ttarget: 'pino-pretty',\n\t\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\t\tcolorize: true,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tregistry: {\n\t\tstrategy: BALANCE_STRATEGY,\n\t\tpreferLocal: BALANCE_PREFER_LOCAL !== 'false',\n\t},\n\n\trequestTimeout: parseInt(REQUEST_TIMEOUT) * 1000,\n\tretryPolicy: {\n\t\tenabled: RETRY_ENABLED === 'true',\n\t\tretries: parseInt(RETRY_RETRIES),\n\t\tdelay: parseInt(RETRY_DELAY),\n\t\tmaxDelay: parseInt(RETRY_MAX_DELAY),\n\t\tfactor: parseInt(RETRY_FACTOR),\n\t\tcheck: (err: any): boolean => err && !!err.retryable,\n\t},\n\n\tmaxCallLevel: 100,\n\theartbeatInterval: parseInt(HEARTBEAT_INTERVAL),\n\theartbeatTimeout: parseInt(HEARTBEAT_TIMEOUT),\n\n\t// circuitBreaker: {\n\t// \tenabled: false,\n\t// \tthreshold: 0.5,\n\t// \twindowTime: 60,\n\t// \tminRequestCount: 20,\n\t// \thalfOpenTime: 10 * 1000,\n\t// \tcheck: (err: any): boolean => err && err.code >= 500,\n\t// },\n\n\tbulkhead: {\n\t\tenabled: BULKHEAD_ENABLED === 'true',\n\t\tconcurrency: parseInt(BULKHEAD_CONCURRENCY),\n\t\tmaxQueueSize: parseInt(BULKHEAD_MAX_QUEUE_SIZE),\n\t},\n\n\ttracing: {\n\t\tenabled: TRACING_ENABLED === 'true',\n\t\texporter: {\n\t\t\ttype: 'Jaeger',\n\t\t\toptions: {\n\t\t\t\tendpoint: null,\n\t\t\t\thost: 'jaeger',\n\t\t\t\tport: 6832,\n\t\t\t\tsampler: {\n\t\t\t\t\t// Sampler type. More info: https://www.jaegertracing.io/docs/1.14/sampling/#client-sampling-configuration\n\t\t\t\t\ttype: 'Const',\n\t\t\t\t\t// Sampler specific options.\n\t\t\t\t\toptions: {},\n\t\t\t\t},\n\t\t\t\t// Additional options for `Jaeger.Tracer`\n\t\t\t\ttracerOptions: {},\n\t\t\t\t// Default tags. They will be added into all span tags.\n\t\t\t\tdefaultTags: null,\n\t\t\t},\n\t\t},\n\t},\n\terrorRegenerator: new CustomRegenerator(),\n\tstarted(): void {\n\t\tconsole.log('NetworkBroker started successfully.');\n\t},\n});\n\napi.setBroker(new NetworkBroker(network));\n"],"sourceRoot":""},"sourceType":"module","hash":"87894efdd517f5cda113b7514b66c60f02724075"}
