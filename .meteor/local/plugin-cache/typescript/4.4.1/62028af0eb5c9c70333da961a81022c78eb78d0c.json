{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/v1/voip/events.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/api/server/v1/voip/events.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/v1/voip/events.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/voip/events.ts","sourceRoot":"","sources":["app/api/server/v1/voip/events.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAE5C,OAAO,EAAE,GAAG,EAAE,MAAM,WAAW,CAAC;AAChC,OAAO,EAAE,YAAY,EAAE,MAAM,2BAA2B,CAAC;AACzD,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,+BAA+B,CAAC;AACzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,iDAAiD,CAAC;AAEnF,GAAG,CAAC,EAAE,CAAC,QAAQ,CACd,aAAa,EACb,EAAE,YAAY,EAAE,IAAI,EAAE,EACtB;IACC,KAAK,CAAC,IAAI;QACT,KAAK,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;YAC3B,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAS,EAAE,EAAE;gBAChC,OAAO,MAAM,CAAC,MAAM,CAAS,gBAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5D,CAAC,CAAC;YACF,GAAG,EAAE,MAAM;YACX,OAAO,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;SAC5B,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QAErD,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;QACrD,IAAI,CAAC,IAAI,EAAE;YACV,OAAO,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;SACzB;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;YACpC,OAAO,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;SAC7B;QAED,OAAO,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,YAAY,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;IACxF,CAAC;CACD,CACD,CAAC","sourcesContent":["import { Match, check } from 'meteor/check';\n\nimport { API } from '../../api';\nimport { LivechatVoip } from '../../../../../server/sdk';\nimport { canAccessRoom } from '../../../../authorization/server';\nimport { VoipRoom } from '../../../../models/server/raw';\nimport { VoipClientEvents } from '../../../../../definition/voip/VoipClientEvents';\n\nAPI.v1.addRoute(\n\t'voip/events',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.requestParams(), {\n\t\t\t\tevent: Match.Where((v: string) => {\n\t\t\t\t\treturn Object.values<string>(VoipClientEvents).includes(v);\n\t\t\t\t}),\n\t\t\t\trid: String,\n\t\t\t\tcomment: Match.Maybe(String),\n\t\t\t});\n\n\t\t\tconst { rid, event, comment } = this.requestParams();\n\n\t\t\tconst room = await VoipRoom.findOneVoipRoomById(rid);\n\t\t\tif (!room) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\t\t\tif (!canAccessRoom(room, this.user)) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\treturn API.v1.success(await LivechatVoip.handleEvent(event, room, this.user, comment));\n\t\t},\n\t},\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/v1/voip/events.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/voip/events.ts"}},"code":"let Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet API;\nmodule.link(\"../../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 1);\nlet LivechatVoip;\nmodule.link(\"../../../../../server/sdk\", {\n  LivechatVoip(v) {\n    LivechatVoip = v;\n  }\n\n}, 2);\nlet canAccessRoom;\nmodule.link(\"../../../../authorization/server\", {\n  canAccessRoom(v) {\n    canAccessRoom = v;\n  }\n\n}, 3);\nlet VoipRoom;\nmodule.link(\"../../../../models/server/raw\", {\n  VoipRoom(v) {\n    VoipRoom = v;\n  }\n\n}, 4);\nlet VoipClientEvents;\nmodule.link(\"../../../../../definition/voip/VoipClientEvents\", {\n  VoipClientEvents(v) {\n    VoipClientEvents = v;\n  }\n\n}, 5);\nAPI.v1.addRoute('voip/events', {\n  authRequired: true\n}, {\n  post() {\n    return Promise.asyncApply(() => {\n      check(this.requestParams(), {\n        event: Match.Where(v => {\n          return Object.values(VoipClientEvents).includes(v);\n        }),\n        rid: String,\n        comment: Match.Maybe(String)\n      });\n      const {\n        rid,\n        event,\n        comment\n      } = this.requestParams();\n      const room = Promise.await(VoipRoom.findOneVoipRoomById(rid));\n\n      if (!room) {\n        return API.v1.notFound();\n      }\n\n      if (!canAccessRoom(room, this.user)) {\n        return API.v1.unauthorized();\n      }\n\n      return API.v1.success(Promise.await(LivechatVoip.handleEvent(event, room, this.user, comment)));\n    });\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/voip/events.ts"],"names":[],"mappings":"AAAA,IAAA,KAAA,EAAS,KAAT;AAAgB,MAAK,CAAE,IAAP,CAAO,cAAP,EAA2B;AAAC,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA,GAAD;;AAAC,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAD,CAA3B,EAA4B,CAA5B;AAA4B,IAAA,GAAA;AAAA,MAAA,CAAA,IAAA,CAAA,WAAA,EAAA;AAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,YAAA;AAAA,MAAA,CAAA,IAAA,CAAA,2BAAA,EAAA;AAAA,EAAA,YAAA,CAAA,CAAA,EAAA;AAAA,IAAA,YAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,aAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kCAAA,EAAA;AAAA,EAAA,aAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA;AAAA,MAAA,CAAA,IAAA,CAAA,+BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,iDAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAQ5C,GAAG,CAAC,EAAJ,CAAO,QAAP,CACC,aADD,EAEC;AAAE,EAAA,YAAY,EAAE;AAAhB,CAFD,EAGC;AACO,EAAA,IAAN;AAAA,oCAAU;AACT,MAAA,KAAK,CAAC,KAAK,aAAL,EAAD,EAAuB;AAC3B,QAAA,KAAK,EAAE,KAAK,CAAC,KAAN,CAAa,CAAD,IAAc;AAChC,iBAAO,MAAM,CAAC,MAAP,CAAsB,gBAAtB,EAAwC,QAAxC,CAAiD,CAAjD,CAAP;AACA,SAFM,CADoB;AAI3B,QAAA,GAAG,EAAE,MAJsB;AAK3B,QAAA,OAAO,EAAE,KAAK,CAAC,KAAN,CAAY,MAAZ;AALkB,OAAvB,CAAL;AAQA,YAAM;AAAE,QAAA,GAAF;AAAO,QAAA,KAAP;AAAc,QAAA;AAAd,UAA0B,KAAK,aAAL,EAAhC;AAEA,YAAM,IAAI,iBAAS,QAAQ,CAAC,mBAAT,CAA6B,GAA7B,CAAT,CAAV;;AACA,UAAI,CAAC,IAAL,EAAW;AACV,eAAO,GAAG,CAAC,EAAJ,CAAO,QAAP,EAAP;AACA;;AACD,UAAI,CAAC,aAAa,CAAC,IAAD,EAAO,KAAK,IAAZ,CAAlB,EAAqC;AACpC,eAAO,GAAG,CAAC,EAAJ,CAAO,YAAP,EAAP;AACA;;AAED,aAAO,GAAG,CAAC,EAAJ,CAAO,OAAP,eAAqB,YAAY,CAAC,WAAb,CAAyB,KAAzB,EAAgC,IAAhC,EAAsC,KAAK,IAA3C,EAAiD,OAAjD,CAArB,EAAP;AACA,KApBD;AAAA;;AADD,CAHD","sourcesContent":["import { Match, check } from 'meteor/check';\n\nimport { API } from '../../api';\nimport { LivechatVoip } from '../../../../../server/sdk';\nimport { canAccessRoom } from '../../../../authorization/server';\nimport { VoipRoom } from '../../../../models/server/raw';\nimport { VoipClientEvents } from '../../../../../definition/voip/VoipClientEvents';\n\nAPI.v1.addRoute(\n\t'voip/events',\n\t{ authRequired: true },\n\t{\n\t\tasync post() {\n\t\t\tcheck(this.requestParams(), {\n\t\t\t\tevent: Match.Where((v: string) => {\n\t\t\t\t\treturn Object.values<string>(VoipClientEvents).includes(v);\n\t\t\t\t}),\n\t\t\t\trid: String,\n\t\t\t\tcomment: Match.Maybe(String),\n\t\t\t});\n\n\t\t\tconst { rid, event, comment } = this.requestParams();\n\n\t\t\tconst room = await VoipRoom.findOneVoipRoomById(rid);\n\t\t\tif (!room) {\n\t\t\t\treturn API.v1.notFound();\n\t\t\t}\n\t\t\tif (!canAccessRoom(room, this.user)) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\treturn API.v1.success(await LivechatVoip.handleEvent(event, room, this.user, comment));\n\t\t},\n\t},\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"62028af0eb5c9c70333da961a81022c78eb78d0c"}
