{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/server/lib/roles/insertRole.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"server/lib/roles/insertRole.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/server/lib/roles/insertRole.ts","inputSourceMap":{"version":3,"file":"server/lib/roles/insertRole.ts","sourceRoot":"","sources":["server/lib/roles/insertRole.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,gCAAgC,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,gBAAgB,EAAE,MAAM,qCAAqC,CAAC;AACvE,OAAO,EAAE,GAAG,EAAE,MAAM,eAAe,CAAC;AAMpC,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,EAAE,QAA4B,EAAE,UAA6B,EAAE,EAAkB,EAAE;IACtH,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,QAAQ,CAAC;IAE5D,IAAI,MAAM,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;QACpC,MAAM,IAAI,WAAW,CAAC,wCAAwC,EAAE,0BAA0B,CAAC,CAAC;KAC5F;IAED,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;QAC7B,MAAM,IAAI,WAAW,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC;KAC9D;IAED,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,kBAAkB,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;IAE7F,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC;IAEjC,IAAI,OAAO,CAAC,eAAe,EAAE;QAC5B,GAAG,CAAC,SAAS,CAAC,iBAAiB,EAAE;YAChC,IAAI,EAAE,SAAS;YACf,GAAG,EAAE,MAAM;SACX,CAAC,CAAC;KACH;IAED,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAChD,IAAI,CAAC,OAAO,EAAE;QACb,MAAM,IAAI,WAAW,CAAC,sBAAsB,EAAE,gBAAgB,CAAC,CAAC;KAChE;IAED,OAAO,OAAO,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,GAAG,IAAwC,EAAS,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC","sourcesContent":["import type { IRole } from '../../../definition/IRole';\nimport { Roles } from '../../../app/models/server/raw';\nimport { MeteorError } from '../../sdk/errors';\nimport { isValidRoleScope } from '../../../lib/roles/isValidRoleScope';\nimport { api } from '../../sdk/api';\n\ntype InsertRoleOptions = {\n\tbroadcastUpdate?: boolean;\n};\n\nexport const insertRoleAsync = async (roleData: Omit<IRole, '_id'>, options: InsertRoleOptions = {}): Promise<IRole> => {\n\tconst { name, scope, description, mandatory2fa } = roleData;\n\n\tif (await Roles.findOneByName(name)) {\n\t\tthrow new MeteorError('error-duplicate-role-names-not-allowed', 'Role name already exists');\n\t}\n\n\tif (!isValidRoleScope(scope)) {\n\t\tthrow new MeteorError('error-invalid-scope', 'Invalid scope');\n\t}\n\n\tconst result = await Roles.createWithRandomId(name, scope, description, false, mandatory2fa);\n\n\tconst roleId = result.insertedId;\n\n\tif (options.broadcastUpdate) {\n\t\tapi.broadcast('user.roleUpdate', {\n\t\t\ttype: 'changed',\n\t\t\t_id: roleId,\n\t\t});\n\t}\n\n\tconst newRole = await Roles.findOneById(roleId);\n\tif (!newRole) {\n\t\tthrow new MeteorError('error-role-not-found', 'Role not found');\n\t}\n\n\treturn newRole;\n};\n\nexport const insertRole = (...args: Parameters<typeof insertRoleAsync>): IRole => Promise.await(insertRoleAsync(...args));\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/server/lib/roles/insertRole.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/lib/roles/insertRole.ts"}},"code":"module.export({\n  insertRoleAsync: () => insertRoleAsync,\n  insertRole: () => insertRole\n});\nlet Roles;\nmodule.link(\"../../../app/models/server/raw\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 0);\nlet MeteorError;\nmodule.link(\"../../sdk/errors\", {\n  MeteorError(v) {\n    MeteorError = v;\n  }\n\n}, 1);\nlet isValidRoleScope;\nmodule.link(\"../../../lib/roles/isValidRoleScope\", {\n  isValidRoleScope(v) {\n    isValidRoleScope = v;\n  }\n\n}, 2);\nlet api;\nmodule.link(\"../../sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 3);\n\nconst insertRoleAsync = function (roleData) {\n  return Promise.asyncApply(() => {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      name,\n      scope,\n      description,\n      mandatory2fa\n    } = roleData;\n\n    if (Promise.await(Roles.findOneByName(name))) {\n      throw new MeteorError('error-duplicate-role-names-not-allowed', 'Role name already exists');\n    }\n\n    if (!isValidRoleScope(scope)) {\n      throw new MeteorError('error-invalid-scope', 'Invalid scope');\n    }\n\n    const result = Promise.await(Roles.createWithRandomId(name, scope, description, false, mandatory2fa));\n    const roleId = result.insertedId;\n\n    if (options.broadcastUpdate) {\n      api.broadcast('user.roleUpdate', {\n        type: 'changed',\n        _id: roleId\n      });\n    }\n\n    const newRole = Promise.await(Roles.findOneById(roleId));\n\n    if (!newRole) {\n      throw new MeteorError('error-role-not-found', 'Role not found');\n    }\n\n    return newRole;\n  });\n};\n\nconst insertRole = function () {\n  return Promise.await(insertRoleAsync(...arguments));\n};","map":{"version":3,"sources":["server/lib/roles/insertRole.ts"],"names":[],"mappings":"AACA,MAAA,CAAO,MAAP,CAAc;AAAA,EAAA,eAAQ,EAAA,MAAA,eAAR;AAAQ,EAAA,UAAiC,EAAA,MAAA;AAAzC,CAAd;AAAuD,IAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,WAAA;AAAA,MAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AAAA,EAAA,WAAA,CAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,gBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,qCAAA,EAAA;AAAA,EAAA,gBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,GAAA;AAAA,MAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAShD,MAAM,eAAe,GAAG,UAAO,QAAP;AAAA,kCAAwF;AAAA,QAAnD,OAAmD,uEAAtB,EAAsB;AACtH,UAAM;AAAE,MAAA,IAAF;AAAQ,MAAA,KAAR;AAAe,MAAA,WAAf;AAA4B,MAAA;AAA5B,QAA6C,QAAnD;;AAEA,sBAAU,KAAK,CAAC,aAAN,CAAoB,IAApB,CAAV,GAAqC;AACpC,YAAM,IAAI,WAAJ,CAAgB,wCAAhB,EAA0D,0BAA1D,CAAN;AACA;;AAED,QAAI,CAAC,gBAAgB,CAAC,KAAD,CAArB,EAA8B;AAC7B,YAAM,IAAI,WAAJ,CAAgB,qBAAhB,EAAuC,eAAvC,CAAN;AACA;;AAED,UAAM,MAAM,iBAAS,KAAK,CAAC,kBAAN,CAAyB,IAAzB,EAA+B,KAA/B,EAAsC,WAAtC,EAAmD,KAAnD,EAA0D,YAA1D,CAAT,CAAZ;AAEA,UAAM,MAAM,GAAG,MAAM,CAAC,UAAtB;;AAEA,QAAI,OAAO,CAAC,eAAZ,EAA6B;AAC5B,MAAA,GAAG,CAAC,SAAJ,CAAc,iBAAd,EAAiC;AAChC,QAAA,IAAI,EAAE,SAD0B;AAEhC,QAAA,GAAG,EAAE;AAF2B,OAAjC;AAIA;;AAED,UAAM,OAAO,iBAAS,KAAK,CAAC,WAAN,CAAkB,MAAlB,CAAT,CAAb;;AACA,QAAI,CAAC,OAAL,EAAc;AACb,YAAM,IAAI,WAAJ,CAAgB,sBAAhB,EAAwC,gBAAxC,CAAN;AACA;;AAED,WAAO,OAAP;AACA,GA5B8B;AAAA,CAAxB;;AA8BA,MAAM,UAAU,GAAG;AAAA,SAAwD,OAAO,CAAC,KAAR,CAAc,eAAe,CAAC,YAAD,CAA7B,CAAxD;AAAA,CAAnB","sourcesContent":["import type { IRole } from '../../../definition/IRole';\nimport { Roles } from '../../../app/models/server/raw';\nimport { MeteorError } from '../../sdk/errors';\nimport { isValidRoleScope } from '../../../lib/roles/isValidRoleScope';\nimport { api } from '../../sdk/api';\n\ntype InsertRoleOptions = {\n\tbroadcastUpdate?: boolean;\n};\n\nexport const insertRoleAsync = async (roleData: Omit<IRole, '_id'>, options: InsertRoleOptions = {}): Promise<IRole> => {\n\tconst { name, scope, description, mandatory2fa } = roleData;\n\n\tif (await Roles.findOneByName(name)) {\n\t\tthrow new MeteorError('error-duplicate-role-names-not-allowed', 'Role name already exists');\n\t}\n\n\tif (!isValidRoleScope(scope)) {\n\t\tthrow new MeteorError('error-invalid-scope', 'Invalid scope');\n\t}\n\n\tconst result = await Roles.createWithRandomId(name, scope, description, false, mandatory2fa);\n\n\tconst roleId = result.insertedId;\n\n\tif (options.broadcastUpdate) {\n\t\tapi.broadcast('user.roleUpdate', {\n\t\t\ttype: 'changed',\n\t\t\t_id: roleId,\n\t\t});\n\t}\n\n\tconst newRole = await Roles.findOneById(roleId);\n\tif (!newRole) {\n\t\tthrow new MeteorError('error-role-not-found', 'Role not found');\n\t}\n\n\treturn newRole;\n};\n\nexport const insertRole = (...args: Parameters<typeof insertRoleAsync>): IRole => Promise.await(insertRoleAsync(...args));\n"],"sourceRoot":""},"sourceType":"module","hash":"8324455eb7bf053d3d7ecaf82255f1c0d7f3a2b0"}
