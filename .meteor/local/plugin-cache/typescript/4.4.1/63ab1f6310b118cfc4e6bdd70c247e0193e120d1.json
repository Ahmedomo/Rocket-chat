{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/helpers/getUserInfo.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/api/server/helpers/getUserInfo.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/helpers/getUserInfo.ts","inputSourceMap":{"version":3,"file":"app/api/server/helpers/getUserInfo.ts","sourceRoot":"","sources":["app/api/server/helpers/getUserInfo.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,iBAAiB,EAAE,MAAM,EAAE,MAAM,uBAAuB,CAAC;AAClE,OAAO,EAAE,GAAG,EAAE,MAAM,QAAQ,CAAC;AAE7B,MAAM,eAAe,GAAG,CAAC,EAAS,EAAkC,EAAE;IACrE,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE;QACrC,OAAO,KAAK,CAAC;KACb;IAED,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAClD,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,CAAC,EAAS,EAA2B,EAAE;IACjE,MAAM,wBAAwB,GAAG,oCAAoC,CAAC;IACtE,MAAM,sBAAsB,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,MAAM,CAAC,IAAI,wBAAwB,KAAK,CAAC,CAAC,CAAC;IAEnG,OAAO,sBAAsB,CAAC,MAAM,CAAC,CAAC,WAAuC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE;QACvF,MAAM,oBAAoB,GAAG,GAAG,CAAC,OAAO,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;QAC/E,WAAW,CAAC,oBAAoB,CAAC,GAAG,iBAAiB,CAAC,EAAE,EAAE,oBAAoB,CAAC,CAAC;QAChF,OAAO,WAAW,CAAC;IACpB,CAAC,EAAE,EAAE,CAAC,CAAC;AACR,CAAC,CAAC;AACF,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,EAAE,SAAS,YAAY,CAAC,EAAS;IACnE,MAAM,aAAa,GAAG,eAAe,CAAC,EAAE,CAAC,CAAC;IAE1C,MAAM,eAAe,GAAG,CAAC,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAEvE,OAAO;QACN,GAAG,EAAE;QACL,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS;QACxD,QAAQ,EAAE;YACT,OAAO,EAAE,EAAE;YACX,WAAW,EAAE;gBACZ,GAAG,kBAAkB,CAAC,EAAE,CAAC;gBACzB,GAAG,eAAe;aAClB;SACD;QACD,SAAS,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;KACvE,CAAC;AACH,CAAC,CAAC,CAAC","sourcesContent":["import { IUser, IUserEmail } from '../../../../definition/IUser';\nimport { settings } from '../../../settings/server';\nimport { getUserPreference, getURL } from '../../../utils/server';\nimport { API } from '../api';\n\nconst isVerifiedEmail = (me: IUser): false | IUserEmail | undefined => {\n\tif (!me || !Array.isArray(me.emails)) {\n\t\treturn false;\n\t}\n\n\treturn me.emails.find((email) => email.verified);\n};\n\nconst getUserPreferences = (me: IUser): Record<string, unknown> => {\n\tconst defaultUserSettingPrefix = 'Accounts_Default_User_Preferences_';\n\tconst allDefaultUserSettings = settings.getByRegexp(new RegExp(`^${defaultUserSettingPrefix}.*$`));\n\n\treturn allDefaultUserSettings.reduce((accumulator: { [key: string]: unknown }, [key]) => {\n\t\tconst settingWithoutPrefix = key.replace(defaultUserSettingPrefix, ' ').trim();\n\t\taccumulator[settingWithoutPrefix] = getUserPreference(me, settingWithoutPrefix);\n\t\treturn accumulator;\n\t}, {});\n};\nAPI.helperMethods.set('getUserInfo', function _getUserInfo(me: IUser) {\n\tconst verifiedEmail = isVerifiedEmail(me);\n\n\tconst userPreferences = (me.settings && me.settings.preferences) || {};\n\n\treturn {\n\t\t...me,\n\t\temail: verifiedEmail ? verifiedEmail.address : undefined,\n\t\tsettings: {\n\t\t\tprofile: {},\n\t\t\tpreferences: {\n\t\t\t\t...getUserPreferences(me),\n\t\t\t\t...userPreferences,\n\t\t\t},\n\t\t},\n\t\tavatarUrl: getURL(`/avatar/${me.username}`, { cdn: false, full: true }),\n\t};\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/helpers/getUserInfo.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/helpers/getUserInfo.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 0);\nlet getUserPreference, getURL;\nmodule.link(\"../../../utils/server\", {\n  getUserPreference(v) {\n    getUserPreference = v;\n  },\n\n  getURL(v) {\n    getURL = v;\n  }\n\n}, 1);\nlet API;\nmodule.link(\"../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 2);\n\nconst isVerifiedEmail = me => {\n  if (!me || !Array.isArray(me.emails)) {\n    return false;\n  }\n\n  return me.emails.find(email => email.verified);\n};\n\nconst getUserPreferences = me => {\n  const defaultUserSettingPrefix = 'Accounts_Default_User_Preferences_';\n  const allDefaultUserSettings = settings.getByRegexp(new RegExp(\"^\".concat(defaultUserSettingPrefix, \".*$\")));\n  return allDefaultUserSettings.reduce((accumulator, _ref) => {\n    let [key] = _ref;\n    const settingWithoutPrefix = key.replace(defaultUserSettingPrefix, ' ').trim();\n    accumulator[settingWithoutPrefix] = getUserPreference(me, settingWithoutPrefix);\n    return accumulator;\n  }, {});\n};\n\nAPI.helperMethods.set('getUserInfo', function _getUserInfo(me) {\n  const verifiedEmail = isVerifiedEmail(me);\n  const userPreferences = me.settings && me.settings.preferences || {};\n  return _objectSpread(_objectSpread({}, me), {}, {\n    email: verifiedEmail ? verifiedEmail.address : undefined,\n    settings: {\n      profile: {},\n      preferences: _objectSpread(_objectSpread({}, getUserPreferences(me)), userPreferences)\n    },\n    avatarUrl: getURL(\"/avatar/\".concat(me.username), {\n      cdn: false,\n      full: true\n    })\n  });\n});","map":{"version":3,"sources":["app/api/server/helpers/getUserInfo.ts"],"names":[],"mappings":"AACA,IAAA,aAAA;;AAAiB,MAAE,CAAM,IAAR,CAAQ,sCAAR,EAAmC;AAAA,EAAA,OAAA,CAAA,CAAA,EAAA;AAAA,IAAA,aAAA,GAAA,CAAA;AAAA;;AAAA,CAAnC,EAAmC,CAAnC;AAAjB,IAAA,QAAA;AAAS,MAAU,CAAA,IAAV,CAAgB,0BAAhB,EAA2C;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAA3C,EAA2C,CAA3C;AAA2C,IAAA,iBAAA,EAAA,MAAA;AAAA,MAAA,CAAA,IAAA,CAAA,uBAAA,EAAA;AAAA,EAAA,iBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,MAAA,CAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,GAAA;AAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AAAA,EAAA,GAAA,CAAA,CAAA,EAAA;AAAA,IAAA,GAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAIpD,MAAM,eAAe,GAAI,EAAD,IAA8C;AACrE,MAAI,CAAC,EAAD,IAAO,CAAC,KAAK,CAAC,OAAN,CAAc,EAAE,CAAC,MAAjB,CAAZ,EAAsC;AACrC,WAAO,KAAP;AACA;;AAED,SAAO,EAAE,CAAC,MAAH,CAAU,IAAV,CAAgB,KAAD,IAAW,KAAK,CAAC,QAAhC,CAAP;AACA,CAND;;AAQA,MAAM,kBAAkB,GAAI,EAAD,IAAuC;AACjE,QAAM,wBAAwB,GAAG,oCAAjC;AACA,QAAM,sBAAsB,GAAG,QAAQ,CAAC,WAAT,CAAqB,IAAI,MAAJ,YAAe,wBAAf,SAArB,CAA/B;AAEA,SAAO,sBAAsB,CAAC,MAAvB,CAA8B,CAAC,WAAD,WAAmD;AAAA,QAAT,CAAC,GAAD,CAAS;AACvF,UAAM,oBAAoB,GAAG,GAAG,CAAC,OAAJ,CAAY,wBAAZ,EAAsC,GAAtC,EAA2C,IAA3C,EAA7B;AACA,IAAA,WAAW,CAAC,oBAAD,CAAX,GAAoC,iBAAiB,CAAC,EAAD,EAAK,oBAAL,CAArD;AACA,WAAO,WAAP;AACA,GAJM,EAIJ,EAJI,CAAP;AAKA,CATD;;AAUA,GAAG,CAAC,aAAJ,CAAkB,GAAlB,CAAsB,aAAtB,EAAqC,SAAS,YAAT,CAAsB,EAAtB,EAA+B;AACnE,QAAM,aAAa,GAAG,eAAe,CAAC,EAAD,CAArC;AAEA,QAAM,eAAe,GAAI,EAAE,CAAC,QAAH,IAAe,EAAE,CAAC,QAAH,CAAY,WAA5B,IAA4C,EAApE;AAEA,yCACI,EADJ;AAEC,IAAA,KAAK,EAAE,aAAa,GAAG,aAAa,CAAC,OAAjB,GAA2B,SAFhD;AAGC,IAAA,QAAQ,EAAE;AACT,MAAA,OAAO,EAAE,EADA;AAET,MAAA,WAAW,kCACP,kBAAkB,CAAC,EAAD,CADX,GAEP,eAFO;AAFF,KAHX;AAUC,IAAA,SAAS,EAAE,MAAM,mBAAY,EAAE,CAAC,QAAf,GAA2B;AAAE,MAAA,GAAG,EAAE,KAAP;AAAc,MAAA,IAAI,EAAE;AAApB,KAA3B;AAVlB;AAYA,CAjBD","sourcesContent":["import { IUser, IUserEmail } from '../../../../definition/IUser';\nimport { settings } from '../../../settings/server';\nimport { getUserPreference, getURL } from '../../../utils/server';\nimport { API } from '../api';\n\nconst isVerifiedEmail = (me: IUser): false | IUserEmail | undefined => {\n\tif (!me || !Array.isArray(me.emails)) {\n\t\treturn false;\n\t}\n\n\treturn me.emails.find((email) => email.verified);\n};\n\nconst getUserPreferences = (me: IUser): Record<string, unknown> => {\n\tconst defaultUserSettingPrefix = 'Accounts_Default_User_Preferences_';\n\tconst allDefaultUserSettings = settings.getByRegexp(new RegExp(`^${defaultUserSettingPrefix}.*$`));\n\n\treturn allDefaultUserSettings.reduce((accumulator: { [key: string]: unknown }, [key]) => {\n\t\tconst settingWithoutPrefix = key.replace(defaultUserSettingPrefix, ' ').trim();\n\t\taccumulator[settingWithoutPrefix] = getUserPreference(me, settingWithoutPrefix);\n\t\treturn accumulator;\n\t}, {});\n};\nAPI.helperMethods.set('getUserInfo', function _getUserInfo(me: IUser) {\n\tconst verifiedEmail = isVerifiedEmail(me);\n\n\tconst userPreferences = (me.settings && me.settings.preferences) || {};\n\n\treturn {\n\t\t...me,\n\t\temail: verifiedEmail ? verifiedEmail.address : undefined,\n\t\tsettings: {\n\t\t\tprofile: {},\n\t\t\tpreferences: {\n\t\t\t\t...getUserPreferences(me),\n\t\t\t\t...userPreferences,\n\t\t\t},\n\t\t},\n\t\tavatarUrl: getURL(`/avatar/${me.username}`, { cdn: false, full: true }),\n\t};\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"63ab1f6310b118cfc4e6bdd70c247e0193e120d1"}
