{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/loadMessageHistory.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/lib/server/functions/loadMessageHistory.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/loadMessageHistory.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/loadMessageHistory.ts","sourceRoot":"","sources":["app/lib/server/functions/loadMessageHistory.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAE,wBAAwB,EAAE,MAAM,oDAAoD,CAAC;AAC9F,OAAO,EAAE,uBAAuB,EAAE,MAAM,gCAAgC,CAAC;AAEzE,MAAM,CAAC,MAAM,kBAAkB,GAAG,SAAS,kBAAkB,CAAC,EAC7D,MAAM,EACN,GAAG,EACH,GAAG,EACH,KAAK,GAAG,EAAE,EACV,EAAE,EACF,kBAAkB,GAAG,IAAI,GAQzB;IACA,MAAM,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAE/D,MAAM,kBAAkB,GAAG,uBAAuB,CAAC,IAAI,CAAC,CAAC;IAEzD,MAAM,OAAO,GAAG;QACf,IAAI,EAAE;YACL,EAAE,EAAE,CAAC,CAAC;SACN;QACD,KAAK;QACL,MAAM,EAAE,EAAE;KACV,CAAC;IAEF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,0BAA0B,CAAC,EAAE;QAC9C,OAAO,CAAC,MAAM,GAAG;YAChB,QAAQ,EAAE,CAAC;SACX,CAAC;KACF;IAED,MAAM,OAAO,GACZ,GAAG,IAAI,IAAI;QACV,CAAC,CAAC,QAAQ,CAAC,oDAAoD,CAAC,GAAG,EAAE,GAAG,EAAE,kBAAkB,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAC,KAAK,EAAE;QAClI,CAAC,CAAC,QAAQ,CAAC,qCAAqC,CAAC,GAAG,EAAE,kBAAkB,EAAE,OAAO,EAAE,kBAAkB,CAAC,CAAC,KAAK,EAAE,CAAC;IACjH,MAAM,QAAQ,GAAG,wBAAwB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC3D,IAAI,eAAe,GAAG,CAAC,CAAC;IACxB,IAAI,WAAW,CAAC;IAEhB,IAAI,EAAE,IAAI,IAAI,EAAE;QACf,MAAM,YAAY,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEnD,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE;YAC9D,wBAAwB;YACxB,MAAM,cAAc,GAAG,QAAQ,CAAC,sDAAsD,CACrF,GAAG,EACH,EAAE,EACF,YAAY,CAAC,EAAE,EACf,kBAAkB,EAClB;gBACC,KAAK,EAAE,CAAC;gBACR,IAAI,EAAE;oBACL,EAAE,EAAE,CAAC;iBACL;aACD,EACD,kBAAkB,CAClB,CAAC;YAEF,WAAW,GAAG,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YACxC,eAAe,GAAG,cAAc,CAAC,KAAK,EAAE,CAAC;SACzC;KACD;IAED,OAAO;QACN,QAAQ;QACR,WAAW;QACX,eAAe;KACf,CAAC;AACH,CAAC,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { settings } from '../../../settings/server';\nimport { Messages, Rooms } from '../../../models/server';\nimport { normalizeMessagesForUser } from '../../../utils/server/lib/normalizeMessagesForUser';\nimport { getHiddenSystemMessages } from '../lib/getHiddenSystemMessages';\n\nexport const loadMessageHistory = function loadMessageHistory({\n\tuserId,\n\trid,\n\tend,\n\tlimit = 20,\n\tls,\n\tshowThreadMessages = true,\n}: {\n\tuserId: string;\n\trid: string;\n\tend: string;\n\tlimit: number;\n\tls: string;\n\tshowThreadMessages: boolean;\n}) {\n\tconst room = Rooms.findOneById(rid, { fields: { sysMes: 1 } });\n\n\tconst hiddenMessageTypes = getHiddenSystemMessages(room);\n\n\tconst options = {\n\t\tsort: {\n\t\t\tts: -1,\n\t\t},\n\t\tlimit,\n\t\tfields: {},\n\t};\n\n\tif (!settings.get('Message_ShowEditedStatus')) {\n\t\toptions.fields = {\n\t\t\teditedAt: 0,\n\t\t};\n\t}\n\n\tconst records =\n\t\tend != null\n\t\t\t? Messages.findVisibleByRoomIdBeforeTimestampNotContainingTypes(rid, end, hiddenMessageTypes, options, showThreadMessages).fetch()\n\t\t\t: Messages.findVisibleByRoomIdNotContainingTypes(rid, hiddenMessageTypes, options, showThreadMessages).fetch();\n\tconst messages = normalizeMessagesForUser(records, userId);\n\tlet unreadNotLoaded = 0;\n\tlet firstUnread;\n\n\tif (ls != null) {\n\t\tconst firstMessage = messages[messages.length - 1];\n\n\t\tif ((firstMessage != null ? firstMessage.ts : undefined) > ls) {\n\t\t\t// delete options.limit;\n\t\t\tconst unreadMessages = Messages.findVisibleByRoomIdBetweenTimestampsNotContainingTypes(\n\t\t\t\trid,\n\t\t\t\tls,\n\t\t\t\tfirstMessage.ts,\n\t\t\t\thiddenMessageTypes,\n\t\t\t\t{\n\t\t\t\t\tlimit: 1,\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tts: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tshowThreadMessages,\n\t\t\t);\n\n\t\t\tfirstUnread = unreadMessages.fetch()[0];\n\t\t\tunreadNotLoaded = unreadMessages.count();\n\t\t}\n\t}\n\n\treturn {\n\t\tmessages,\n\t\tfirstUnread,\n\t\tunreadNotLoaded,\n\t};\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/loadMessageHistory.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/loadMessageHistory.ts"}},"code":"module.export({\n  loadMessageHistory: () => loadMessageHistory\n});\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 0);\nlet Messages, Rooms;\nmodule.link(\"../../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  }\n\n}, 1);\nlet normalizeMessagesForUser;\nmodule.link(\"../../../utils/server/lib/normalizeMessagesForUser\", {\n  normalizeMessagesForUser(v) {\n    normalizeMessagesForUser = v;\n  }\n\n}, 2);\nlet getHiddenSystemMessages;\nmodule.link(\"../lib/getHiddenSystemMessages\", {\n  getHiddenSystemMessages(v) {\n    getHiddenSystemMessages = v;\n  }\n\n}, 3);\n\nconst loadMessageHistory = function loadMessageHistory(_ref) {\n  let {\n    userId,\n    rid,\n    end,\n    limit = 20,\n    ls,\n    showThreadMessages = true\n  } = _ref;\n  const room = Rooms.findOneById(rid, {\n    fields: {\n      sysMes: 1\n    }\n  });\n  const hiddenMessageTypes = getHiddenSystemMessages(room);\n  const options = {\n    sort: {\n      ts: -1\n    },\n    limit,\n    fields: {}\n  };\n\n  if (!settings.get('Message_ShowEditedStatus')) {\n    options.fields = {\n      editedAt: 0\n    };\n  }\n\n  const records = end != null ? Messages.findVisibleByRoomIdBeforeTimestampNotContainingTypes(rid, end, hiddenMessageTypes, options, showThreadMessages).fetch() : Messages.findVisibleByRoomIdNotContainingTypes(rid, hiddenMessageTypes, options, showThreadMessages).fetch();\n  const messages = normalizeMessagesForUser(records, userId);\n  let unreadNotLoaded = 0;\n  let firstUnread;\n\n  if (ls != null) {\n    const firstMessage = messages[messages.length - 1];\n\n    if ((firstMessage != null ? firstMessage.ts : undefined) > ls) {\n      // delete options.limit;\n      const unreadMessages = Messages.findVisibleByRoomIdBetweenTimestampsNotContainingTypes(rid, ls, firstMessage.ts, hiddenMessageTypes, {\n        limit: 1,\n        sort: {\n          ts: 1\n        }\n      }, showThreadMessages);\n      firstUnread = unreadMessages.fetch()[0];\n      unreadNotLoaded = unreadMessages.count();\n    }\n  }\n\n  return {\n    messages,\n    firstUnread,\n    unreadNotLoaded\n  };\n};","map":{"version":3,"sources":["app/lib/server/functions/loadMessageHistory.ts"],"names":[],"mappings":"AAAA,MAAA,CAAA,MAAA,CAAA;AAAA,EAAA,kBAAA,EAAA,MAAA;AAAA,CAAA;AAAA,IAAA,QAAA;AAAqE,MAAA,CAAA,IAAA,CAAA,0BAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,QAAA,EAAA,KAAA;AAAA,MAAA,CAAA,IAAA,CAAA,wBAAA,EAAA;AAAA,EAAA,QAAA,CAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAA,GAAA;;AAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,wBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,oDAAA,EAAA;AAAA,EAAA,wBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,wBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;AAAA,IAAA,uBAAA;AAAA,MAAA,CAAA,IAAA,CAAA,gCAAA,EAAA;AAAA,EAAA,uBAAA,CAAA,CAAA,EAAA;AAAA,IAAA,uBAAA,GAAA,CAAA;AAAA;;AAAA,CAAA,EAAA,CAAA;;AAM9D,MAAM,kBAAkB,GAAG,SAAS,kBAAT,OAcjC;AAAA,MAd6D;AAC7D,IAAA,MAD6D;AAE7D,IAAA,GAF6D;AAG7D,IAAA,GAH6D;AAI7D,IAAA,KAAK,GAAG,EAJqD;AAK7D,IAAA,EAL6D;AAM7D,IAAA,kBAAkB,GAAG;AANwC,GAc7D;AACA,QAAM,IAAI,GAAG,KAAK,CAAC,WAAN,CAAkB,GAAlB,EAAuB;AAAE,IAAA,MAAM,EAAE;AAAE,MAAA,MAAM,EAAE;AAAV;AAAV,GAAvB,CAAb;AAEA,QAAM,kBAAkB,GAAG,uBAAuB,CAAC,IAAD,CAAlD;AAEA,QAAM,OAAO,GAAG;AACf,IAAA,IAAI,EAAE;AACL,MAAA,EAAE,EAAE,CAAC;AADA,KADS;AAIf,IAAA,KAJe;AAKf,IAAA,MAAM,EAAE;AALO,GAAhB;;AAQA,MAAI,CAAC,QAAQ,CAAC,GAAT,CAAa,0BAAb,CAAL,EAA+C;AAC9C,IAAA,OAAO,CAAC,MAAR,GAAiB;AAChB,MAAA,QAAQ,EAAE;AADM,KAAjB;AAGA;;AAED,QAAM,OAAO,GACZ,GAAG,IAAI,IAAP,GACG,QAAQ,CAAC,oDAAT,CAA8D,GAA9D,EAAmE,GAAnE,EAAwE,kBAAxE,EAA4F,OAA5F,EAAqG,kBAArG,EAAyH,KAAzH,EADH,GAEG,QAAQ,CAAC,qCAAT,CAA+C,GAA/C,EAAoD,kBAApD,EAAwE,OAAxE,EAAiF,kBAAjF,EAAqG,KAArG,EAHJ;AAIA,QAAM,QAAQ,GAAG,wBAAwB,CAAC,OAAD,EAAU,MAAV,CAAzC;AACA,MAAI,eAAe,GAAG,CAAtB;AACA,MAAI,WAAJ;;AAEA,MAAI,EAAE,IAAI,IAAV,EAAgB;AACf,UAAM,YAAY,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAT,GAAkB,CAAnB,CAA7B;;AAEA,QAAI,CAAC,YAAY,IAAI,IAAhB,GAAuB,YAAY,CAAC,EAApC,GAAyC,SAA1C,IAAuD,EAA3D,EAA+D;AAC9D;AACA,YAAM,cAAc,GAAG,QAAQ,CAAC,sDAAT,CACtB,GADsB,EAEtB,EAFsB,EAGtB,YAAY,CAAC,EAHS,EAItB,kBAJsB,EAKtB;AACC,QAAA,KAAK,EAAE,CADR;AAEC,QAAA,IAAI,EAAE;AACL,UAAA,EAAE,EAAE;AADC;AAFP,OALsB,EAWtB,kBAXsB,CAAvB;AAcA,MAAA,WAAW,GAAG,cAAc,CAAC,KAAf,GAAuB,CAAvB,CAAd;AACA,MAAA,eAAe,GAAG,cAAc,CAAC,KAAf,EAAlB;AACA;AACD;;AAED,SAAO;AACN,IAAA,QADM;AAEN,IAAA,WAFM;AAGN,IAAA;AAHM,GAAP;AAKA,CAtEM","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { settings } from '../../../settings/server';\nimport { Messages, Rooms } from '../../../models/server';\nimport { normalizeMessagesForUser } from '../../../utils/server/lib/normalizeMessagesForUser';\nimport { getHiddenSystemMessages } from '../lib/getHiddenSystemMessages';\n\nexport const loadMessageHistory = function loadMessageHistory({\n\tuserId,\n\trid,\n\tend,\n\tlimit = 20,\n\tls,\n\tshowThreadMessages = true,\n}: {\n\tuserId: string;\n\trid: string;\n\tend: string;\n\tlimit: number;\n\tls: string;\n\tshowThreadMessages: boolean;\n}) {\n\tconst room = Rooms.findOneById(rid, { fields: { sysMes: 1 } });\n\n\tconst hiddenMessageTypes = getHiddenSystemMessages(room);\n\n\tconst options = {\n\t\tsort: {\n\t\t\tts: -1,\n\t\t},\n\t\tlimit,\n\t\tfields: {},\n\t};\n\n\tif (!settings.get('Message_ShowEditedStatus')) {\n\t\toptions.fields = {\n\t\t\teditedAt: 0,\n\t\t};\n\t}\n\n\tconst records =\n\t\tend != null\n\t\t\t? Messages.findVisibleByRoomIdBeforeTimestampNotContainingTypes(rid, end, hiddenMessageTypes, options, showThreadMessages).fetch()\n\t\t\t: Messages.findVisibleByRoomIdNotContainingTypes(rid, hiddenMessageTypes, options, showThreadMessages).fetch();\n\tconst messages = normalizeMessagesForUser(records, userId);\n\tlet unreadNotLoaded = 0;\n\tlet firstUnread;\n\n\tif (ls != null) {\n\t\tconst firstMessage = messages[messages.length - 1];\n\n\t\tif ((firstMessage != null ? firstMessage.ts : undefined) > ls) {\n\t\t\t// delete options.limit;\n\t\t\tconst unreadMessages = Messages.findVisibleByRoomIdBetweenTimestampsNotContainingTypes(\n\t\t\t\trid,\n\t\t\t\tls,\n\t\t\t\tfirstMessage.ts,\n\t\t\t\thiddenMessageTypes,\n\t\t\t\t{\n\t\t\t\t\tlimit: 1,\n\t\t\t\t\tsort: {\n\t\t\t\t\t\tts: 1,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tshowThreadMessages,\n\t\t\t);\n\n\t\t\tfirstUnread = unreadMessages.fetch()[0];\n\t\t\tunreadNotLoaded = unreadMessages.count();\n\t\t}\n\t}\n\n\treturn {\n\t\tmessages,\n\t\tfirstUnread,\n\t\tunreadNotLoaded,\n\t};\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"e32b446ae177b04b16da957c5df5b2c1d448e830"}
