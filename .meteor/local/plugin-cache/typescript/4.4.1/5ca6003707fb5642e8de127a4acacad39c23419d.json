{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/cleanRoomHistory.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/lib/server/functions/cleanRoomHistory.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/cleanRoomHistory.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/cleanRoomHistory.ts","sourceRoot":"","sources":["app/lib/server/functions/cleanRoomHistory.ts"],"names":[],"mappings":"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","sourcesContent":["import { Cursor } from 'mongodb';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { deleteRoom } from './deleteRoom';\nimport { FileUpload } from '../../../file-upload/server';\nimport { Messages, Rooms, Subscriptions } from '../../../models/server';\nimport { api } from '../../../../server/sdk/api';\nimport { IMessage, IMessageDiscussion } from '../../../../definition/IMessage';\n\nexport const cleanRoomHistory = function ({\n\trid = '',\n\tlatest = new Date(),\n\toldest = new Date('0001-01-01T00:00:00Z'),\n\tinclusive = true,\n\tlimit = 0,\n\texcludePinned = true,\n\tignoreDiscussion = true,\n\tfilesOnly = false,\n\tfromUsers = [],\n\tignoreThreads = true,\n}): unknown {\n\tconst gt = inclusive ? '$gte' : '$gt';\n\tconst lt = inclusive ? '$lte' : '$lt';\n\n\tconst ts = { [gt]: oldest, [lt]: latest };\n\n\tconst text = `_${TAPi18n.__('File_removed_by_prune')}_`;\n\n\tlet fileCount = 0;\n\tMessages.findFilesByRoomIdPinnedTimestampAndUsers(rid, excludePinned, ignoreDiscussion, ts, fromUsers, ignoreThreads, {\n\t\tfields: { 'file._id': 1, 'pinned': 1 },\n\t\tlimit,\n\t}).forEach((document: IMessage) => {\n\t\tFileUpload.getStore('Uploads').deleteById(document.file?._id);\n\t\tfileCount++;\n\t\tif (filesOnly) {\n\t\t\tMessages.update({ _id: document._id }, { $unset: { file: 1 }, $set: { attachments: [{ color: '#FD745E', text }] } });\n\t\t}\n\t});\n\n\tif (filesOnly) {\n\t\treturn fileCount;\n\t}\n\n\tif (!ignoreDiscussion) {\n\t\tPromise.await(\n\t\t\t(\n\t\t\t\tMessages.findDiscussionByRoomIdPinnedTimestampAndUsers(rid, excludePinned, ts, fromUsers, {\n\t\t\t\t\tfields: { drid: 1 },\n\t\t\t\t\t...(limit && { limit }),\n\t\t\t\t}) as Cursor<IMessageDiscussion>\n\t\t\t).forEach(({ drid }) => deleteRoom(drid)),\n\t\t);\n\t}\n\n\tif (!ignoreThreads) {\n\t\tconst threads = new Set();\n\t\tMessages.findThreadsByRoomIdPinnedTimestampAndUsers(\n\t\t\t{ rid, pinned: excludePinned, ignoreDiscussion, ts, users: fromUsers },\n\t\t\t{ fields: { _id: 1 } },\n\t\t).forEach(({ _id }: { _id: string }) => threads.add(_id));\n\n\t\tif (threads.size > 0) {\n\t\t\tSubscriptions.removeUnreadThreadsByRoomId(rid, [...threads]);\n\t\t}\n\t}\n\n\tconst count = Messages.removeByIdPinnedTimestampLimitAndUsers(rid, excludePinned, ignoreDiscussion, ts, limit, fromUsers, ignoreThreads);\n\tif (count) {\n\t\tRooms.resetLastMessageById(rid);\n\t\tapi.broadcast('notify.deleteMessageBulk', rid, {\n\t\t\trid,\n\t\t\texcludePinned,\n\t\t\tignoreDiscussion,\n\t\t\tts,\n\t\t\tusers: fromUsers,\n\t\t});\n\t}\n\treturn count;\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/cleanRoomHistory.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/cleanRoomHistory.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  cleanRoomHistory: () => cleanRoomHistory\n});\nlet TAPi18n;\nmodule.link(\"meteor/rocketchat:tap-i18n\", {\n  TAPi18n(v) {\n    TAPi18n = v;\n  }\n\n}, 0);\nlet deleteRoom;\nmodule.link(\"./deleteRoom\", {\n  deleteRoom(v) {\n    deleteRoom = v;\n  }\n\n}, 1);\nlet FileUpload;\nmodule.link(\"../../../file-upload/server\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 2);\nlet Messages, Rooms, Subscriptions;\nmodule.link(\"../../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 3);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 4);\n\nconst cleanRoomHistory = function (_ref) {\n  let {\n    rid = '',\n    latest = new Date(),\n    oldest = new Date('0001-01-01T00:00:00Z'),\n    inclusive = true,\n    limit = 0,\n    excludePinned = true,\n    ignoreDiscussion = true,\n    filesOnly = false,\n    fromUsers = [],\n    ignoreThreads = true\n  } = _ref;\n  const gt = inclusive ? '$gte' : '$gt';\n  const lt = inclusive ? '$lte' : '$lt';\n  const ts = {\n    [gt]: oldest,\n    [lt]: latest\n  };\n  const text = \"_\".concat(TAPi18n.__('File_removed_by_prune'), \"_\");\n  let fileCount = 0;\n  Messages.findFilesByRoomIdPinnedTimestampAndUsers(rid, excludePinned, ignoreDiscussion, ts, fromUsers, ignoreThreads, {\n    fields: {\n      'file._id': 1,\n      'pinned': 1\n    },\n    limit\n  }).forEach(document => {\n    var _document$file;\n\n    FileUpload.getStore('Uploads').deleteById((_document$file = document.file) === null || _document$file === void 0 ? void 0 : _document$file._id);\n    fileCount++;\n\n    if (filesOnly) {\n      Messages.update({\n        _id: document._id\n      }, {\n        $unset: {\n          file: 1\n        },\n        $set: {\n          attachments: [{\n            color: '#FD745E',\n            text\n          }]\n        }\n      });\n    }\n  });\n\n  if (filesOnly) {\n    return fileCount;\n  }\n\n  if (!ignoreDiscussion) {\n    Promise.await(Messages.findDiscussionByRoomIdPinnedTimestampAndUsers(rid, excludePinned, ts, fromUsers, _objectSpread({\n      fields: {\n        drid: 1\n      }\n    }, limit && {\n      limit\n    })).forEach(_ref2 => {\n      let {\n        drid\n      } = _ref2;\n      return deleteRoom(drid);\n    }));\n  }\n\n  if (!ignoreThreads) {\n    const threads = new Set();\n    Messages.findThreadsByRoomIdPinnedTimestampAndUsers({\n      rid,\n      pinned: excludePinned,\n      ignoreDiscussion,\n      ts,\n      users: fromUsers\n    }, {\n      fields: {\n        _id: 1\n      }\n    }).forEach(_ref3 => {\n      let {\n        _id\n      } = _ref3;\n      return threads.add(_id);\n    });\n\n    if (threads.size > 0) {\n      Subscriptions.removeUnreadThreadsByRoomId(rid, [...threads]);\n    }\n  }\n\n  const count = Messages.removeByIdPinnedTimestampLimitAndUsers(rid, excludePinned, ignoreDiscussion, ts, limit, fromUsers, ignoreThreads);\n\n  if (count) {\n    Rooms.resetLastMessageById(rid);\n    api.broadcast('notify.deleteMessageBulk', rid, {\n      rid,\n      excludePinned,\n      ignoreDiscussion,\n      ts,\n      users: fromUsers\n    });\n  }\n\n  return count;\n};","map":{"version":3,"sources":["app/lib/server/functions/cleanRoomHistory.ts"],"names":[],"mappings":"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","sourcesContent":["import { Cursor } from 'mongodb';\nimport { TAPi18n } from 'meteor/rocketchat:tap-i18n';\n\nimport { deleteRoom } from './deleteRoom';\nimport { FileUpload } from '../../../file-upload/server';\nimport { Messages, Rooms, Subscriptions } from '../../../models/server';\nimport { api } from '../../../../server/sdk/api';\nimport { IMessage, IMessageDiscussion } from '../../../../definition/IMessage';\n\nexport const cleanRoomHistory = function ({\n\trid = '',\n\tlatest = new Date(),\n\toldest = new Date('0001-01-01T00:00:00Z'),\n\tinclusive = true,\n\tlimit = 0,\n\texcludePinned = true,\n\tignoreDiscussion = true,\n\tfilesOnly = false,\n\tfromUsers = [],\n\tignoreThreads = true,\n}): unknown {\n\tconst gt = inclusive ? '$gte' : '$gt';\n\tconst lt = inclusive ? '$lte' : '$lt';\n\n\tconst ts = { [gt]: oldest, [lt]: latest };\n\n\tconst text = `_${TAPi18n.__('File_removed_by_prune')}_`;\n\n\tlet fileCount = 0;\n\tMessages.findFilesByRoomIdPinnedTimestampAndUsers(rid, excludePinned, ignoreDiscussion, ts, fromUsers, ignoreThreads, {\n\t\tfields: { 'file._id': 1, 'pinned': 1 },\n\t\tlimit,\n\t}).forEach((document: IMessage) => {\n\t\tFileUpload.getStore('Uploads').deleteById(document.file?._id);\n\t\tfileCount++;\n\t\tif (filesOnly) {\n\t\t\tMessages.update({ _id: document._id }, { $unset: { file: 1 }, $set: { attachments: [{ color: '#FD745E', text }] } });\n\t\t}\n\t});\n\n\tif (filesOnly) {\n\t\treturn fileCount;\n\t}\n\n\tif (!ignoreDiscussion) {\n\t\tPromise.await(\n\t\t\t(\n\t\t\t\tMessages.findDiscussionByRoomIdPinnedTimestampAndUsers(rid, excludePinned, ts, fromUsers, {\n\t\t\t\t\tfields: { drid: 1 },\n\t\t\t\t\t...(limit && { limit }),\n\t\t\t\t}) as Cursor<IMessageDiscussion>\n\t\t\t).forEach(({ drid }) => deleteRoom(drid)),\n\t\t);\n\t}\n\n\tif (!ignoreThreads) {\n\t\tconst threads = new Set();\n\t\tMessages.findThreadsByRoomIdPinnedTimestampAndUsers(\n\t\t\t{ rid, pinned: excludePinned, ignoreDiscussion, ts, users: fromUsers },\n\t\t\t{ fields: { _id: 1 } },\n\t\t).forEach(({ _id }: { _id: string }) => threads.add(_id));\n\n\t\tif (threads.size > 0) {\n\t\t\tSubscriptions.removeUnreadThreadsByRoomId(rid, [...threads]);\n\t\t}\n\t}\n\n\tconst count = Messages.removeByIdPinnedTimestampLimitAndUsers(rid, excludePinned, ignoreDiscussion, ts, limit, fromUsers, ignoreThreads);\n\tif (count) {\n\t\tRooms.resetLastMessageById(rid);\n\t\tapi.broadcast('notify.deleteMessageBulk', rid, {\n\t\t\trid,\n\t\t\texcludePinned,\n\t\t\tignoreDiscussion,\n\t\t\tts,\n\t\t\tusers: fromUsers,\n\t\t});\n\t}\n\treturn count;\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"5ca6003707fb5642e8de127a4acacad39c23419d"}
