{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/getUsernameSuggestion.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/lib/server/functions/getUsernameSuggestion.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/getUsernameSuggestion.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/getUsernameSuggestion.ts","sourceRoot":"","sources":["app/lib/server/functions/getUsernameSuggestion.ts"],"names":[],"mappings":"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","sourcesContent":["import limax from 'limax';\n\nimport { IUser } from '../../../../definition/IUser';\nimport { Users } from '../../../models/server';\nimport { settings } from '../../../settings/server';\n\nfunction slug(text: string): string {\n\treturn limax(text, { replacement: '.' }).replace(/[^0-9a-z-_.]/g, '');\n}\n\nfunction usernameIsAvailable(username: string): boolean {\n\tif (username.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (username === 'all') {\n\t\treturn false;\n\t}\n\n\treturn !Users.findOneByUsernameIgnoringCase(username);\n}\n\nconst name = (username: string): string => (settings.get('UTF8_Names_Slugify') ? slug(username) : username);\n\nexport function generateUsernameSuggestion(user: Pick<IUser, 'name' | 'emails' | 'services'>): string | undefined {\n\tlet usernames = [];\n\n\tif (user.name) {\n\t\tusernames.push(name(user.name));\n\n\t\tconst nameParts = user.name.split(' ');\n\n\t\tif (nameParts.length > 1) {\n\t\t\tconst [first] = nameParts;\n\t\t\tconst last = nameParts[nameParts.length - 1];\n\t\t\tusernames.push(name(first[0] + last));\n\t\t\tusernames.push(name(first + last[0]));\n\t\t}\n\t}\n\n\tif (user?.name) {\n\t\tusernames.push(name(user.name));\n\t}\n\n\tif (Array.isArray(user.services)) {\n\t\tconst services = [\n\t\t\t...new Set(user.services.flatMap(({ name, username, firstName, lastName }) => [name, username, firstName, lastName])),\n\t\t];\n\t\tusernames.push(...services.map(name));\n\t}\n\n\tif (user.emails && user.emails.length > 0) {\n\t\tfor (const email of user.emails) {\n\t\t\tif (email.address && email.verified === true) {\n\t\t\t\tusernames.push(slug(email.address.replace(/@.+$/, '')));\n\t\t\t\tusernames.push(slug(email.address.replace(/(.+)@(\\w+).+/, '$1.$2')));\n\t\t\t}\n\t\t}\n\t}\n\n\tusernames = usernames.filter((e) => e);\n\n\tfor (const item of usernames) {\n\t\tif (usernameIsAvailable(item)) {\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tusernames.push(settings.get('Accounts_DefaultUsernamePrefixSuggestion'));\n\n\tlet index = Users.find({ username: new RegExp(`^${usernames[0]}-[0-9]+`) }).count();\n\tconst username = '';\n\twhile (!username) {\n\t\tif (usernameIsAvailable(`${usernames[0]}-${index}`)) {\n\t\t\treturn `${usernames[0]}-${index}`;\n\t\t}\n\t\tindex++;\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/getUsernameSuggestion.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/getUsernameSuggestion.ts"}},"code":"module.export({\n  generateUsernameSuggestion: () => generateUsernameSuggestion\n});\nlet limax;\nmodule.link(\"limax\", {\n  default(v) {\n    limax = v;\n  }\n\n}, 0);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 1);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 2);\n\nfunction slug(text) {\n  return limax(text, {\n    replacement: '.'\n  }).replace(/[^0-9a-z-_.]/g, '');\n}\n\nfunction usernameIsAvailable(username) {\n  if (username.length === 0) {\n    return false;\n  }\n\n  if (username === 'all') {\n    return false;\n  }\n\n  return !Users.findOneByUsernameIgnoringCase(username);\n}\n\nconst name = username => settings.get('UTF8_Names_Slugify') ? slug(username) : username;\n\nfunction generateUsernameSuggestion(user) {\n  let usernames = [];\n\n  if (user.name) {\n    usernames.push(name(user.name));\n    const nameParts = user.name.split(' ');\n\n    if (nameParts.length > 1) {\n      const [first] = nameParts;\n      const last = nameParts[nameParts.length - 1];\n      usernames.push(name(first[0] + last));\n      usernames.push(name(first + last[0]));\n    }\n  }\n\n  if (user !== null && user !== void 0 && user.name) {\n    usernames.push(name(user.name));\n  }\n\n  if (Array.isArray(user.services)) {\n    const services = [...new Set(user.services.flatMap(_ref => {\n      let {\n        name,\n        username,\n        firstName,\n        lastName\n      } = _ref;\n      return [name, username, firstName, lastName];\n    }))];\n    usernames.push(...services.map(name));\n  }\n\n  if (user.emails && user.emails.length > 0) {\n    for (const email of user.emails) {\n      if (email.address && email.verified === true) {\n        usernames.push(slug(email.address.replace(/@.+$/, '')));\n        usernames.push(slug(email.address.replace(/(.+)@(\\w+).+/, '$1.$2')));\n      }\n    }\n  }\n\n  usernames = usernames.filter(e => e);\n\n  for (const item of usernames) {\n    if (usernameIsAvailable(item)) {\n      return item;\n    }\n  }\n\n  usernames.push(settings.get('Accounts_DefaultUsernamePrefixSuggestion'));\n  let index = Users.find({\n    username: new RegExp(\"^\".concat(usernames[0], \"-[0-9]+\"))\n  }).count();\n  const username = '';\n\n  while (!username) {\n    if (usernameIsAvailable(\"\".concat(usernames[0], \"-\").concat(index))) {\n      return \"\".concat(usernames[0], \"-\").concat(index);\n    }\n\n    index++;\n  }\n}","map":{"version":3,"sources":["app/lib/server/functions/getUsernameSuggestion.ts"],"names":[],"mappings":"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","sourcesContent":["import limax from 'limax';\n\nimport { IUser } from '../../../../definition/IUser';\nimport { Users } from '../../../models/server';\nimport { settings } from '../../../settings/server';\n\nfunction slug(text: string): string {\n\treturn limax(text, { replacement: '.' }).replace(/[^0-9a-z-_.]/g, '');\n}\n\nfunction usernameIsAvailable(username: string): boolean {\n\tif (username.length === 0) {\n\t\treturn false;\n\t}\n\n\tif (username === 'all') {\n\t\treturn false;\n\t}\n\n\treturn !Users.findOneByUsernameIgnoringCase(username);\n}\n\nconst name = (username: string): string => (settings.get('UTF8_Names_Slugify') ? slug(username) : username);\n\nexport function generateUsernameSuggestion(user: Pick<IUser, 'name' | 'emails' | 'services'>): string | undefined {\n\tlet usernames = [];\n\n\tif (user.name) {\n\t\tusernames.push(name(user.name));\n\n\t\tconst nameParts = user.name.split(' ');\n\n\t\tif (nameParts.length > 1) {\n\t\t\tconst [first] = nameParts;\n\t\t\tconst last = nameParts[nameParts.length - 1];\n\t\t\tusernames.push(name(first[0] + last));\n\t\t\tusernames.push(name(first + last[0]));\n\t\t}\n\t}\n\n\tif (user?.name) {\n\t\tusernames.push(name(user.name));\n\t}\n\n\tif (Array.isArray(user.services)) {\n\t\tconst services = [\n\t\t\t...new Set(user.services.flatMap(({ name, username, firstName, lastName }) => [name, username, firstName, lastName])),\n\t\t];\n\t\tusernames.push(...services.map(name));\n\t}\n\n\tif (user.emails && user.emails.length > 0) {\n\t\tfor (const email of user.emails) {\n\t\t\tif (email.address && email.verified === true) {\n\t\t\t\tusernames.push(slug(email.address.replace(/@.+$/, '')));\n\t\t\t\tusernames.push(slug(email.address.replace(/(.+)@(\\w+).+/, '$1.$2')));\n\t\t\t}\n\t\t}\n\t}\n\n\tusernames = usernames.filter((e) => e);\n\n\tfor (const item of usernames) {\n\t\tif (usernameIsAvailable(item)) {\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tusernames.push(settings.get('Accounts_DefaultUsernamePrefixSuggestion'));\n\n\tlet index = Users.find({ username: new RegExp(`^${usernames[0]}-[0-9]+`) }).count();\n\tconst username = '';\n\twhile (!username) {\n\t\tif (usernameIsAvailable(`${usernames[0]}-${index}`)) {\n\t\t\treturn `${usernames[0]}-${index}`;\n\t\t}\n\t\tindex++;\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"88fb835f5fd890893373390d3ff53ddf83f9209f"}
