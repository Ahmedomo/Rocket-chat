{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/authorization/server/methods/addUserToRole.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/authorization/server/methods/addUserToRole.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/authorization/server/methods/addUserToRole.ts","inputSourceMap":{"version":3,"file":"app/authorization/server/methods/addUserToRole.ts","sourceRoot":"","sources":["app/authorization/server/methods/addUserToRole.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { Users } from '../../../models/server';\nimport { settings } from '../../../settings/server';\nimport { hasPermission } from '../functions/hasPermission';\nimport { api } from '../../../../server/sdk/api';\nimport { Roles } from '../../../models/server/raw';\nimport type { IRole } from '../../../../definition/IRole';\nimport type { IUser } from '../../../../definition/IUser';\nimport type { IRoom } from '../../../../definition/IRoom';\nimport { apiDeprecationLogger } from '../../../lib/server/lib/deprecationWarningLogger';\n\nMeteor.methods({\n\tasync 'authorization:addUserToRole'(roleId: IRole['_id'], username: IUser['username'], scope: IRoom['_id'] | undefined) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId || !hasPermission(userId, 'access-permissions')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed', {\n\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t\taction: 'Accessing_permissions',\n\t\t\t});\n\t\t}\n\n\t\tif (!roleId || !_.isString(roleId) || !username || !_.isString(username)) {\n\t\t\tthrow new Meteor.Error('error-invalid-arguments', 'Invalid arguments', {\n\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t});\n\t\t}\n\n\t\tlet role = await Roles.findOneById<Pick<IRole, '_id'>>(roleId, { projection: { _id: 1 } });\n\t\tif (!role) {\n\t\t\trole = await Roles.findOneByName<Pick<IRole, '_id'>>(roleId, { projection: { _id: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role', 'Invalid Role', {\n\t\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tapiDeprecationLogger.warn(`Calling authorization:addUserToRole with role names will be deprecated in future versions of Rocket.Chat`);\n\t\t}\n\n\t\tif (role._id === 'admin' && !hasPermission(userId, 'assign-admin-role')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Assigning admin is not allowed', {\n\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t\taction: 'Assign_admin',\n\t\t\t});\n\t\t}\n\n\t\tconst user = Users.findOneByUsernameIgnoringCase(username, {\n\t\t\tfields: {\n\t\t\t\t_id: 1,\n\t\t\t},\n\t\t});\n\n\t\tif (!user || !user._id) {\n\t\t\tthrow new Meteor.Error('error-user-not-found', 'User not found', {\n\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t});\n\t\t}\n\n\t\t// verify if user can be added to given scope\n\t\tif (scope && !(await Roles.canAddUserToRole(user._id, role._id, scope))) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'User is not part of given room', {\n\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t});\n\t\t}\n\n\t\tconst add = await Roles.addUserRoles(user._id, [role._id], scope);\n\n\t\tif (settings.get('UI_DisplayRoles')) {\n\t\t\tapi.broadcast('user.roleUpdate', {\n\t\t\t\ttype: 'added',\n\t\t\t\t_id: role._id,\n\t\t\t\tu: {\n\t\t\t\t\t_id: user._id,\n\t\t\t\t\tusername,\n\t\t\t\t},\n\t\t\t\tscope,\n\t\t\t});\n\t\t}\n\n\t\treturn add;\n\t},\n});\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/authorization/server/methods/addUserToRole.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/authorization/server/methods/addUserToRole.ts"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nlet _;\n\nmodule.link(\"underscore\", {\n  default(v) {\n    _ = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../../models/server\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet settings;\nmodule.link(\"../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 3);\nlet hasPermission;\nmodule.link(\"../functions/hasPermission\", {\n  hasPermission(v) {\n    hasPermission = v;\n  }\n\n}, 4);\nlet api;\nmodule.link(\"../../../../server/sdk/api\", {\n  api(v) {\n    api = v;\n  }\n\n}, 5);\nlet Roles;\nmodule.link(\"../../../models/server/raw\", {\n  Roles(v) {\n    Roles = v;\n  }\n\n}, 6);\nlet apiDeprecationLogger;\nmodule.link(\"../../../lib/server/lib/deprecationWarningLogger\", {\n  apiDeprecationLogger(v) {\n    apiDeprecationLogger = v;\n  }\n\n}, 7);\nMeteor.methods({\n  'authorization:addUserToRole'(roleId, username, scope) {\n    return Promise.asyncApply(() => {\n      const userId = Meteor.userId();\n\n      if (!userId || !hasPermission(userId, 'access-permissions')) {\n        throw new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed', {\n          method: 'authorization:addUserToRole',\n          action: 'Accessing_permissions'\n        });\n      }\n\n      if (!roleId || !_.isString(roleId) || !username || !_.isString(username)) {\n        throw new Meteor.Error('error-invalid-arguments', 'Invalid arguments', {\n          method: 'authorization:addUserToRole'\n        });\n      }\n\n      let role = Promise.await(Roles.findOneById(roleId, {\n        projection: {\n          _id: 1\n        }\n      }));\n\n      if (!role) {\n        role = Promise.await(Roles.findOneByName(roleId, {\n          projection: {\n            _id: 1\n          }\n        }));\n\n        if (!role) {\n          throw new Meteor.Error('error-invalid-role', 'Invalid Role', {\n            method: 'authorization:addUserToRole'\n          });\n        }\n\n        apiDeprecationLogger.warn(\"Calling authorization:addUserToRole with role names will be deprecated in future versions of Rocket.Chat\");\n      }\n\n      if (role._id === 'admin' && !hasPermission(userId, 'assign-admin-role')) {\n        throw new Meteor.Error('error-action-not-allowed', 'Assigning admin is not allowed', {\n          method: 'authorization:addUserToRole',\n          action: 'Assign_admin'\n        });\n      }\n\n      const user = Users.findOneByUsernameIgnoringCase(username, {\n        fields: {\n          _id: 1\n        }\n      });\n\n      if (!user || !user._id) {\n        throw new Meteor.Error('error-user-not-found', 'User not found', {\n          method: 'authorization:addUserToRole'\n        });\n      } // verify if user can be added to given scope\n\n\n      if (scope && !Promise.await(Roles.canAddUserToRole(user._id, role._id, scope))) {\n        throw new Meteor.Error('error-invalid-user', 'User is not part of given room', {\n          method: 'authorization:addUserToRole'\n        });\n      }\n\n      const add = Promise.await(Roles.addUserRoles(user._id, [role._id], scope));\n\n      if (settings.get('UI_DisplayRoles')) {\n        api.broadcast('user.roleUpdate', {\n          type: 'added',\n          _id: role._id,\n          u: {\n            _id: user._id,\n            username\n          },\n          scope\n        });\n      }\n\n      return add;\n    });\n  }\n\n});","map":{"version":3,"sources":["app/authorization/server/methods/addUserToRole.ts"],"names":[],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport _ from 'underscore';\n\nimport { Users } from '../../../models/server';\nimport { settings } from '../../../settings/server';\nimport { hasPermission } from '../functions/hasPermission';\nimport { api } from '../../../../server/sdk/api';\nimport { Roles } from '../../../models/server/raw';\nimport type { IRole } from '../../../../definition/IRole';\nimport type { IUser } from '../../../../definition/IUser';\nimport type { IRoom } from '../../../../definition/IRoom';\nimport { apiDeprecationLogger } from '../../../lib/server/lib/deprecationWarningLogger';\n\nMeteor.methods({\n\tasync 'authorization:addUserToRole'(roleId: IRole['_id'], username: IUser['username'], scope: IRoom['_id'] | undefined) {\n\t\tconst userId = Meteor.userId();\n\n\t\tif (!userId || !hasPermission(userId, 'access-permissions')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Accessing permissions is not allowed', {\n\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t\taction: 'Accessing_permissions',\n\t\t\t});\n\t\t}\n\n\t\tif (!roleId || !_.isString(roleId) || !username || !_.isString(username)) {\n\t\t\tthrow new Meteor.Error('error-invalid-arguments', 'Invalid arguments', {\n\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t});\n\t\t}\n\n\t\tlet role = await Roles.findOneById<Pick<IRole, '_id'>>(roleId, { projection: { _id: 1 } });\n\t\tif (!role) {\n\t\t\trole = await Roles.findOneByName<Pick<IRole, '_id'>>(roleId, { projection: { _id: 1 } });\n\n\t\t\tif (!role) {\n\t\t\t\tthrow new Meteor.Error('error-invalid-role', 'Invalid Role', {\n\t\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tapiDeprecationLogger.warn(`Calling authorization:addUserToRole with role names will be deprecated in future versions of Rocket.Chat`);\n\t\t}\n\n\t\tif (role._id === 'admin' && !hasPermission(userId, 'assign-admin-role')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Assigning admin is not allowed', {\n\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t\taction: 'Assign_admin',\n\t\t\t});\n\t\t}\n\n\t\tconst user = Users.findOneByUsernameIgnoringCase(username, {\n\t\t\tfields: {\n\t\t\t\t_id: 1,\n\t\t\t},\n\t\t});\n\n\t\tif (!user || !user._id) {\n\t\t\tthrow new Meteor.Error('error-user-not-found', 'User not found', {\n\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t});\n\t\t}\n\n\t\t// verify if user can be added to given scope\n\t\tif (scope && !(await Roles.canAddUserToRole(user._id, role._id, scope))) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'User is not part of given room', {\n\t\t\t\tmethod: 'authorization:addUserToRole',\n\t\t\t});\n\t\t}\n\n\t\tconst add = await Roles.addUserRoles(user._id, [role._id], scope);\n\n\t\tif (settings.get('UI_DisplayRoles')) {\n\t\t\tapi.broadcast('user.roleUpdate', {\n\t\t\t\ttype: 'added',\n\t\t\t\t_id: role._id,\n\t\t\t\tu: {\n\t\t\t\t\t_id: user._id,\n\t\t\t\t\tusername,\n\t\t\t\t},\n\t\t\t\tscope,\n\t\t\t});\n\t\t}\n\n\t\treturn add;\n\t},\n});\n"],"sourceRoot":""},"sourceType":"module","hash":"a50dbcf6298d411487274cfd77ac49417f79485d"}
