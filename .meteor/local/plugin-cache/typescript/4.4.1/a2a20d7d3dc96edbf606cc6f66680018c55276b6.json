{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/addUserToRoom.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/lib/server/functions/addUserToRoom.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/addUserToRoom.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/addUserToRoom.ts","sourceRoot":"","sources":["app/lib/server/functions/addUserToRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Meteor } from 'meteor/meteor';\n\nimport { AppEvents, Apps } from '../../../apps/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Messages, Rooms, Subscriptions } from '../../../models/server';\nimport { Team } from '../../../../server/sdk';\nimport { RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { IUser } from '../../../../definition/IUser';\nimport { IRoom } from '../../../../definition/IRoom';\n\nexport const addUserToRoom = function (\n\trid: string,\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tinviter?: Pick<IUser, '_id' | 'username'>,\n\tsilenced?: boolean,\n): boolean | unknown {\n\tconst now = new Date();\n\tconst room: IRoom = Rooms.findOneById(rid);\n\n\tconst roomDirectives = roomCoordinator.getRoomDirectives(room.t);\n\tif (\n\t\t!roomDirectives?.allowMemberAction(room, RoomMemberActions.JOIN) &&\n\t\t!roomDirectives?.allowMemberAction(room, RoomMemberActions.INVITE)\n\t) {\n\t\treturn;\n\t}\n\n\t// Check if user is already in room\n\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id);\n\tif (subscription) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tPromise.await(Apps.triggerEvent(AppEvents.IPreRoomUserJoined, room, user, inviter));\n\t} catch (error) {\n\t\tif (error instanceof AppsEngineException) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\tif (room.t === 'c' || room.t === 'p' || room.t === 'l') {\n\t\t// Add a new event, with an optional inviter\n\t\tcallbacks.run('beforeAddedToRoom', { user, inviter }, room);\n\n\t\t// Keep the current event\n\t\tcallbacks.run('beforeJoinRoom', user, room);\n\t}\n\n\tPromise.await(\n\t\tApps.triggerEvent(AppEvents.IPreRoomUserJoined, room, user, inviter).catch((error) => {\n\t\t\tif (error instanceof AppsEngineException) {\n\t\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}),\n\t);\n\n\tSubscriptions.createWithRoomAndUser(room, user, {\n\t\tts: now,\n\t\topen: true,\n\t\talert: true,\n\t\tunread: 1,\n\t\tuserMentions: 1,\n\t\tgroupMentions: 0,\n\t});\n\n\tif (!silenced) {\n\t\tif (inviter) {\n\t\t\tconst extraData = {\n\t\t\t\tts: now,\n\t\t\t\tu: {\n\t\t\t\t\t_id: inviter._id,\n\t\t\t\t\tusername: inviter.username,\n\t\t\t\t},\n\t\t\t};\n\t\t\tif (room.teamMain) {\n\t\t\t\tMessages.createUserAddedToTeamWithRoomIdAndUser(rid, user, extraData);\n\t\t\t} else {\n\t\t\t\tMessages.createUserAddedWithRoomIdAndUser(rid, user, extraData);\n\t\t\t}\n\t\t} else if (room.prid) {\n\t\t\tMessages.createUserJoinWithRoomIdAndUserDiscussion(rid, user, { ts: now });\n\t\t} else if (room.teamMain) {\n\t\t\tMessages.createUserJoinTeamWithRoomIdAndUser(rid, user, { ts: now });\n\t\t} else {\n\t\t\tMessages.createUserJoinWithRoomIdAndUser(rid, user, { ts: now });\n\t\t}\n\t}\n\n\tif (room.t === 'c' || room.t === 'p') {\n\t\tMeteor.defer(function () {\n\t\t\t// Add a new event, with an optional inviter\n\t\t\tcallbacks.run('afterAddedToRoom', { user, inviter }, room);\n\n\t\t\t// Keep the current event\n\t\t\tcallbacks.run('afterJoinRoom', user, room);\n\n\t\t\tApps.triggerEvent(AppEvents.IPostRoomUserJoined, room, user, inviter);\n\t\t});\n\t}\n\n\tif (room.teamMain && room.teamId && inviter) {\n\t\t// if user is joining to main team channel, create a membership\n\t\tPromise.await(Team.addMember(inviter, user._id, room.teamId));\n\t}\n\n\treturn true;\n};\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/addUserToRoom.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/addUserToRoom.ts"}},"code":"module.export({\n  addUserToRoom: () => addUserToRoom\n});\nlet AppsEngineException;\nmodule.link(\"@rocket.chat/apps-engine/definition/exceptions\", {\n  AppsEngineException(v) {\n    AppsEngineException = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet AppEvents, Apps;\nmodule.link(\"../../../apps/server\", {\n  AppEvents(v) {\n    AppEvents = v;\n  },\n\n  Apps(v) {\n    Apps = v;\n  }\n\n}, 2);\nlet callbacks;\nmodule.link(\"../../../../lib/callbacks\", {\n  callbacks(v) {\n    callbacks = v;\n  }\n\n}, 3);\nlet Messages, Rooms, Subscriptions;\nmodule.link(\"../../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  }\n\n}, 4);\nlet Team;\nmodule.link(\"../../../../server/sdk\", {\n  Team(v) {\n    Team = v;\n  }\n\n}, 5);\nlet RoomMemberActions;\nmodule.link(\"../../../../definition/IRoomTypeConfig\", {\n  RoomMemberActions(v) {\n    RoomMemberActions = v;\n  }\n\n}, 6);\nlet roomCoordinator;\nmodule.link(\"../../../../server/lib/rooms/roomCoordinator\", {\n  roomCoordinator(v) {\n    roomCoordinator = v;\n  }\n\n}, 7);\n\nconst addUserToRoom = function (rid, user, inviter, silenced) {\n  const now = new Date();\n  const room = Rooms.findOneById(rid);\n  const roomDirectives = roomCoordinator.getRoomDirectives(room.t);\n\n  if (!(roomDirectives !== null && roomDirectives !== void 0 && roomDirectives.allowMemberAction(room, RoomMemberActions.JOIN)) && !(roomDirectives !== null && roomDirectives !== void 0 && roomDirectives.allowMemberAction(room, RoomMemberActions.INVITE))) {\n    return;\n  } // Check if user is already in room\n\n\n  const subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id);\n\n  if (subscription) {\n    return;\n  }\n\n  try {\n    Promise.await(Apps.triggerEvent(AppEvents.IPreRoomUserJoined, room, user, inviter));\n  } catch (error) {\n    if (error instanceof AppsEngineException) {\n      throw new Meteor.Error('error-app-prevented', error.message);\n    }\n\n    throw error;\n  }\n\n  if (room.t === 'c' || room.t === 'p' || room.t === 'l') {\n    // Add a new event, with an optional inviter\n    callbacks.run('beforeAddedToRoom', {\n      user,\n      inviter\n    }, room); // Keep the current event\n\n    callbacks.run('beforeJoinRoom', user, room);\n  }\n\n  Promise.await(Apps.triggerEvent(AppEvents.IPreRoomUserJoined, room, user, inviter).catch(error => {\n    if (error instanceof AppsEngineException) {\n      throw new Meteor.Error('error-app-prevented', error.message);\n    }\n\n    throw error;\n  }));\n  Subscriptions.createWithRoomAndUser(room, user, {\n    ts: now,\n    open: true,\n    alert: true,\n    unread: 1,\n    userMentions: 1,\n    groupMentions: 0\n  });\n\n  if (!silenced) {\n    if (inviter) {\n      const extraData = {\n        ts: now,\n        u: {\n          _id: inviter._id,\n          username: inviter.username\n        }\n      };\n\n      if (room.teamMain) {\n        Messages.createUserAddedToTeamWithRoomIdAndUser(rid, user, extraData);\n      } else {\n        Messages.createUserAddedWithRoomIdAndUser(rid, user, extraData);\n      }\n    } else if (room.prid) {\n      Messages.createUserJoinWithRoomIdAndUserDiscussion(rid, user, {\n        ts: now\n      });\n    } else if (room.teamMain) {\n      Messages.createUserJoinTeamWithRoomIdAndUser(rid, user, {\n        ts: now\n      });\n    } else {\n      Messages.createUserJoinWithRoomIdAndUser(rid, user, {\n        ts: now\n      });\n    }\n  }\n\n  if (room.t === 'c' || room.t === 'p') {\n    Meteor.defer(function () {\n      // Add a new event, with an optional inviter\n      callbacks.run('afterAddedToRoom', {\n        user,\n        inviter\n      }, room); // Keep the current event\n\n      callbacks.run('afterJoinRoom', user, room);\n      Apps.triggerEvent(AppEvents.IPostRoomUserJoined, room, user, inviter);\n    });\n  }\n\n  if (room.teamMain && room.teamId && inviter) {\n    // if user is joining to main team channel, create a membership\n    Promise.await(Team.addMember(inviter, user._id, room.teamId));\n  }\n\n  return true;\n};","map":{"version":3,"sources":["app/lib/server/functions/addUserToRoom.ts"],"names":[],"mappings":"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","sourcesContent":["import { AppsEngineException } from '@rocket.chat/apps-engine/definition/exceptions';\nimport { Meteor } from 'meteor/meteor';\n\nimport { AppEvents, Apps } from '../../../apps/server';\nimport { callbacks } from '../../../../lib/callbacks';\nimport { Messages, Rooms, Subscriptions } from '../../../models/server';\nimport { Team } from '../../../../server/sdk';\nimport { RoomMemberActions } from '../../../../definition/IRoomTypeConfig';\nimport { roomCoordinator } from '../../../../server/lib/rooms/roomCoordinator';\nimport { IUser } from '../../../../definition/IUser';\nimport { IRoom } from '../../../../definition/IRoom';\n\nexport const addUserToRoom = function (\n\trid: string,\n\tuser: Pick<IUser, '_id' | 'username'>,\n\tinviter?: Pick<IUser, '_id' | 'username'>,\n\tsilenced?: boolean,\n): boolean | unknown {\n\tconst now = new Date();\n\tconst room: IRoom = Rooms.findOneById(rid);\n\n\tconst roomDirectives = roomCoordinator.getRoomDirectives(room.t);\n\tif (\n\t\t!roomDirectives?.allowMemberAction(room, RoomMemberActions.JOIN) &&\n\t\t!roomDirectives?.allowMemberAction(room, RoomMemberActions.INVITE)\n\t) {\n\t\treturn;\n\t}\n\n\t// Check if user is already in room\n\tconst subscription = Subscriptions.findOneByRoomIdAndUserId(rid, user._id);\n\tif (subscription) {\n\t\treturn;\n\t}\n\n\ttry {\n\t\tPromise.await(Apps.triggerEvent(AppEvents.IPreRoomUserJoined, room, user, inviter));\n\t} catch (error) {\n\t\tif (error instanceof AppsEngineException) {\n\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\tif (room.t === 'c' || room.t === 'p' || room.t === 'l') {\n\t\t// Add a new event, with an optional inviter\n\t\tcallbacks.run('beforeAddedToRoom', { user, inviter }, room);\n\n\t\t// Keep the current event\n\t\tcallbacks.run('beforeJoinRoom', user, room);\n\t}\n\n\tPromise.await(\n\t\tApps.triggerEvent(AppEvents.IPreRoomUserJoined, room, user, inviter).catch((error) => {\n\t\t\tif (error instanceof AppsEngineException) {\n\t\t\t\tthrow new Meteor.Error('error-app-prevented', error.message);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}),\n\t);\n\n\tSubscriptions.createWithRoomAndUser(room, user, {\n\t\tts: now,\n\t\topen: true,\n\t\talert: true,\n\t\tunread: 1,\n\t\tuserMentions: 1,\n\t\tgroupMentions: 0,\n\t});\n\n\tif (!silenced) {\n\t\tif (inviter) {\n\t\t\tconst extraData = {\n\t\t\t\tts: now,\n\t\t\t\tu: {\n\t\t\t\t\t_id: inviter._id,\n\t\t\t\t\tusername: inviter.username,\n\t\t\t\t},\n\t\t\t};\n\t\t\tif (room.teamMain) {\n\t\t\t\tMessages.createUserAddedToTeamWithRoomIdAndUser(rid, user, extraData);\n\t\t\t} else {\n\t\t\t\tMessages.createUserAddedWithRoomIdAndUser(rid, user, extraData);\n\t\t\t}\n\t\t} else if (room.prid) {\n\t\t\tMessages.createUserJoinWithRoomIdAndUserDiscussion(rid, user, { ts: now });\n\t\t} else if (room.teamMain) {\n\t\t\tMessages.createUserJoinTeamWithRoomIdAndUser(rid, user, { ts: now });\n\t\t} else {\n\t\t\tMessages.createUserJoinWithRoomIdAndUser(rid, user, { ts: now });\n\t\t}\n\t}\n\n\tif (room.t === 'c' || room.t === 'p') {\n\t\tMeteor.defer(function () {\n\t\t\t// Add a new event, with an optional inviter\n\t\t\tcallbacks.run('afterAddedToRoom', { user, inviter }, room);\n\n\t\t\t// Keep the current event\n\t\t\tcallbacks.run('afterJoinRoom', user, room);\n\n\t\t\tApps.triggerEvent(AppEvents.IPostRoomUserJoined, room, user, inviter);\n\t\t});\n\t}\n\n\tif (room.teamMain && room.teamId && inviter) {\n\t\t// if user is joining to main team channel, create a membership\n\t\tPromise.await(Team.addMember(inviter, user._id, room.teamId));\n\t}\n\n\treturn true;\n};\n"],"sourceRoot":""},"sourceType":"module","hash":"a2a20d7d3dc96edbf606cc6f66680018c55276b6"}
