{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/saveUserIdentity.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/lib/server/functions/saveUserIdentity.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/saveUserIdentity.ts","inputSourceMap":{"version":3,"file":"app/lib/server/functions/saveUserIdentity.ts","sourceRoot":"","sources":["app/lib/server/functions/saveUserIdentity.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { _setUsername } from './setUsername';\nimport { _setRealName } from './setRealName';\nimport { Messages, Rooms, Subscriptions, LivechatDepartmentAgents, Users } from '../../../models/server';\nimport { FileUpload } from '../../../file-upload/server';\nimport { updateGroupDMsName } from './updateGroupDMsName';\nimport { validateName } from './validateName';\nimport { IMessage } from '../../../../definition/IMessage';\n\n/**\n *\n * @param {object} changes changes to the user\n */\n\nexport function saveUserIdentity({\n\t_id,\n\tname: rawName,\n\tusername: rawUsername,\n}: { _id: string } & (\n\t| { name: string; username: string }\n\t| { name: string; username?: undefined }\n\t| { username: string; name?: undefined }\n)) {\n\tif (!_id) {\n\t\treturn false;\n\t}\n\n\tconst name = String(rawName).trim();\n\tconst username = String(rawUsername).trim();\n\n\tconst user = Users.findOneById(_id);\n\n\tconst previousUsername = user.username;\n\tconst previousName = user.name;\n\tconst nameChanged = previousName !== name;\n\tconst usernameChanged = previousUsername !== username;\n\n\tif (typeof rawUsername !== 'undefined' && usernameChanged) {\n\t\tif (!validateName(username)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!_setUsername(_id, username, user)) {\n\t\t\treturn false;\n\t\t}\n\t\tuser.username = username;\n\t}\n\n\tif (typeof rawName !== 'undefined' && nameChanged) {\n\t\tif (!_setRealName(_id, name, user)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// if coming from old username, update all references\n\tif (previousUsername) {\n\t\tif (usernameChanged && typeof rawUsername !== 'undefined') {\n\t\t\tMessages.updateAllUsernamesByUserId(user._id, username);\n\t\t\tMessages.updateUsernameOfEditByUserId(user._id, username);\n\t\t\tMessages.findByMention(previousUsername).forEach(function (msg: IMessage) {\n\t\t\t\tconst updatedMsg = msg.msg.replace(new RegExp(`@${previousUsername}`, 'ig'), `@${username}`);\n\t\t\t\treturn Messages.updateUsernameAndMessageOfMentionByIdAndOldUsername(msg._id, previousUsername, username, updatedMsg);\n\t\t\t});\n\t\t\tRooms.replaceUsername(previousUsername, username);\n\t\t\tRooms.replaceMutedUsername(previousUsername, username);\n\t\t\tRooms.replaceUsernameOfUserByUserId(user._id, username);\n\t\t\tSubscriptions.setUserUsernameByUserId(user._id, username);\n\n\t\t\tLivechatDepartmentAgents.replaceUsernameOfAgentByUserId(user._id, username);\n\n\t\t\tconst fileStore = FileUpload.getStore('Avatars');\n\t\t\tconst file = fileStore.model.findOneByName(previousUsername);\n\t\t\tif (file) {\n\t\t\t\tfileStore.model.updateFileNameById(file._id, username);\n\t\t\t}\n\t\t}\n\n\t\t// update other references if either the name or username has changed\n\t\tif (usernameChanged || nameChanged) {\n\t\t\t// update name and fname of 1-on-1 direct messages\n\t\t\tSubscriptions.updateDirectNameAndFnameByName(previousUsername, rawUsername && username, rawName && name);\n\n\t\t\t// update name and fname of group direct messages\n\t\t\tupdateGroupDMsName(user);\n\t\t}\n\t}\n\n\treturn true;\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/lib/server/functions/saveUserIdentity.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/lib/server/functions/saveUserIdentity.ts"}},"code":"module.export({\n  saveUserIdentity: () => saveUserIdentity\n});\n\nlet _setUsername;\n\nmodule.link(\"./setUsername\", {\n  _setUsername(v) {\n    _setUsername = v;\n  }\n\n}, 0);\n\nlet _setRealName;\n\nmodule.link(\"./setRealName\", {\n  _setRealName(v) {\n    _setRealName = v;\n  }\n\n}, 1);\nlet Messages, Rooms, Subscriptions, LivechatDepartmentAgents, Users;\nmodule.link(\"../../../models/server\", {\n  Messages(v) {\n    Messages = v;\n  },\n\n  Rooms(v) {\n    Rooms = v;\n  },\n\n  Subscriptions(v) {\n    Subscriptions = v;\n  },\n\n  LivechatDepartmentAgents(v) {\n    LivechatDepartmentAgents = v;\n  },\n\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet FileUpload;\nmodule.link(\"../../../file-upload/server\", {\n  FileUpload(v) {\n    FileUpload = v;\n  }\n\n}, 3);\nlet updateGroupDMsName;\nmodule.link(\"./updateGroupDMsName\", {\n  updateGroupDMsName(v) {\n    updateGroupDMsName = v;\n  }\n\n}, 4);\nlet validateName;\nmodule.link(\"./validateName\", {\n  validateName(v) {\n    validateName = v;\n  }\n\n}, 5);\n\nfunction saveUserIdentity(_ref) {\n  let {\n    _id,\n    name: rawName,\n    username: rawUsername\n  } = _ref;\n\n  if (!_id) {\n    return false;\n  }\n\n  const name = String(rawName).trim();\n  const username = String(rawUsername).trim();\n  const user = Users.findOneById(_id);\n  const previousUsername = user.username;\n  const previousName = user.name;\n  const nameChanged = previousName !== name;\n  const usernameChanged = previousUsername !== username;\n\n  if (typeof rawUsername !== 'undefined' && usernameChanged) {\n    if (!validateName(username)) {\n      return false;\n    }\n\n    if (!_setUsername(_id, username, user)) {\n      return false;\n    }\n\n    user.username = username;\n  }\n\n  if (typeof rawName !== 'undefined' && nameChanged) {\n    if (!_setRealName(_id, name, user)) {\n      return false;\n    }\n  } // if coming from old username, update all references\n\n\n  if (previousUsername) {\n    if (usernameChanged && typeof rawUsername !== 'undefined') {\n      Messages.updateAllUsernamesByUserId(user._id, username);\n      Messages.updateUsernameOfEditByUserId(user._id, username);\n      Messages.findByMention(previousUsername).forEach(function (msg) {\n        const updatedMsg = msg.msg.replace(new RegExp(\"@\".concat(previousUsername), 'ig'), \"@\".concat(username));\n        return Messages.updateUsernameAndMessageOfMentionByIdAndOldUsername(msg._id, previousUsername, username, updatedMsg);\n      });\n      Rooms.replaceUsername(previousUsername, username);\n      Rooms.replaceMutedUsername(previousUsername, username);\n      Rooms.replaceUsernameOfUserByUserId(user._id, username);\n      Subscriptions.setUserUsernameByUserId(user._id, username);\n      LivechatDepartmentAgents.replaceUsernameOfAgentByUserId(user._id, username);\n      const fileStore = FileUpload.getStore('Avatars');\n      const file = fileStore.model.findOneByName(previousUsername);\n\n      if (file) {\n        fileStore.model.updateFileNameById(file._id, username);\n      }\n    } // update other references if either the name or username has changed\n\n\n    if (usernameChanged || nameChanged) {\n      // update name and fname of 1-on-1 direct messages\n      Subscriptions.updateDirectNameAndFnameByName(previousUsername, rawUsername && username, rawName && name); // update name and fname of group direct messages\n\n      updateGroupDMsName(user);\n    }\n  }\n\n  return true;\n}","map":{"version":3,"sources":["app/lib/server/functions/saveUserIdentity.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { _setUsername } from './setUsername';\nimport { _setRealName } from './setRealName';\nimport { Messages, Rooms, Subscriptions, LivechatDepartmentAgents, Users } from '../../../models/server';\nimport { FileUpload } from '../../../file-upload/server';\nimport { updateGroupDMsName } from './updateGroupDMsName';\nimport { validateName } from './validateName';\nimport { IMessage } from '../../../../definition/IMessage';\n\n/**\n *\n * @param {object} changes changes to the user\n */\n\nexport function saveUserIdentity({\n\t_id,\n\tname: rawName,\n\tusername: rawUsername,\n}: { _id: string } & (\n\t| { name: string; username: string }\n\t| { name: string; username?: undefined }\n\t| { username: string; name?: undefined }\n)) {\n\tif (!_id) {\n\t\treturn false;\n\t}\n\n\tconst name = String(rawName).trim();\n\tconst username = String(rawUsername).trim();\n\n\tconst user = Users.findOneById(_id);\n\n\tconst previousUsername = user.username;\n\tconst previousName = user.name;\n\tconst nameChanged = previousName !== name;\n\tconst usernameChanged = previousUsername !== username;\n\n\tif (typeof rawUsername !== 'undefined' && usernameChanged) {\n\t\tif (!validateName(username)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!_setUsername(_id, username, user)) {\n\t\t\treturn false;\n\t\t}\n\t\tuser.username = username;\n\t}\n\n\tif (typeof rawName !== 'undefined' && nameChanged) {\n\t\tif (!_setRealName(_id, name, user)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t// if coming from old username, update all references\n\tif (previousUsername) {\n\t\tif (usernameChanged && typeof rawUsername !== 'undefined') {\n\t\t\tMessages.updateAllUsernamesByUserId(user._id, username);\n\t\t\tMessages.updateUsernameOfEditByUserId(user._id, username);\n\t\t\tMessages.findByMention(previousUsername).forEach(function (msg: IMessage) {\n\t\t\t\tconst updatedMsg = msg.msg.replace(new RegExp(`@${previousUsername}`, 'ig'), `@${username}`);\n\t\t\t\treturn Messages.updateUsernameAndMessageOfMentionByIdAndOldUsername(msg._id, previousUsername, username, updatedMsg);\n\t\t\t});\n\t\t\tRooms.replaceUsername(previousUsername, username);\n\t\t\tRooms.replaceMutedUsername(previousUsername, username);\n\t\t\tRooms.replaceUsernameOfUserByUserId(user._id, username);\n\t\t\tSubscriptions.setUserUsernameByUserId(user._id, username);\n\n\t\t\tLivechatDepartmentAgents.replaceUsernameOfAgentByUserId(user._id, username);\n\n\t\t\tconst fileStore = FileUpload.getStore('Avatars');\n\t\t\tconst file = fileStore.model.findOneByName(previousUsername);\n\t\t\tif (file) {\n\t\t\t\tfileStore.model.updateFileNameById(file._id, username);\n\t\t\t}\n\t\t}\n\n\t\t// update other references if either the name or username has changed\n\t\tif (usernameChanged || nameChanged) {\n\t\t\t// update name and fname of 1-on-1 direct messages\n\t\t\tSubscriptions.updateDirectNameAndFnameByName(previousUsername, rawUsername && username, rawName && name);\n\n\t\t\t// update name and fname of group direct messages\n\t\t\tupdateGroupDMsName(user);\n\t\t}\n\t}\n\n\treturn true;\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"cd5951bf22ca655603b32f4b3615a17f2c32eac7"}
