{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/ee/app/license/server/license.internalService.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"ee/app/license/server/license.internalService.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/ee/app/license/server/license.internalService.ts","inputSourceMap":{"version":3,"file":"ee/app/license/server/license.internalService.ts","sourceRoot":"","sources":["ee/app/license/server/license.internalService.ts"],"names":[],"mappings":"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","sourcesContent":["import { debounce } from 'underscore';\n\nimport { api } from '../../../../server/sdk/api';\nimport { ILicense } from '../../../../server/sdk/types/ILicense';\nimport { ServiceClassInternal } from '../../../../server/sdk/types/ServiceClass';\nimport { guestPermissions } from '../../authorization/lib/guestPermissions';\nimport { resetEnterprisePermissions } from '../../authorization/server/resetEnterprisePermissions';\nimport { getModules, hasLicense, isEnterprise, onModule, onValidateLicenses } from './license';\n\nexport class LicenseService extends ServiceClassInternal implements ILicense {\n\tprotected name = 'license';\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tonValidateLicenses((): void => {\n\t\t\tif (!isEnterprise()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.broadcast('authorization.guestPermissions', guestPermissions);\n\t\t\tresetEnterprisePermissions();\n\t\t});\n\n\t\tonModule((licenseModule) => {\n\t\t\tapi.broadcast('license.module', licenseModule);\n\t\t});\n\n\t\t/**\n\t\t * The main idea is if there is no scalability module enabled,\n\t\t * then we should not allow more than one service per environment.\n\t\t * So we list the services and nodes, and if there is more than\n\t\t * one, we inform the service that it should be disabled.\n\t\t */\n\t\tconst shutdownServices = debounce(async () => {\n\t\t\tif (hasLicense('scalability')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst services: {\n\t\t\t\tname: string;\n\t\t\t\tnodes: string[];\n\t\t\t}[] = await api.call('$node.services');\n\n\t\t\t// Filter only the duplicated services\n\t\t\tconst duplicated = services.filter((service) => {\n\t\t\t\treturn service.name !== '$node' && service.nodes.length > 1;\n\t\t\t});\n\n\t\t\tif (!duplicated.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst brokers: Record<string, string[]> = Object.fromEntries(\n\t\t\t\tduplicated.map((service) => {\n\t\t\t\t\t// remove the first node from the list\n\t\t\t\t\tconst [, ...nodes] = service.nodes;\n\t\t\t\t\treturn [service.name, nodes];\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst duplicatedServicesNames = duplicated.map((service) => service.name);\n\n\t\t\t// send shutdown signal to the duplicated services\n\t\t\tapi.broadcastToServices(duplicatedServicesNames, 'shutdown', brokers);\n\t\t}, 1000);\n\n\t\tthis.onEvent('$services.changed', async ({ localService }) => {\n\t\t\t// since this is an internal service, we can ignore this event if the service that triggered is a local service.\n\t\t\t// this will also prevent race conditions if a license is not in place when this process is starting up.\n\t\t\tif (localService) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tshutdownServices();\n\t\t});\n\t}\n\n\tasync started(): Promise<void> {\n\t\tif (!isEnterprise()) {\n\t\t\treturn;\n\t\t}\n\n\t\tapi.broadcast('authorization.guestPermissions', guestPermissions);\n\t\tresetEnterprisePermissions();\n\t}\n\n\thasLicense(feature: string): boolean {\n\t\treturn hasLicense(feature);\n\t}\n\n\tisEnterprise(): boolean {\n\t\treturn isEnterprise();\n\t}\n\n\tgetModules(): string[] {\n\t\treturn getModules();\n\t}\n\n\tgetGuestPermissions(): string[] {\n\t\treturn guestPermissions;\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/ee/app/license/server/license.internalService.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"ee/app/license/server/license.internalService.ts"}},"code":"!function (module1) {\n  module1.export({\n    LicenseService: () => LicenseService\n  });\n  let debounce;\n  module1.link(\"underscore\", {\n    debounce(v) {\n      debounce = v;\n    }\n\n  }, 0);\n  let api;\n  module1.link(\"../../../../server/sdk/api\", {\n    api(v) {\n      api = v;\n    }\n\n  }, 1);\n  let ServiceClassInternal;\n  module1.link(\"../../../../server/sdk/types/ServiceClass\", {\n    ServiceClassInternal(v) {\n      ServiceClassInternal = v;\n    }\n\n  }, 2);\n  let guestPermissions;\n  module1.link(\"../../authorization/lib/guestPermissions\", {\n    guestPermissions(v) {\n      guestPermissions = v;\n    }\n\n  }, 3);\n  let resetEnterprisePermissions;\n  module1.link(\"../../authorization/server/resetEnterprisePermissions\", {\n    resetEnterprisePermissions(v) {\n      resetEnterprisePermissions = v;\n    }\n\n  }, 4);\n  let getModules, hasLicense, isEnterprise, onModule, onValidateLicenses;\n  module1.link(\"./license\", {\n    getModules(v) {\n      getModules = v;\n    },\n\n    hasLicense(v) {\n      hasLicense = v;\n    },\n\n    isEnterprise(v) {\n      isEnterprise = v;\n    },\n\n    onModule(v) {\n      onModule = v;\n    },\n\n    onValidateLicenses(v) {\n      onValidateLicenses = v;\n    }\n\n  }, 5);\n\n  class LicenseService extends ServiceClassInternal {\n    constructor() {\n      super();\n      this.name = 'license';\n      onValidateLicenses(() => {\n        if (!isEnterprise()) {\n          return;\n        }\n\n        api.broadcast('authorization.guestPermissions', guestPermissions);\n        resetEnterprisePermissions();\n      });\n      onModule(licenseModule => {\n        api.broadcast('license.module', licenseModule);\n      });\n      /**\n       * The main idea is if there is no scalability module enabled,\n       * then we should not allow more than one service per environment.\n       * So we list the services and nodes, and if there is more than\n       * one, we inform the service that it should be disabled.\n       */\n\n      const shutdownServices = debounce(() => Promise.asyncApply(() => {\n        if (hasLicense('scalability')) {\n          return;\n        }\n\n        const services = Promise.await(api.call('$node.services')); // Filter only the duplicated services\n\n        const duplicated = services.filter(service => {\n          return service.name !== '$node' && service.nodes.length > 1;\n        });\n\n        if (!duplicated.length) {\n          return;\n        }\n\n        const brokers = Object.fromEntries(duplicated.map(service => {\n          // remove the first node from the list\n          const [, ...nodes] = service.nodes;\n          return [service.name, nodes];\n        }));\n        const duplicatedServicesNames = duplicated.map(service => service.name); // send shutdown signal to the duplicated services\n\n        api.broadcastToServices(duplicatedServicesNames, 'shutdown', brokers);\n      }), 1000);\n      this.onEvent('$services.changed', _ref => Promise.asyncApply(() => {\n        let {\n          localService\n        } = _ref;\n\n        // since this is an internal service, we can ignore this event if the service that triggered is a local service.\n        // this will also prevent race conditions if a license is not in place when this process is starting up.\n        if (localService) {\n          return;\n        }\n\n        shutdownServices();\n      }));\n    }\n\n    started() {\n      return Promise.asyncApply(() => {\n        if (!isEnterprise()) {\n          return;\n        }\n\n        api.broadcast('authorization.guestPermissions', guestPermissions);\n        resetEnterprisePermissions();\n      });\n    }\n\n    hasLicense(feature) {\n      return hasLicense(feature);\n    }\n\n    isEnterprise() {\n      return isEnterprise();\n    }\n\n    getModules() {\n      return getModules();\n    }\n\n    getGuestPermissions() {\n      return guestPermissions;\n    }\n\n  }\n}.call(this, module);","map":{"version":3,"sources":["ee/app/license/server/license.internalService.ts"],"names":[],"mappings":"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","sourcesContent":["import { debounce } from 'underscore';\n\nimport { api } from '../../../../server/sdk/api';\nimport { ILicense } from '../../../../server/sdk/types/ILicense';\nimport { ServiceClassInternal } from '../../../../server/sdk/types/ServiceClass';\nimport { guestPermissions } from '../../authorization/lib/guestPermissions';\nimport { resetEnterprisePermissions } from '../../authorization/server/resetEnterprisePermissions';\nimport { getModules, hasLicense, isEnterprise, onModule, onValidateLicenses } from './license';\n\nexport class LicenseService extends ServiceClassInternal implements ILicense {\n\tprotected name = 'license';\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tonValidateLicenses((): void => {\n\t\t\tif (!isEnterprise()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.broadcast('authorization.guestPermissions', guestPermissions);\n\t\t\tresetEnterprisePermissions();\n\t\t});\n\n\t\tonModule((licenseModule) => {\n\t\t\tapi.broadcast('license.module', licenseModule);\n\t\t});\n\n\t\t/**\n\t\t * The main idea is if there is no scalability module enabled,\n\t\t * then we should not allow more than one service per environment.\n\t\t * So we list the services and nodes, and if there is more than\n\t\t * one, we inform the service that it should be disabled.\n\t\t */\n\t\tconst shutdownServices = debounce(async () => {\n\t\t\tif (hasLicense('scalability')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst services: {\n\t\t\t\tname: string;\n\t\t\t\tnodes: string[];\n\t\t\t}[] = await api.call('$node.services');\n\n\t\t\t// Filter only the duplicated services\n\t\t\tconst duplicated = services.filter((service) => {\n\t\t\t\treturn service.name !== '$node' && service.nodes.length > 1;\n\t\t\t});\n\n\t\t\tif (!duplicated.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst brokers: Record<string, string[]> = Object.fromEntries(\n\t\t\t\tduplicated.map((service) => {\n\t\t\t\t\t// remove the first node from the list\n\t\t\t\t\tconst [, ...nodes] = service.nodes;\n\t\t\t\t\treturn [service.name, nodes];\n\t\t\t\t}),\n\t\t\t);\n\n\t\t\tconst duplicatedServicesNames = duplicated.map((service) => service.name);\n\n\t\t\t// send shutdown signal to the duplicated services\n\t\t\tapi.broadcastToServices(duplicatedServicesNames, 'shutdown', brokers);\n\t\t}, 1000);\n\n\t\tthis.onEvent('$services.changed', async ({ localService }) => {\n\t\t\t// since this is an internal service, we can ignore this event if the service that triggered is a local service.\n\t\t\t// this will also prevent race conditions if a license is not in place when this process is starting up.\n\t\t\tif (localService) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tshutdownServices();\n\t\t});\n\t}\n\n\tasync started(): Promise<void> {\n\t\tif (!isEnterprise()) {\n\t\t\treturn;\n\t\t}\n\n\t\tapi.broadcast('authorization.guestPermissions', guestPermissions);\n\t\tresetEnterprisePermissions();\n\t}\n\n\thasLicense(feature: string): boolean {\n\t\treturn hasLicense(feature);\n\t}\n\n\tisEnterprise(): boolean {\n\t\treturn isEnterprise();\n\t}\n\n\tgetModules(): string[] {\n\t\treturn getModules();\n\t}\n\n\tgetGuestPermissions(): string[] {\n\t\treturn guestPermissions;\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"73958746ddfaf503c1fb87139932c829d785d6c6"}
