{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/v1/voip/extensions.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/api/server/v1/voip/extensions.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/v1/voip/extensions.ts","inputSourceMap":{"version":3,"file":"app/api/server/v1/voip/extensions.ts","sourceRoot":"","sources":["app/api/server/v1/voip/extensions.ts"],"names":[],"mappings":"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","sourcesContent":["import { Match, check } from 'meteor/check';\n\nimport { API } from '../../api';\nimport { Users } from '../../../../models/server/raw/index';\nimport { Voip } from '../../../../../server/sdk';\nimport { IVoipExtensionBase } from '../../../../../definition/IVoipExtension';\nimport { generateJWT } from '../../../../utils/server/lib/JWTHelper';\nimport { settings } from '../../../../settings/server';\nimport { logger } from './logger';\n\n// Get the connector version and type\nAPI.v1.addRoute(\n\t'connector.getVersion',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-call-settings'] },\n\t{\n\t\tasync get() {\n\t\t\tconst version = await Voip.getConnectorVersion();\n\t\t\treturn API.v1.success(version);\n\t\t},\n\t},\n);\n\n// Get the extensions available on the call server\nAPI.v1.addRoute(\n\t'connector.extension.list',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-call-settings'] },\n\t{\n\t\tasync get() {\n\t\t\tconst list = await Voip.getExtensionList();\n\t\t\tconst result = list.result as IVoipExtensionBase[];\n\t\t\treturn API.v1.success({ extensions: result });\n\t\t},\n\t},\n);\n\n/* Get the details of a single extension.\n * Note : This API will either be called by  the endpoint\n * or will be consumed internally.\n */\nAPI.v1.addRoute(\n\t'connector.extension.getDetails',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-call-settings'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.requestParams(),\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\textension: String,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst endpointDetails = await Voip.getExtensionDetails(this.requestParams());\n\t\t\treturn API.v1.success({ ...endpointDetails.result });\n\t\t},\n\t},\n);\n\n/* Get the details for registration extension.\n */\n\nAPI.v1.addRoute(\n\t'connector.extension.getRegistrationInfoByExtension',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-call-settings'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.requestParams(),\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\textension: String,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst endpointDetails = await Voip.getRegistrationInfo(this.requestParams());\n\t\t\tconst encKey = settings.get('VoIP_JWT_Secret');\n\t\t\tif (!encKey) {\n\t\t\t\tlogger.warn('No JWT keys set. Sending registration info as plain text');\n\t\t\t\treturn API.v1.success({ ...endpointDetails.result });\n\t\t\t}\n\n\t\t\tconst result = generateJWT(endpointDetails.result, encKey);\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'connector.extension.getRegistrationInfoByUserId',\n\t{ authRequired: true, permissionsRequired: ['view-agent-extension-association'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.requestParams(),\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tid: String,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst { id } = this.requestParams();\n\n\t\t\tif (id !== this.userId) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst { extension } =\n\t\t\t\t(await Users.getVoipExtensionByUserId(id, {\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\tusername: 1,\n\t\t\t\t\t\textension: 1,\n\t\t\t\t\t},\n\t\t\t\t})) || {};\n\n\t\t\tif (!extension) {\n\t\t\t\treturn API.v1.notFound('Extension not found');\n\t\t\t}\n\n\t\t\tconst endpointDetails = await Voip.getRegistrationInfo({ extension });\n\t\t\tconst encKey = settings.get('VoIP_JWT_Secret');\n\t\t\tif (!encKey) {\n\t\t\t\tlogger.warn('No JWT keys set. Sending registration info as plain text');\n\t\t\t\treturn API.v1.success({ ...endpointDetails.result });\n\t\t\t}\n\n\t\t\tconst result = generateJWT(endpointDetails.result, encKey);\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t},\n);\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/api/server/v1/voip/extensions.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/api/server/v1/voip/extensions.ts"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.link(\"meteor/check\", {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet API;\nmodule.link(\"../../api\", {\n  API(v) {\n    API = v;\n  }\n\n}, 1);\nlet Users;\nmodule.link(\"../../../../models/server/raw/index\", {\n  Users(v) {\n    Users = v;\n  }\n\n}, 2);\nlet Voip;\nmodule.link(\"../../../../../server/sdk\", {\n  Voip(v) {\n    Voip = v;\n  }\n\n}, 3);\nlet generateJWT;\nmodule.link(\"../../../../utils/server/lib/JWTHelper\", {\n  generateJWT(v) {\n    generateJWT = v;\n  }\n\n}, 4);\nlet settings;\nmodule.link(\"../../../../settings/server\", {\n  settings(v) {\n    settings = v;\n  }\n\n}, 5);\nlet logger;\nmodule.link(\"./logger\", {\n  logger(v) {\n    logger = v;\n  }\n\n}, 6);\n// Get the connector version and type\nAPI.v1.addRoute('connector.getVersion', {\n  authRequired: true,\n  permissionsRequired: ['manage-voip-call-settings']\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const version = Promise.await(Voip.getConnectorVersion());\n      return API.v1.success(version);\n    });\n  }\n\n}); // Get the extensions available on the call server\n\nAPI.v1.addRoute('connector.extension.list', {\n  authRequired: true,\n  permissionsRequired: ['manage-voip-call-settings']\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      const list = Promise.await(Voip.getExtensionList());\n      const result = list.result;\n      return API.v1.success({\n        extensions: result\n      });\n    });\n  }\n\n});\n/* Get the details of a single extension.\n * Note : This API will either be called by  the endpoint\n * or will be consumed internally.\n */\n\nAPI.v1.addRoute('connector.extension.getDetails', {\n  authRequired: true,\n  permissionsRequired: ['manage-voip-call-settings']\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      check(this.requestParams(), Match.ObjectIncluding({\n        extension: String\n      }));\n      const endpointDetails = Promise.await(Voip.getExtensionDetails(this.requestParams()));\n      return API.v1.success(_objectSpread({}, endpointDetails.result));\n    });\n  }\n\n});\n/* Get the details for registration extension.\n */\n\nAPI.v1.addRoute('connector.extension.getRegistrationInfoByExtension', {\n  authRequired: true,\n  permissionsRequired: ['manage-voip-call-settings']\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      check(this.requestParams(), Match.ObjectIncluding({\n        extension: String\n      }));\n      const endpointDetails = Promise.await(Voip.getRegistrationInfo(this.requestParams()));\n      const encKey = settings.get('VoIP_JWT_Secret');\n\n      if (!encKey) {\n        logger.warn('No JWT keys set. Sending registration info as plain text');\n        return API.v1.success(_objectSpread({}, endpointDetails.result));\n      }\n\n      const result = generateJWT(endpointDetails.result, encKey);\n      return API.v1.success({\n        result\n      });\n    });\n  }\n\n});\nAPI.v1.addRoute('connector.extension.getRegistrationInfoByUserId', {\n  authRequired: true,\n  permissionsRequired: ['view-agent-extension-association']\n}, {\n  get() {\n    return Promise.asyncApply(() => {\n      check(this.requestParams(), Match.ObjectIncluding({\n        id: String\n      }));\n      const {\n        id\n      } = this.requestParams();\n\n      if (id !== this.userId) {\n        return API.v1.unauthorized();\n      }\n\n      const {\n        extension\n      } = Promise.await(Users.getVoipExtensionByUserId(id, {\n        projection: {\n          _id: 1,\n          username: 1,\n          extension: 1\n        }\n      })) || {};\n\n      if (!extension) {\n        return API.v1.notFound('Extension not found');\n      }\n\n      const endpointDetails = Promise.await(Voip.getRegistrationInfo({\n        extension\n      }));\n      const encKey = settings.get('VoIP_JWT_Secret');\n\n      if (!encKey) {\n        logger.warn('No JWT keys set. Sending registration info as plain text');\n        return API.v1.success(_objectSpread({}, endpointDetails.result));\n      }\n\n      const result = generateJWT(endpointDetails.result, encKey);\n      return API.v1.success({\n        result\n      });\n    });\n  }\n\n});","map":{"version":3,"sources":["app/api/server/v1/voip/extensions.ts"],"names":[],"mappings":"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","sourcesContent":["import { Match, check } from 'meteor/check';\n\nimport { API } from '../../api';\nimport { Users } from '../../../../models/server/raw/index';\nimport { Voip } from '../../../../../server/sdk';\nimport { IVoipExtensionBase } from '../../../../../definition/IVoipExtension';\nimport { generateJWT } from '../../../../utils/server/lib/JWTHelper';\nimport { settings } from '../../../../settings/server';\nimport { logger } from './logger';\n\n// Get the connector version and type\nAPI.v1.addRoute(\n\t'connector.getVersion',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-call-settings'] },\n\t{\n\t\tasync get() {\n\t\t\tconst version = await Voip.getConnectorVersion();\n\t\t\treturn API.v1.success(version);\n\t\t},\n\t},\n);\n\n// Get the extensions available on the call server\nAPI.v1.addRoute(\n\t'connector.extension.list',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-call-settings'] },\n\t{\n\t\tasync get() {\n\t\t\tconst list = await Voip.getExtensionList();\n\t\t\tconst result = list.result as IVoipExtensionBase[];\n\t\t\treturn API.v1.success({ extensions: result });\n\t\t},\n\t},\n);\n\n/* Get the details of a single extension.\n * Note : This API will either be called by  the endpoint\n * or will be consumed internally.\n */\nAPI.v1.addRoute(\n\t'connector.extension.getDetails',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-call-settings'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.requestParams(),\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\textension: String,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst endpointDetails = await Voip.getExtensionDetails(this.requestParams());\n\t\t\treturn API.v1.success({ ...endpointDetails.result });\n\t\t},\n\t},\n);\n\n/* Get the details for registration extension.\n */\n\nAPI.v1.addRoute(\n\t'connector.extension.getRegistrationInfoByExtension',\n\t{ authRequired: true, permissionsRequired: ['manage-voip-call-settings'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.requestParams(),\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\textension: String,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst endpointDetails = await Voip.getRegistrationInfo(this.requestParams());\n\t\t\tconst encKey = settings.get('VoIP_JWT_Secret');\n\t\t\tif (!encKey) {\n\t\t\t\tlogger.warn('No JWT keys set. Sending registration info as plain text');\n\t\t\t\treturn API.v1.success({ ...endpointDetails.result });\n\t\t\t}\n\n\t\t\tconst result = generateJWT(endpointDetails.result, encKey);\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t},\n);\n\nAPI.v1.addRoute(\n\t'connector.extension.getRegistrationInfoByUserId',\n\t{ authRequired: true, permissionsRequired: ['view-agent-extension-association'] },\n\t{\n\t\tasync get() {\n\t\t\tcheck(\n\t\t\t\tthis.requestParams(),\n\t\t\t\tMatch.ObjectIncluding({\n\t\t\t\t\tid: String,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tconst { id } = this.requestParams();\n\n\t\t\tif (id !== this.userId) {\n\t\t\t\treturn API.v1.unauthorized();\n\t\t\t}\n\n\t\t\tconst { extension } =\n\t\t\t\t(await Users.getVoipExtensionByUserId(id, {\n\t\t\t\t\tprojection: {\n\t\t\t\t\t\t_id: 1,\n\t\t\t\t\t\tusername: 1,\n\t\t\t\t\t\textension: 1,\n\t\t\t\t\t},\n\t\t\t\t})) || {};\n\n\t\t\tif (!extension) {\n\t\t\t\treturn API.v1.notFound('Extension not found');\n\t\t\t}\n\n\t\t\tconst endpointDetails = await Voip.getRegistrationInfo({ extension });\n\t\t\tconst encKey = settings.get('VoIP_JWT_Secret');\n\t\t\tif (!encKey) {\n\t\t\t\tlogger.warn('No JWT keys set. Sending registration info as plain text');\n\t\t\t\treturn API.v1.success({ ...endpointDetails.result });\n\t\t\t}\n\n\t\t\tconst result = generateJWT(endpointDetails.result, encKey);\n\t\t\treturn API.v1.success({ result });\n\t\t},\n\t},\n);\n"],"sourceRoot":""},"sourceType":"module","hash":"5f16f73ccce5c8cc791ae8ce22e87f6c0bb52c74"}
