{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/weslley/Documents/projects/Rocket.Chat/app/models/server/raw/VoipRooms.ts","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","logicalAssignment"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"app/models/server/raw/VoipRooms.ts","filename":"/home/weslley/Documents/projects/Rocket.Chat/app/models/server/raw/VoipRooms.ts","inputSourceMap":{"version":3,"file":"app/models/server/raw/VoipRooms.ts","sourceRoot":"","sources":["app/models/server/raw/VoipRooms.ts"],"names":[],"mappings":"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","sourcesContent":["import { FilterQuery, WithoutProjection, FindOneOptions, WriteOpResult, Cursor } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { IVoipRoom, IRoomClosingInfo } from '../../../../definition/IRoom';\nimport { Logger } from '../../../../server/lib/logger/Logger';\n\nexport class VoipRoomsRaw extends BaseRaw<IVoipRoom> {\n\tlogger = new Logger('VoipRoomsRaw');\n\n\tasync findOneOpenByVisitorToken(visitorToken: string, options: FindOneOptions<IVoipRoom> = {}): Promise<IVoipRoom | null> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\t't': 'v',\n\t\t\t'open': true,\n\t\t\t'v.token': visitorToken,\n\t\t};\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindOpenByAgentId(agentId: string): Cursor<IVoipRoom> {\n\t\treturn this.find({\n\t\t\t't': 'v',\n\t\t\t'open': true,\n\t\t\t'servedBy._id': agentId,\n\t\t});\n\t}\n\n\tasync findOneByAgentId(agentId: string): Promise<IVoipRoom | null> {\n\t\treturn this.findOne({\n\t\t\t't': 'v',\n\t\t\t'open': true,\n\t\t\t'servedBy._id': agentId,\n\t\t});\n\t}\n\n\tasync findOneVoipRoomById(id: string, options: WithoutProjection<FindOneOptions<IVoipRoom>> = {}): Promise<IVoipRoom | null> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\tt: 'v',\n\t\t\t_id: id,\n\t\t};\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findOneOpenByRoomIdAndVisitorToken(\n\t\troomId: string,\n\t\tvisitorToken: string,\n\t\toptions: FindOneOptions<IVoipRoom> = {},\n\t): Promise<IVoipRoom | null> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\t't': 'v',\n\t\t\t'_id': roomId,\n\t\t\t'open': true,\n\t\t\t'v.token': visitorToken,\n\t\t};\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findOneByVisitorToken(visitorToken: string, options: FindOneOptions<IVoipRoom> = {}): Promise<IVoipRoom | null> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\t't': 'v',\n\t\t\t'v.token': visitorToken,\n\t\t};\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findOneByIdAndVisitorToken(\n\t\t_id: IVoipRoom['_id'],\n\t\tvisitorToken: string,\n\t\toptions: FindOneOptions<IVoipRoom> = {},\n\t): Promise<IVoipRoom | null> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\t't': 'v',\n\t\t\t_id,\n\t\t\t'v.token': visitorToken,\n\t\t};\n\t\treturn this.findOne(query, options);\n\t}\n\n\tcloseByRoomId(roomId: IVoipRoom['_id'], closeInfo: IRoomClosingInfo): Promise<WriteOpResult> {\n\t\tconst { closer, closedBy, closedAt, callDuration, serviceTimeDuration, ...extraData } = closeInfo;\n\n\t\treturn this.update(\n\t\t\t{\n\t\t\t\t_id: roomId,\n\t\t\t\tt: 'v',\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tcloser,\n\t\t\t\t\tclosedBy,\n\t\t\t\t\tclosedAt,\n\t\t\t\t\tcallDuration,\n\t\t\t\t\t'metrics.serviceTimeDuration': serviceTimeDuration,\n\t\t\t\t\t'v.status': 'offline',\n\t\t\t\t\t...extraData,\n\t\t\t\t},\n\t\t\t\t$unset: {\n\t\t\t\t\topen: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tfindRoomsWithCriteria({\n\t\tagents,\n\t\topen,\n\t\tcreatedAt,\n\t\tclosedAt,\n\t\ttags,\n\t\tqueue,\n\t\tvisitorId,\n\t\toptions = {},\n\t}: {\n\t\tagents?: string[];\n\t\topen?: boolean;\n\t\tcreatedAt?: { start?: string; end?: string };\n\t\tclosedAt?: { start?: string; end?: string };\n\t\ttags?: string[];\n\t\tqueue?: string;\n\t\tvisitorId?: string;\n\t\toptions?: {\n\t\t\tsort?: Record<string, unknown>;\n\t\t\tcount?: number;\n\t\t\tfields?: Record<string, unknown>;\n\t\t\toffset?: number;\n\t\t};\n\t}): Cursor<IVoipRoom> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\tt: 'v',\n\t\t};\n\n\t\tif (agents) {\n\t\t\tquery.$or = [{ 'servedBy._id': { $in: agents } }, { 'servedBy.username': { $in: agents } }];\n\t\t}\n\t\tif (open !== undefined) {\n\t\t\tquery.open = { $exists: open };\n\t\t}\n\t\tif (visitorId && visitorId !== 'undefined') {\n\t\t\tquery['v._id'] = visitorId;\n\t\t}\n\t\tif (createdAt && Object.keys(createdAt).length) {\n\t\t\tquery.ts = {};\n\t\t\tif (createdAt.start) {\n\t\t\t\tquery.ts.$gte = new Date(createdAt.start);\n\t\t\t}\n\t\t\tif (createdAt.end) {\n\t\t\t\tquery.ts.$lte = new Date(createdAt.end);\n\t\t\t}\n\t\t}\n\t\tif (closedAt && Object.keys(closedAt).length) {\n\t\t\tquery.closedAt = {};\n\t\t\tif (closedAt.start) {\n\t\t\t\tquery.closedAt.$gte = new Date(closedAt.start);\n\t\t\t}\n\t\t\tif (closedAt.end) {\n\t\t\t\tquery.closedAt.$lte = new Date(closedAt.end);\n\t\t\t}\n\t\t}\n\t\tif (tags) {\n\t\t\tquery.tags = { $in: tags };\n\t\t}\n\t\tif (queue) {\n\t\t\tquery.queue = queue;\n\t\t}\n\n\t\treturn this.find(query, {\n\t\t\tsort: options.sort || { name: 1 },\n\t\t\tskip: options.offset,\n\t\t\tlimit: options.count,\n\t\t});\n\t}\n}\n"]},"targets":{"android":"95.0.0","chrome":"95.0.0","edge":"95.0.0","firefox":"78.0.0","ie":"10.0.0","ios":"15.0.0","opera":"81.0.0","safari":"15.1.0","samsung":"14.0.0"},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/weslley/Documents/projects/Rocket.Chat","root":"/home/weslley/Documents/projects/Rocket.Chat","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.16.5","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":true,"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]},"_verified":true},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"proposal-logical-assignment-operators","visitor":{"_exploded":{},"_verified":{},"AssignmentExpression":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/weslley/Documents/projects/Rocket.Chat/app/models/server/raw/VoipRooms.ts","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"app/models/server/raw/VoipRooms.ts"}},"code":"const _excluded = [\"closer\", \"closedBy\", \"closedAt\", \"callDuration\", \"serviceTimeDuration\"];\n\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\n\nlet _objectWithoutProperties;\n\nmodule.link(\"@babel/runtime/helpers/objectWithoutProperties\", {\n  default(v) {\n    _objectWithoutProperties = v;\n  }\n\n}, 1);\nmodule.export({\n  VoipRoomsRaw: () => VoipRoomsRaw\n});\nlet BaseRaw;\nmodule.link(\"./BaseRaw\", {\n  BaseRaw(v) {\n    BaseRaw = v;\n  }\n\n}, 0);\nlet Logger;\nmodule.link(\"../../../../server/lib/logger/Logger\", {\n  Logger(v) {\n    Logger = v;\n  }\n\n}, 1);\n\nclass VoipRoomsRaw extends BaseRaw {\n  constructor() {\n    super(...arguments);\n    this.logger = new Logger('VoipRoomsRaw');\n  }\n\n  findOneOpenByVisitorToken(visitorToken) {\n    return Promise.asyncApply(() => {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const query = {\n        't': 'v',\n        'open': true,\n        'v.token': visitorToken\n      };\n      return this.findOne(query, options);\n    });\n  }\n\n  findOpenByAgentId(agentId) {\n    return this.find({\n      't': 'v',\n      'open': true,\n      'servedBy._id': agentId\n    });\n  }\n\n  findOneByAgentId(agentId) {\n    return Promise.asyncApply(() => {\n      return this.findOne({\n        't': 'v',\n        'open': true,\n        'servedBy._id': agentId\n      });\n    });\n  }\n\n  findOneVoipRoomById(id) {\n    return Promise.asyncApply(() => {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const query = {\n        t: 'v',\n        _id: id\n      };\n      return this.findOne(query, options);\n    });\n  }\n\n  findOneOpenByRoomIdAndVisitorToken(roomId, visitorToken) {\n    return Promise.asyncApply(() => {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const query = {\n        't': 'v',\n        '_id': roomId,\n        'open': true,\n        'v.token': visitorToken\n      };\n      return this.findOne(query, options);\n    });\n  }\n\n  findOneByVisitorToken(visitorToken) {\n    return Promise.asyncApply(() => {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      const query = {\n        't': 'v',\n        'v.token': visitorToken\n      };\n      return this.findOne(query, options);\n    });\n  }\n\n  findOneByIdAndVisitorToken(_id, visitorToken) {\n    return Promise.asyncApply(() => {\n      let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const query = {\n        't': 'v',\n        _id,\n        'v.token': visitorToken\n      };\n      return this.findOne(query, options);\n    });\n  }\n\n  closeByRoomId(roomId, closeInfo) {\n    const {\n      closer,\n      closedBy,\n      closedAt,\n      callDuration,\n      serviceTimeDuration\n    } = closeInfo,\n          extraData = _objectWithoutProperties(closeInfo, _excluded);\n\n    return this.update({\n      _id: roomId,\n      t: 'v'\n    }, {\n      $set: _objectSpread({\n        closer,\n        closedBy,\n        closedAt,\n        callDuration,\n        'metrics.serviceTimeDuration': serviceTimeDuration,\n        'v.status': 'offline'\n      }, extraData),\n      $unset: {\n        open: 1\n      }\n    });\n  }\n\n  findRoomsWithCriteria(_ref) {\n    let {\n      agents,\n      open,\n      createdAt,\n      closedAt,\n      tags,\n      queue,\n      visitorId,\n      options = {}\n    } = _ref;\n    const query = {\n      t: 'v'\n    };\n\n    if (agents) {\n      query.$or = [{\n        'servedBy._id': {\n          $in: agents\n        }\n      }, {\n        'servedBy.username': {\n          $in: agents\n        }\n      }];\n    }\n\n    if (open !== undefined) {\n      query.open = {\n        $exists: open\n      };\n    }\n\n    if (visitorId && visitorId !== 'undefined') {\n      query['v._id'] = visitorId;\n    }\n\n    if (createdAt && Object.keys(createdAt).length) {\n      query.ts = {};\n\n      if (createdAt.start) {\n        query.ts.$gte = new Date(createdAt.start);\n      }\n\n      if (createdAt.end) {\n        query.ts.$lte = new Date(createdAt.end);\n      }\n    }\n\n    if (closedAt && Object.keys(closedAt).length) {\n      query.closedAt = {};\n\n      if (closedAt.start) {\n        query.closedAt.$gte = new Date(closedAt.start);\n      }\n\n      if (closedAt.end) {\n        query.closedAt.$lte = new Date(closedAt.end);\n      }\n    }\n\n    if (tags) {\n      query.tags = {\n        $in: tags\n      };\n    }\n\n    if (queue) {\n      query.queue = queue;\n    }\n\n    return this.find(query, {\n      sort: options.sort || {\n        name: 1\n      },\n      skip: options.offset,\n      limit: options.count\n    });\n  }\n\n}","map":{"version":3,"sources":["app/models/server/raw/VoipRooms.ts"],"names":[],"mappings":"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","sourcesContent":["import { FilterQuery, WithoutProjection, FindOneOptions, WriteOpResult, Cursor } from 'mongodb';\n\nimport { BaseRaw } from './BaseRaw';\nimport { IVoipRoom, IRoomClosingInfo } from '../../../../definition/IRoom';\nimport { Logger } from '../../../../server/lib/logger/Logger';\n\nexport class VoipRoomsRaw extends BaseRaw<IVoipRoom> {\n\tlogger = new Logger('VoipRoomsRaw');\n\n\tasync findOneOpenByVisitorToken(visitorToken: string, options: FindOneOptions<IVoipRoom> = {}): Promise<IVoipRoom | null> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\t't': 'v',\n\t\t\t'open': true,\n\t\t\t'v.token': visitorToken,\n\t\t};\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindOpenByAgentId(agentId: string): Cursor<IVoipRoom> {\n\t\treturn this.find({\n\t\t\t't': 'v',\n\t\t\t'open': true,\n\t\t\t'servedBy._id': agentId,\n\t\t});\n\t}\n\n\tasync findOneByAgentId(agentId: string): Promise<IVoipRoom | null> {\n\t\treturn this.findOne({\n\t\t\t't': 'v',\n\t\t\t'open': true,\n\t\t\t'servedBy._id': agentId,\n\t\t});\n\t}\n\n\tasync findOneVoipRoomById(id: string, options: WithoutProjection<FindOneOptions<IVoipRoom>> = {}): Promise<IVoipRoom | null> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\tt: 'v',\n\t\t\t_id: id,\n\t\t};\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findOneOpenByRoomIdAndVisitorToken(\n\t\troomId: string,\n\t\tvisitorToken: string,\n\t\toptions: FindOneOptions<IVoipRoom> = {},\n\t): Promise<IVoipRoom | null> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\t't': 'v',\n\t\t\t'_id': roomId,\n\t\t\t'open': true,\n\t\t\t'v.token': visitorToken,\n\t\t};\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findOneByVisitorToken(visitorToken: string, options: FindOneOptions<IVoipRoom> = {}): Promise<IVoipRoom | null> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\t't': 'v',\n\t\t\t'v.token': visitorToken,\n\t\t};\n\t\treturn this.findOne(query, options);\n\t}\n\n\tasync findOneByIdAndVisitorToken(\n\t\t_id: IVoipRoom['_id'],\n\t\tvisitorToken: string,\n\t\toptions: FindOneOptions<IVoipRoom> = {},\n\t): Promise<IVoipRoom | null> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\t't': 'v',\n\t\t\t_id,\n\t\t\t'v.token': visitorToken,\n\t\t};\n\t\treturn this.findOne(query, options);\n\t}\n\n\tcloseByRoomId(roomId: IVoipRoom['_id'], closeInfo: IRoomClosingInfo): Promise<WriteOpResult> {\n\t\tconst { closer, closedBy, closedAt, callDuration, serviceTimeDuration, ...extraData } = closeInfo;\n\n\t\treturn this.update(\n\t\t\t{\n\t\t\t\t_id: roomId,\n\t\t\t\tt: 'v',\n\t\t\t},\n\t\t\t{\n\t\t\t\t$set: {\n\t\t\t\t\tcloser,\n\t\t\t\t\tclosedBy,\n\t\t\t\t\tclosedAt,\n\t\t\t\t\tcallDuration,\n\t\t\t\t\t'metrics.serviceTimeDuration': serviceTimeDuration,\n\t\t\t\t\t'v.status': 'offline',\n\t\t\t\t\t...extraData,\n\t\t\t\t},\n\t\t\t\t$unset: {\n\t\t\t\t\topen: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tfindRoomsWithCriteria({\n\t\tagents,\n\t\topen,\n\t\tcreatedAt,\n\t\tclosedAt,\n\t\ttags,\n\t\tqueue,\n\t\tvisitorId,\n\t\toptions = {},\n\t}: {\n\t\tagents?: string[];\n\t\topen?: boolean;\n\t\tcreatedAt?: { start?: string; end?: string };\n\t\tclosedAt?: { start?: string; end?: string };\n\t\ttags?: string[];\n\t\tqueue?: string;\n\t\tvisitorId?: string;\n\t\toptions?: {\n\t\t\tsort?: Record<string, unknown>;\n\t\t\tcount?: number;\n\t\t\tfields?: Record<string, unknown>;\n\t\t\toffset?: number;\n\t\t};\n\t}): Cursor<IVoipRoom> {\n\t\tconst query: FilterQuery<IVoipRoom> = {\n\t\t\tt: 'v',\n\t\t};\n\n\t\tif (agents) {\n\t\t\tquery.$or = [{ 'servedBy._id': { $in: agents } }, { 'servedBy.username': { $in: agents } }];\n\t\t}\n\t\tif (open !== undefined) {\n\t\t\tquery.open = { $exists: open };\n\t\t}\n\t\tif (visitorId && visitorId !== 'undefined') {\n\t\t\tquery['v._id'] = visitorId;\n\t\t}\n\t\tif (createdAt && Object.keys(createdAt).length) {\n\t\t\tquery.ts = {};\n\t\t\tif (createdAt.start) {\n\t\t\t\tquery.ts.$gte = new Date(createdAt.start);\n\t\t\t}\n\t\t\tif (createdAt.end) {\n\t\t\t\tquery.ts.$lte = new Date(createdAt.end);\n\t\t\t}\n\t\t}\n\t\tif (closedAt && Object.keys(closedAt).length) {\n\t\t\tquery.closedAt = {};\n\t\t\tif (closedAt.start) {\n\t\t\t\tquery.closedAt.$gte = new Date(closedAt.start);\n\t\t\t}\n\t\t\tif (closedAt.end) {\n\t\t\t\tquery.closedAt.$lte = new Date(closedAt.end);\n\t\t\t}\n\t\t}\n\t\tif (tags) {\n\t\t\tquery.tags = { $in: tags };\n\t\t}\n\t\tif (queue) {\n\t\t\tquery.queue = queue;\n\t\t}\n\n\t\treturn this.find(query, {\n\t\t\tsort: options.sort || { name: 1 },\n\t\t\tskip: options.offset,\n\t\t\tlimit: options.count,\n\t\t});\n\t}\n}\n"],"sourceRoot":""},"sourceType":"module","hash":"74b20878660ce3bebaef05978e32299035c1406e"}
